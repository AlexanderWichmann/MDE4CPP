#############################################################################
#																			#
#		 			CMakeList created by ecore4CPP Generator				# 
#																			#
#############################################################################

# C++ project of model types.ecore, generated by Ecore4CPP

CMAKE_MINIMUM_REQUIRED(VERSION 3.9)

if(UNIX AND NOT APPLE)
    # for Linux, BSD, Solaris, Minix
SET(CMAKE_C_COMPILER "gcc")
SET(CMAKE_CXX_COMPILER "g++")
else()
   SET(CMAKE_C_COMPILER "gcc.exe")
   SET(CMAKE_CXX_COMPILER "g++.exe")
endif()

PROJECT(types)

IF(NOT CMAKE_BUILD_TYPE) 
    SET(CMAKE_BUILD_TYPE Debug)
ENDIF(NOT CMAKE_BUILD_TYPE)
SET(CMAKE_DEBUG_POSTFIX d)

SET(CMAKE_CXX_STANDARD 14)
SET(GCC_COVERAGE_LINK_FLAGS "-fopenmp")
SET(CMAKE_CXX_FLAGS "-std=c++11 -Wall -Wno-overloaded-virtual -Wdeprecated-declarations -fopenmp -fmax-errors=5")
SET(CMAKE_CXX_FLAGS_DEBUG " -Og -ggdb -DACTIVITY_DEBUG_ON -m64")
SET(CMAKE_CXX_FLAGS_RELEASE " -O3 -DNDEBUG")

string(REPLACE "\\" "/" MDE4CPP_HOME $ENV{MDE4CPP_HOME})

SET(SOURCE_FILES
	impl/TypesFactoryImpl.cpp
	TypesFactory.cpp
	impl/TypesPackageImpl.cpp
	TypesPackage.cpp
	impl/TypesPluginImpl.cpp
	TypesPlugin.cpp
	#${MDE4CPP_HOME}/application/include/util/ProfileCallCount.cpp
)

INCLUDE_DIRECTORIES(
	../
	${MDE4CPP_HOME}/application/include
)

IF(NOT UNIX)
	IF (CMAKE_BUILD_TYPE STREQUAL "Debug")
		FIND_LIBRARY(PLUGINFRAMEWORK_DEBUG PluginFrameworkd ${MDE4CPP_HOME}/application/lib)
	ELSE()
		FIND_LIBRARY(PLUGINFRAMEWORK_RELEASE PluginFramework ${MDE4CPP_HOME}/application/lib)
	ENDIF()
ENDIF()

IF(UNIX AND NOT APPLE)
    # for Linux, BSD, Solaris, Minix
	IF (CMAKE_BUILD_TYPE STREQUAL "Debug")
		FIND_LIBRARY(ECORE_DEBUG ecored.so ${MDE4CPP_HOME}/application/bin)
	ELSE()
		FIND_LIBRARY(ECORE_RELEASE ecore.so ${MDE4CPP_HOME}/application/bin)
	ENDIF()
ELSE()
	IF (CMAKE_BUILD_TYPE STREQUAL "Debug")
		FIND_LIBRARY(ECORE_DEBUG ecored ${MDE4CPP_HOME}/application/lib)
	ELSE()
		FIND_LIBRARY(ECORE_RELEASE ecore ${MDE4CPP_HOME}/application/lib)
	ENDIF()
ENDIF()

ADD_LIBRARY(${PROJECT_NAME} SHARED ${SOURCE_FILES})

IF(CMAKE_BUILD_TYPE STREQUAL "Debug")
	IF(NOT UNIX)
		TARGET_LINK_LIBRARIES(${PROJECT_NAME} 
			debug ${PLUGINFRAMEWORK_DEBUG}
			debug ${ECORE_DEBUG}
	)
	ELSE()
		TARGET_LINK_LIBRARIES(${PROJECT_NAME} 
			#debug ${PLUGINFRAMEWORK_DEBUG}
			debug ${ECORE_DEBUG}
		)
	ENDIF()
ELSE()
	IF(NOT UNIX) 
		TARGET_LINK_LIBRARIES(${PROJECT_NAME}
			optimized ${PLUGINFRAMEWORK_RELEASE}
			optimized ${ECORE_RELEASE}
	)
	ELSE()
		TARGET_LINK_LIBRARIES(${PROJECT_NAME}
			#optimized ${PLUGINFRAMEWORK_RELEASE}
			optimized ${ECORE_RELEASE}
		)
	ENDIF()
ENDIF()

SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES PREFIX "")

#-----------------------------------------------------
# DELIVERING binaries and header to ${MDE4CPP_HOME}
#-----------------------------------------------------

INSTALL(TARGETS ${PROJECT_NAME}
	RUNTIME DESTINATION ${MDE4CPP_HOME}/application/bin
    LIBRARY DESTINATION ${MDE4CPP_HOME}/application/bin
    ARCHIVE DESTINATION ${MDE4CPP_HOME}/application/lib
)

INSTALL(DIRECTORY . DESTINATION ${MDE4CPP_HOME}/application/include/${PROJECT_NAME}
	FILES_MATCHING PATTERN "*.hpp"
	PATTERN ".cmake" EXCLUDE
)
