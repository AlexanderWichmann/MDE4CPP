plugins {
  id "tui.sse.mde4cpp.mde4cpp-compile-plugin" version "0.3"
}
apply plugin: "base"

task compileUMLBenchmark(type: tui.sse.mde4cpp.MDE4CPPCompile) {
	group 'Examples'
	description 'compile UMLBenchmark'
	
	projectFolder = file("./src/UMLBenchmark")
	
	dependsOn getRootProject().getTasksByName('buildEcore', true)
	dependsOn getRootProject().getTasksByName('buildTypes', true)
	dependsOn getRootProject().getTasksByName('buildUML', true)
	dependsOn getRootProject().getTasksByName('buildUmlReflection', true)
}

clean.doFirst {
	def cmakeFolder = file("./src/UMLBenchmark/.cmake")
	if(cmakeFolder.exists()) {
    	delete cmakeFolder.absolutePath
   		println "deleting folder " + cmakeFolder.absolutePath
	}
}