//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef SUBSETUNIONBENCHMARKDEPTHFACTORYIMPL_HPP
#define SUBSETUNIONBENCHMARKDEPTHFACTORYIMPL_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

#ifdef ACTIVITY_DEBUG_ON
    #define ACT_DEBUG(a) a
#else
    #define ACT_DEBUG(a) /**/
#endif

#include "impl/EFactoryImpl.hpp"

#include "ContainerImpl.hpp"
#include "Container_Level1Impl.hpp"
#include "Container_Level10Impl.hpp"
#include "Container_Level2Impl.hpp"
#include "Container_Level3Impl.hpp"
#include "Container_Level4Impl.hpp"
#include "Container_Level5Impl.hpp"
#include "Container_Level6Impl.hpp"
#include "Container_Level7Impl.hpp"
#include "Container_Level8Impl.hpp"
#include "Container_Level9Impl.hpp"
#include "ElementImpl.hpp"
#include "Element_Level1Impl.hpp"
#include "Element_Level10Impl.hpp"
#include "Element_Level2Impl.hpp"
#include "Element_Level3Impl.hpp"
#include "Element_Level4Impl.hpp"
#include "Element_Level5Impl.hpp"
#include "Element_Level6Impl.hpp"
#include "Element_Level7Impl.hpp"
#include "Element_Level8Impl.hpp"
#include "Element_Level9Impl.hpp"
#include "ExampleModelImpl.hpp"

#include "SubsetUnionBenchmarkDepthFactory.hpp"

namespace subsetUnionBenchmarkDepth 
{
	class SubsetUnionBenchmarkDepthFactoryImpl : virtual public ecore::EFactoryImpl , virtual public SubsetUnionBenchmarkDepthFactory 
	{
		private:    
			SubsetUnionBenchmarkDepthFactoryImpl(SubsetUnionBenchmarkDepthFactoryImpl const&) = delete;
			SubsetUnionBenchmarkDepthFactoryImpl& operator=(SubsetUnionBenchmarkDepthFactoryImpl const&) = delete;

		protected:
			friend class SubsetUnionBenchmarkDepthFactory;
			// Constructor
			SubsetUnionBenchmarkDepthFactoryImpl();

		public:
			virtual ~SubsetUnionBenchmarkDepthFactoryImpl();
			virtual std::shared_ptr<ecore::EObject> create(std::string _className,  std::shared_ptr<ecore::EObject> container, const unsigned int referenceID = -1) const;
			virtual std::shared_ptr<ecore::EObject> create(const unsigned int classID,  std::shared_ptr<ecore::EObject> container = nullptr, const unsigned int referenceID = -1) const;
			virtual std::shared_ptr<ecore::EObject> create(std::shared_ptr<ecore::EClass> _class, std::shared_ptr<EObject> _container = nullptr) const;
			virtual std::shared_ptr<ecore::EObject> create(std::string _className) const;

			//Creator functions
			virtual std::shared_ptr<Container> createContainer() const ;
			
			virtual std::shared_ptr<Container_Level1> createContainer_Level1() const ;
			
			virtual std::shared_ptr<Container_Level10> createContainer_Level10() const ;
			
			virtual std::shared_ptr<Container_Level2> createContainer_Level2() const ;
			
			virtual std::shared_ptr<Container_Level3> createContainer_Level3() const ;
			
			virtual std::shared_ptr<Container_Level4> createContainer_Level4() const ;
			
			virtual std::shared_ptr<Container_Level5> createContainer_Level5() const ;
			
			virtual std::shared_ptr<Container_Level6> createContainer_Level6() const ;
			
			virtual std::shared_ptr<Container_Level7> createContainer_Level7() const ;
			
			virtual std::shared_ptr<Container_Level8> createContainer_Level8() const ;
			
			virtual std::shared_ptr<Container_Level9> createContainer_Level9() const ;
			
			virtual std::shared_ptr<Element> createElement() const ;
			
			virtual std::shared_ptr<Element_Level1> createElement_Level1() const ;
			
			virtual std::shared_ptr<Element_Level10> createElement_Level10() const ;
			
			virtual std::shared_ptr<Element_Level2> createElement_Level2() const ;
			
			virtual std::shared_ptr<Element_Level3> createElement_Level3() const ;
			
			virtual std::shared_ptr<Element_Level4> createElement_Level4() const ;
			
			virtual std::shared_ptr<Element_Level5> createElement_Level5() const ;
			
			virtual std::shared_ptr<Element_Level6> createElement_Level6() const ;
			
			virtual std::shared_ptr<Element_Level7> createElement_Level7() const ;
			
			virtual std::shared_ptr<Element_Level8> createElement_Level8() const ;
			
			virtual std::shared_ptr<Element_Level9> createElement_Level9() const ;
			
			virtual std::shared_ptr<ExampleModel> createExampleModel() const ;
			
			

			//Package
			virtual std::shared_ptr<SubsetUnionBenchmarkDepthPackage> getSubsetUnionBenchmarkDepthPackage() const;

		private:
			static SubsetUnionBenchmarkDepthFactory* create();
            std::map<std::string,unsigned int> m_idMap;
			virtual void init() {}

	};
}
#endif /* end of include guard: SUBSETUNIONBENCHMARKDEPTHFACTORYIMPL_HPP */

