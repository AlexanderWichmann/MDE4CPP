//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef SUBSETUNIONBENCHMARK_CONTAINER_LEVEL9CONTAINER_LEVEL9IMPL_HPP
#define SUBSETUNIONBENCHMARK_CONTAINER_LEVEL9CONTAINER_LEVEL9IMPL_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

#ifdef ACTIVITY_DEBUG_ON
    #define ACT_DEBUG(a) a
#else
    #define ACT_DEBUG(a) /**/
#endif

//*********************************
// generated Includes

//Model includes
#include "../Container_Level9.hpp"

#include "impl/ContainerImpl.hpp"

#include "SubsetUnion.hpp"



//*********************************
namespace subsetUnionBenchmark 
{
	class Container_Level9Impl :virtual public ContainerImpl, virtual public Container_Level9 
	{
		public: 
			Container_Level9Impl(const Container_Level9Impl & obj);
			virtual std::shared_ptr<ecore::EObject> copy() const;

		private:    
			Container_Level9Impl& operator=(Container_Level9Impl const&) = delete;

		protected:
			friend class SubsetUnionBenchmarkFactoryImpl;
			Container_Level9Impl();



		public:
			//destructor
			virtual ~Container_Level9Impl();
			
			//*********************************
			// Operations
			//*********************************
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			
			//*********************************
			// Reference
			//*********************************
			/*!
			 */
			virtual std::shared_ptr<Subset<subsetUnionBenchmark::Element_Level9, subsetUnionBenchmark::Element > > getSubset9() const ;
			
							
			
			//*********************************
			// Union Getter
			//*********************************
			/*!
			 */
			virtual std::shared_ptr<Union<subsetUnionBenchmark::Element> > getUnion() const ; 
			 
			//*********************************
			// Structural Feature Getter/Setter
			//*********************************
			
			virtual boost::any eGet(int featureID, bool resolve, bool coreType) const ;
			
		protected:
			virtual std::shared_ptr<ecore::EClass> eStaticClass() const;
	};
}
#endif /* end of include guard: SUBSETUNIONBENCHMARK_CONTAINER_LEVEL9CONTAINER_LEVEL9IMPL_HPP */

