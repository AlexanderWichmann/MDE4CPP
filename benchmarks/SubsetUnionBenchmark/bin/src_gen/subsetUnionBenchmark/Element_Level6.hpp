//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef SUBSETUNIONBENCHMARK_ELEMENT_LEVEL6_HPP
#define SUBSETUNIONBENCHMARK_ELEMENT_LEVEL6_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

#ifdef ACTIVITY_DEBUG_ON
    #define ACT_DEBUG(a) a
#else
    #define ACT_DEBUG(a) /**/
#endif

#include <string>
#include <map>
#include <vector>
#include "SubsetUnion.hpp"
#include "boost/shared_ptr.hpp"
#include "boost/any.hpp"

//*********************************
// generated Includes

//Forward Declaration for used types
namespace subsetUnionBenchmark 
{
	class Element;
}

// base class includes
#include "Element.hpp"

// enum includes


//*********************************
namespace subsetUnionBenchmark 
{
	/*!
	 */
	class Element_Level6:virtual public Element
	{
		public:
 			Element_Level6(const Element_Level6 &) {}
			Element_Level6& operator=(Element_Level6 const&) = delete;

		protected:
			Element_Level6(){}


		public:
			virtual std::shared_ptr<ecore::EObject> copy() const = 0;

			//destructor
			virtual ~Element_Level6() {}

			//*********************************
			// Operations
			//*********************************
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			//*********************************
			// Reference
			//*********************************
			

		protected:
			//*********************************
			// Attribute Members
			//*********************************
			
			
			//*********************************
			// Reference Members
			//*********************************
			

		public:
			//*********************************
			// Union Getter
			//*********************************
			 
	};

}
#endif /* end of include guard: SUBSETUNIONBENCHMARK_ELEMENT_LEVEL6_HPP */

