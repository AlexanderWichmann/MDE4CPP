#############################################################################
#																			#
#		 			CMakeList created by UML4CPP Generator					# 
#																			#
#############################################################################

# C++ project of application for subsetUnionBenchmark.ecore, generated by UML4CPP

CMAKE_MINIMUM_REQUIRED(VERSION 3.9)

SET(CMAKE_C_COMPILER "gcc.exe")
SET(CMAKE_CXX_COMPILER "g++.exe")

# Start of user code project_name
# You may manually edit the project name, won't be overwritten upon generation.
PROJECT(App_subsetUnionBenchmark)
# End of user code

IF(NOT CMAKE_BUILD_TYPE) 
    SET(CMAKE_BUILD_TYPE Debug)
ENDIF(NOT CMAKE_BUILD_TYPE)
SET(CMAKE_CXX_STANDARD 14)
SET(GCC_COVERAGE_LINK_FLAGS "-fopenmp")
SET(CMAKE_CXX_FLAGS "-std=c++11 -Wall -Wno-overloaded-virtual -Wdeprecated-declarations -fopenmp -fmax-errors=5")
SET(CMAKE_CXX_FLAGS_DEBUG " -Og -ggdb -DACTIVITY_DEBUG_ON")
SET(CMAKE_CXX_FLAGS_RELEASE " -O3 -DNDEBUG")

string(REPLACE "\\" "/" MDE4CPP_HOME $ENV{MDE4CPP_HOME})

SET(SOURCE_FILES
	src/main.cpp
# Start of user code cpp
# You may manually edit the following lines, won't be overwritten upon generation.

# End of user code
)


INCLUDE_DIRECTORIES(
	.
	${MDE4CPP_HOME}/application/include
	${MDE4CPP_HOME}/application/include/abstractDataTypes
if(NOT UNIX)
	${MDE4CPP_HOME}/application/include/PluginFramework
endif()
	${MDE4CPP_HOME}/application/include/ecore
	${MDE4CPP_HOME}/application/include/subsetUnionBenchmark
# Start of user code includes
# You may manually edit the following lines, won't be overwritten upon generation.

# End of user code
)

if(NOT UNIX)
	FIND_LIBRARY(PLUGINFRAMEWORK_DEBUG PluginFrameworkd ${MDE4CPP_HOME}/application/lib)
	FIND_LIBRARY(PLUGINFRAMEWORK_RELEASE PluginFramework ${MDE4CPP_HOME}/application/lib)
endif()

if(UNIX AND NOT APPLE)
    # for Linux, BSD, Solaris, Minix
	FIND_LIBRARY(ECORE_DEBUG ecored.so ${MDE4CPP_HOME}/application/bin)
	FIND_LIBRARY(ECORE_RELEASE ecore.so ${MDE4CPP_HOME}/application/bin)
	FIND_LIBRARY(SUBSETUNIONBENCHMARK_DEBUG subsetUnionBenchmarkd.so ${MDE4CPP_HOME}/application/lib)
	FIND_LIBRARY(SUBSETUNIONBENCHMARK_RELEASE subsetUnionBenchmark.so ${MDE4CPP_HOME}/application/lib)
# Start of user code library_finding_unix
# You may manually edit the following lines, won't be overwritten upon generation.

# End of user code
else()
	FIND_LIBRARY(ECORE_DEBUG ecored ${MDE4CPP_HOME}/application/lib)
	FIND_LIBRARY(ECORE_RELEASE ecore ${MDE4CPP_HOME}/application/lib)
	FIND_LIBRARY(SUBSETUNIONBENCHMARK_DEBUG subsetUnionBenchmarkd ${MDE4CPP_HOME}/application/lib)
	FIND_LIBRARY(SUBSETUNIONBENCHMARK_RELEASE subsetUnionBenchmark ${MDE4CPP_HOME}/application/lib)
# Start of user code library_finding_not_unix
# You may manually edit the following lines, won't be overwritten upon generation.

# End of user code
endif()


ADD_EXECUTABLE(${PROJECT_NAME} ${SOURCE_FILES})
SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES DEBUG_POSTFIX "d")

if(NOT UNIX)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} 
	debug ${PLUGINFRAMEWORK_DEBUG}
	debug ${ECORE_DEBUG}
	debug ${SUBSETUNIONBENCHMARK_DEBUG}
# Start of user code library_assigning_debug_not_unix
# You may manually edit the following lines, won't be overwritten upon generation.

# End of user code
)
else()
TARGET_LINK_LIBRARIES(${PROJECT_NAME} 
	#debug ${PLUGINFRAMEWORK_DEBUG}
	debug ${ECORE_DEBUG}
	debug ${SUBSETUNIONBENCHMARK_DEBUG}
# Start of user code library_assigning_debug_unix
# You may manually edit the following lines, won't be overwritten upon generation.

# End of user code
)
endif()

if(NOT UNIX) 
TARGET_LINK_LIBRARIES(${PROJECT_NAME}
	optimized ${PLUGINFRAMEWORK_RELEASE}
	optimized ${ECORE_RELEASE}
	optimized ${SUBSETUNIONBENCHMARK_RELEASE}
# Start of user code library_assigning_release_not_unix 
# You may manually edit the following lines, won't be overwritten upon generation.

# End of user code
)
else()
TARGET_LINK_LIBRARIES(${PROJECT_NAME}
	#optimized ${PLUGINFRAMEWORK_RELEASE}
	optimized ${ECORE_RELEASE}
	optimized ${SUBSETUNIONBENCHMARK_RELEASE}
# Start of user code library_assigning_release_unix 
# You may manually edit the following lines, won't be overwritten upon generation.

# End of user code
)
endif()

#-----------------------------------------------------
# DELIVERING binaries and header to ${MDE4CPP_HOME}
#-----------------------------------------------------

INSTALL(TARGETS ${PROJECT_NAME} 
	RUNTIME DESTINATION ${MDE4CPP_HOME}/application/bin
)
