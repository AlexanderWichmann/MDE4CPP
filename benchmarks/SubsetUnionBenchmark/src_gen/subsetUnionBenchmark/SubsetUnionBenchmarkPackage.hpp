//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef SUBSETUNIONBENCHMARKPACKAGE_HPP
#define SUBSETUNIONBENCHMARKPACKAGE_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

#ifdef ACTIVITY_DEBUG_ON
    #define ACT_DEBUG(a) a
#else
    #define ACT_DEBUG(a) /**/
#endif

#include "EPackage.hpp"
#include "EcoreFactory.hpp"

namespace subsetUnionBenchmark 
{	class Container;
	class Element;
	class Element_Level1;
	class Element_Level10;
	class Element_Level2;
	class Element_Level3;
	class Element_Level4;
	class Element_Level5;
	class Element_Level6;
	class Element_Level7;
	class Element_Level8;
	class Element_Level9;
	class SubsetUnionBenchmarkPackage;
}

namespace subsetUnionBenchmark 
{
	/*!
	The Metamodel Package for the subsetUnionBenchmark metamodel. This package is used to enable the reflection of model elements. It contains all model elements
	which were described in an ecore file.
	*/
	/*!
	 */
	class SubsetUnionBenchmarkPackage : virtual public ecore::EPackage 
	{
		private:    
			SubsetUnionBenchmarkPackage(SubsetUnionBenchmarkPackage const&) = delete;
			SubsetUnionBenchmarkPackage& operator=(SubsetUnionBenchmarkPackage const&) = delete;

		protected:
			SubsetUnionBenchmarkPackage(){}

		public:
			//static variables
			static const std::string eNAME;
			static const std::string eNS_URI;
			static const std::string eNS_PREFIX;

			// Begin Class Container
			//Class and Feature IDs 
			static const int CONTAINER = 0;
			static const int CONTAINER_FEATURE_COUNT = 12;
			static const int CONTAINER_OPERATION_COUNT = 0;
			static const int CONTAINER_NAME = 01;
			
			static const int CONTAINER_SUBSET1 = 02;
			static const int CONTAINER_SUBSET10 = 011;
			static const int CONTAINER_SUBSET2 = 03;
			static const int CONTAINER_SUBSET3 = 04;
			static const int CONTAINER_SUBSET4 = 05;
			static const int CONTAINER_SUBSET5 = 06;
			static const int CONTAINER_SUBSET6 = 07;
			static const int CONTAINER_SUBSET7 = 08;
			static const int CONTAINER_SUBSET8 = 09;
			static const int CONTAINER_SUBSET9 = 010;
			static const int CONTAINER_UNION = 00;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getContainer() const = 0;
			virtual std::shared_ptr<ecore::EAttribute> getContainer_Name() const = 0;
			
			virtual std::shared_ptr<ecore::EReference> getContainer_Subset1() const = 0;
			virtual std::shared_ptr<ecore::EReference> getContainer_Subset10() const = 0;
			virtual std::shared_ptr<ecore::EReference> getContainer_Subset2() const = 0;
			virtual std::shared_ptr<ecore::EReference> getContainer_Subset3() const = 0;
			virtual std::shared_ptr<ecore::EReference> getContainer_Subset4() const = 0;
			virtual std::shared_ptr<ecore::EReference> getContainer_Subset5() const = 0;
			virtual std::shared_ptr<ecore::EReference> getContainer_Subset6() const = 0;
			virtual std::shared_ptr<ecore::EReference> getContainer_Subset7() const = 0;
			virtual std::shared_ptr<ecore::EReference> getContainer_Subset8() const = 0;
			virtual std::shared_ptr<ecore::EReference> getContainer_Subset9() const = 0;
			virtual std::shared_ptr<ecore::EReference> getContainer_Union() const = 0;
			
			
			// End Class Container


			// Begin Class Element
			//Class and Feature IDs 
			static const int ELEMENT = 1;
			static const int ELEMENT_FEATURE_COUNT = 1;
			static const int ELEMENT_OPERATION_COUNT = 0;
			static const int ELEMENT_NAME = 10;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement() const = 0;
			virtual std::shared_ptr<ecore::EAttribute> getElement_Name() const = 0;
			
			
			
			// End Class Element


			// Begin Class Element_Level1
			//Class and Feature IDs 
			static const int ELEMENT_LEVEL1 = 2;
			static const int ELEMENT_LEVEL1_FEATURE_COUNT = 1;
			static const int ELEMENT_LEVEL1_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level1() const = 0;
			
			
			
			// End Class Element_Level1


			// Begin Class Element_Level10
			//Class and Feature IDs 
			static const int ELEMENT_LEVEL10 = 11;
			static const int ELEMENT_LEVEL10_FEATURE_COUNT = 1;
			static const int ELEMENT_LEVEL10_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level10() const = 0;
			
			
			
			// End Class Element_Level10


			// Begin Class Element_Level2
			//Class and Feature IDs 
			static const int ELEMENT_LEVEL2 = 3;
			static const int ELEMENT_LEVEL2_FEATURE_COUNT = 1;
			static const int ELEMENT_LEVEL2_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level2() const = 0;
			
			
			
			// End Class Element_Level2


			// Begin Class Element_Level3
			//Class and Feature IDs 
			static const int ELEMENT_LEVEL3 = 4;
			static const int ELEMENT_LEVEL3_FEATURE_COUNT = 1;
			static const int ELEMENT_LEVEL3_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level3() const = 0;
			
			
			
			// End Class Element_Level3


			// Begin Class Element_Level4
			//Class and Feature IDs 
			static const int ELEMENT_LEVEL4 = 5;
			static const int ELEMENT_LEVEL4_FEATURE_COUNT = 1;
			static const int ELEMENT_LEVEL4_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level4() const = 0;
			
			
			
			// End Class Element_Level4


			// Begin Class Element_Level5
			//Class and Feature IDs 
			static const int ELEMENT_LEVEL5 = 6;
			static const int ELEMENT_LEVEL5_FEATURE_COUNT = 1;
			static const int ELEMENT_LEVEL5_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level5() const = 0;
			
			
			
			// End Class Element_Level5


			// Begin Class Element_Level6
			//Class and Feature IDs 
			static const int ELEMENT_LEVEL6 = 7;
			static const int ELEMENT_LEVEL6_FEATURE_COUNT = 1;
			static const int ELEMENT_LEVEL6_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level6() const = 0;
			
			
			
			// End Class Element_Level6


			// Begin Class Element_Level7
			//Class and Feature IDs 
			static const int ELEMENT_LEVEL7 = 8;
			static const int ELEMENT_LEVEL7_FEATURE_COUNT = 1;
			static const int ELEMENT_LEVEL7_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level7() const = 0;
			
			
			
			// End Class Element_Level7


			// Begin Class Element_Level8
			//Class and Feature IDs 
			static const int ELEMENT_LEVEL8 = 9;
			static const int ELEMENT_LEVEL8_FEATURE_COUNT = 1;
			static const int ELEMENT_LEVEL8_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level8() const = 0;
			
			
			
			// End Class Element_Level8


			// Begin Class Element_Level9
			//Class and Feature IDs 
			static const int ELEMENT_LEVEL9 = 10;
			static const int ELEMENT_LEVEL9_FEATURE_COUNT = 1;
			static const int ELEMENT_LEVEL9_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level9() const = 0;
			
			
			
			// End Class Element_Level9

			
			

			//Singleton Instance and Getter
			private:
				static std::shared_ptr<SubsetUnionBenchmarkPackage> instance;
			public:
				static std::shared_ptr<SubsetUnionBenchmarkPackage> eInstance();
	};
}
#endif /* end of include guard: SUBSETUNIONBENCHMARKPACKAGE_HPP */

