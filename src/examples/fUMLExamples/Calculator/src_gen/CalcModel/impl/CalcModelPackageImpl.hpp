//********************************************************************
//*    	
//* Warning: This file was generated by MDE4CPP Generator
//*
//********************************************************************

#ifndef CALCMODEL_METAMODELPACKAGEIMPL_HPP
#define CALCMODEL_METAMODELPACKAGEIMPL_HPP

#include "CalcModel/CalcModelPackage.hpp"
#include "uml/impl/PackageImpl.hpp"	

namespace uml
{
	class LiteralBoolean;
	class LiteralInteger;
	class LiteralString;
	class UmlFactory;
}

namespace CalcModel
{
	class CalcModelPackageImpl : virtual public uml::PackageImpl ,virtual public CalcModelPackage
	{
			friend class CalcModelPackage;
			// Constructor
			CalcModelPackageImpl();

		public:
			// destructor
			virtual ~CalcModelPackageImpl();

			//getter for the ownedMember
			virtual std::shared_ptr<uml::ControlFlow> get_CF_CalcModel_PrimeChecker_CheckIfPrimeInitial1_CalcModel_PrimeChecker_CheckIfPrimecoaIsOdd();
			virtual std::shared_ptr<uml::ControlFlow> get_CF_CalcModel_PrimeChecker_CheckIfPrimeMerge_CalcModel_PrimeChecker_CheckIfPrimecoaDivides();
			virtual std::shared_ptr<uml::ControlFlow> get_CF_CalcModel_PrimeChecker_CheckIfPrimecbaPrintIsPrime_CalcModel_PrimeChecker_CheckIfPrimeActivityFinal3();
			virtual std::shared_ptr<uml::ControlFlow> get_CF_CalcModel_PrimeChecker_CheckIfPrimecbaPrintNotPrime2_CalcModel_PrimeChecker_CheckIfPrimeActivityFinal1();
			virtual std::shared_ptr<uml::ControlFlow> get_CF_CalcModel_PrimeChecker_CheckIfPrimecbaPrintNotPrime_CalcModel_PrimeChecker_CheckIfPrimeActivityFinal2();
			virtual std::shared_ptr<uml::ControlFlow> get_CF_CalcModel_PrimeChecker_CheckIfPrimecoaNext_CalcModel_PrimeChecker_CheckIfPrimecoaIsNotFinished();
			virtual std::shared_ptr<uml::ControlFlow> get_CF_CalcModel_PrimeChecker_CheckIfPrimedn_IsOdd_CalcModel_PrimeChecker_CheckIfPrimeMerge();
			virtual std::shared_ptr<uml::ControlFlow> get_CF_CalcModel_PrimeChecker_CheckIfPrimedn_IsOdd_CalcModel_PrimeChecker_CheckIfPrimecbaPrintNotPrime2();
			virtual std::shared_ptr<uml::ControlFlow> get_CF_CalcModel_PrimeChecker_CheckIfPrimedn_divides_CalcModel_PrimeChecker_CheckIfPrimecbaPrintNotPrime();
			virtual std::shared_ptr<uml::ControlFlow> get_CF_CalcModel_PrimeChecker_CheckIfPrimedn_divides_CalcModel_PrimeChecker_CheckIfPrimecoaNext();
			virtual std::shared_ptr<uml::ControlFlow> get_CF_CalcModel_PrimeChecker_CheckIfPrimedn_isNotFinished_CalcModel_PrimeChecker_CheckIfPrimeMerge();
			virtual std::shared_ptr<uml::ControlFlow> get_CF_CalcModel_PrimeChecker_CheckIfPrimedn_isNotFinished_CalcModel_PrimeChecker_CheckIfPrimecbaPrintIsPrime();
			virtual std::shared_ptr<uml::ChangeEvent> get_CalcModel_ChangeEvent1();
			virtual std::shared_ptr<uml::Class> get_CalcModel_PrimeChecker();
			virtual std::shared_ptr<uml::Activity> get_CalcModel_PrimeChecker_CheckIfPrime();
			virtual std::shared_ptr<uml::ActivityFinalNode> get_CalcModel_PrimeChecker_CheckIfPrimeActivityFinal1();
			virtual std::shared_ptr<uml::ActivityFinalNode> get_CalcModel_PrimeChecker_CheckIfPrimeActivityFinal2();
			virtual std::shared_ptr<uml::ActivityFinalNode> get_CalcModel_PrimeChecker_CheckIfPrimeActivityFinal3();
			virtual std::shared_ptr<uml::InitialNode> get_CalcModel_PrimeChecker_CheckIfPrimeInitial1();
			virtual std::shared_ptr<uml::MergeNode> get_CalcModel_PrimeChecker_CheckIfPrimeMerge();
			virtual std::shared_ptr<uml::Parameter> get_CalcModel_PrimeChecker_CheckIfPrime_CalcModel_PrimeChecker_CheckIfPrime_actInputNode();
			virtual std::shared_ptr<uml::CallBehaviorAction> get_CalcModel_PrimeChecker_CheckIfPrimecbaPrintIsPrime();
			virtual std::shared_ptr<uml::CallBehaviorAction> get_CalcModel_PrimeChecker_CheckIfPrimecbaPrintNotPrime();
			virtual std::shared_ptr<uml::CallBehaviorAction> get_CalcModel_PrimeChecker_CheckIfPrimecbaPrintNotPrime2();
			virtual std::shared_ptr<uml::CallOperationAction> get_CalcModel_PrimeChecker_CheckIfPrimecoaDivides();
			virtual std::shared_ptr<uml::CallOperationAction> get_CalcModel_PrimeChecker_CheckIfPrimecoaIsNotFinished();
			virtual std::shared_ptr<uml::CallOperationAction> get_CalcModel_PrimeChecker_CheckIfPrimecoaIsOdd();
			virtual std::shared_ptr<uml::CallOperationAction> get_CalcModel_PrimeChecker_CheckIfPrimecoaNext();
			virtual std::shared_ptr<uml::DecisionNode> get_CalcModel_PrimeChecker_CheckIfPrimedn_IsOdd();
			virtual std::shared_ptr<uml::DecisionNode> get_CalcModel_PrimeChecker_CheckIfPrimedn_divides();
			virtual std::shared_ptr<uml::DecisionNode> get_CalcModel_PrimeChecker_CheckIfPrimedn_isNotFinished();
			virtual std::shared_ptr<uml::ObjectFlow> get_CalcModel_PrimeChecker_CheckIfPrimeifDivides();
			virtual std::shared_ptr<uml::ObjectFlow> get_CalcModel_PrimeChecker_CheckIfPrimeifIsNotFinished();
			virtual std::shared_ptr<uml::ObjectFlow> get_CalcModel_PrimeChecker_CheckIfPrimeifIsOdd();
			virtual std::shared_ptr<uml::Property> get_CalcModel_PrimeChecker_divider();
			virtual std::shared_ptr<uml::Operation> get_CalcModel_PrimeChecker_divides_();
			virtual std::shared_ptr<uml::Parameter> get_CalcModel_PrimeChecker_divides_isDivisible();
			virtual std::shared_ptr<uml::FunctionBehavior> get_CalcModel_PrimeChecker_fbDivides();
			virtual std::shared_ptr<uml::Parameter> get_CalcModel_PrimeChecker_fbDivides_isDivisible();
			virtual std::shared_ptr<uml::FunctionBehavior> get_CalcModel_PrimeChecker_fbIsNotFinished();
			virtual std::shared_ptr<uml::Parameter> get_CalcModel_PrimeChecker_fbIsNotFinished_isNotFinished();
			virtual std::shared_ptr<uml::FunctionBehavior> get_CalcModel_PrimeChecker_fbIsOdd();
			virtual std::shared_ptr<uml::Parameter> get_CalcModel_PrimeChecker_fbIsOdd_isOdd();
			virtual std::shared_ptr<uml::FunctionBehavior> get_CalcModel_PrimeChecker_fbNext();
			virtual std::shared_ptr<uml::FunctionBehavior> get_CalcModel_PrimeChecker_fbPrintIsPrime();
			virtual std::shared_ptr<uml::FunctionBehavior> get_CalcModel_PrimeChecker_fbPrintNotPrime();
			virtual std::shared_ptr<uml::Operation> get_CalcModel_PrimeChecker_isNotFinished_();
			virtual std::shared_ptr<uml::Parameter> get_CalcModel_PrimeChecker_isNotFinished_isNotFinished();
			virtual std::shared_ptr<uml::Operation> get_CalcModel_PrimeChecker_isOdd_();
			virtual std::shared_ptr<uml::Parameter> get_CalcModel_PrimeChecker_isOdd_isOdd();
			virtual std::shared_ptr<uml::Operation> get_CalcModel_PrimeChecker_next_();
			virtual std::shared_ptr<uml::Property> get_CalcModel_PrimeChecker_number();
			virtual std::shared_ptr<uml::Operation> get_CalcModel_PrimeChecker_printIsPrime_();
			virtual std::shared_ptr<uml::Operation> get_CalcModel_PrimeChecker_printNotPrime_();
			virtual std::shared_ptr<uml::InputPin> get_InputPin_coaDividesself();
			virtual std::shared_ptr<uml::InputPin> get_InputPin_coaIsNotFinishedself();
			virtual std::shared_ptr<uml::InputPin> get_InputPin_coaIsOddself();
			virtual std::shared_ptr<uml::InputPin> get_InputPin_coaNextself();
			virtual std::shared_ptr<uml::OutputPin> get_OutputPin_coaDividesisDivisible();
			virtual std::shared_ptr<uml::OutputPin> get_OutputPin_coaIsNotFinishedisNotFinished();
			virtual std::shared_ptr<uml::OutputPin> get_OutputPin_coaIsOddisOdd();
			

		private:
			//private variables for ownedMember of the metamodel package
			std::shared_ptr<uml::ControlFlow> cF_CalcModel_PrimeChecker_CheckIfPrimeInitial1_CalcModel_PrimeChecker_CheckIfPrimecoaIsOdd = nullptr;
			std::shared_ptr<uml::LiteralBoolean> cF_CalcModel_PrimeChecker_CheckIfPrimeInitial1_CalcModel_PrimeChecker_CheckIfPrimecoaIsOdd_guard_LiteralBoolean_CF_CalcModel_PrimeChecker_CheckIfPrimeInitial1_CalcModel_PrimeChecker_CheckIfPrimecoaIsOdd = nullptr;
			std::shared_ptr<uml::LiteralInteger> cF_CalcModel_PrimeChecker_CheckIfPrimeInitial1_CalcModel_PrimeChecker_CheckIfPrimecoaIsOdd_weight_LiteralInteger_CF_CalcModel_PrimeChecker_CheckIfPrimeInitial1_CalcModel_PrimeChecker_CheckIfPrimecoaIsOdd = nullptr;
			std::shared_ptr<uml::ControlFlow> cF_CalcModel_PrimeChecker_CheckIfPrimeMerge_CalcModel_PrimeChecker_CheckIfPrimecoaDivides = nullptr;
			std::shared_ptr<uml::LiteralBoolean> cF_CalcModel_PrimeChecker_CheckIfPrimeMerge_CalcModel_PrimeChecker_CheckIfPrimecoaDivides_guard_LiteralBoolean_CF_CalcModel_PrimeChecker_CheckIfPrimeMerge_CalcModel_PrimeChecker_CheckIfPrimecoaDivides = nullptr;
			std::shared_ptr<uml::LiteralInteger> cF_CalcModel_PrimeChecker_CheckIfPrimeMerge_CalcModel_PrimeChecker_CheckIfPrimecoaDivides_weight_LiteralInteger_CF_CalcModel_PrimeChecker_CheckIfPrimeMerge_CalcModel_PrimeChecker_CheckIfPrimecoaDivides = nullptr;
			std::shared_ptr<uml::ControlFlow> cF_CalcModel_PrimeChecker_CheckIfPrimecbaPrintIsPrime_CalcModel_PrimeChecker_CheckIfPrimeActivityFinal3 = nullptr;
			std::shared_ptr<uml::LiteralBoolean> cF_CalcModel_PrimeChecker_CheckIfPrimecbaPrintIsPrime_CalcModel_PrimeChecker_CheckIfPrimeActivityFinal3_guard_LiteralBoolean_CF_CalcModel_PrimeChecker_CheckIfPrimecbaPrintIsPrime_CalcModel_PrimeChecker_CheckIfPrimeActivityFinal3 = nullptr;
			std::shared_ptr<uml::LiteralInteger> cF_CalcModel_PrimeChecker_CheckIfPrimecbaPrintIsPrime_CalcModel_PrimeChecker_CheckIfPrimeActivityFinal3_weight_LiteralInteger_CF_CalcModel_PrimeChecker_CheckIfPrimecbaPrintIsPrime_CalcModel_PrimeChecker_CheckIfPrimeActivityFinal3 = nullptr;
			std::shared_ptr<uml::ControlFlow> cF_CalcModel_PrimeChecker_CheckIfPrimecbaPrintNotPrime2_CalcModel_PrimeChecker_CheckIfPrimeActivityFinal1 = nullptr;
			std::shared_ptr<uml::LiteralBoolean> cF_CalcModel_PrimeChecker_CheckIfPrimecbaPrintNotPrime2_CalcModel_PrimeChecker_CheckIfPrimeActivityFinal1_guard_LiteralBoolean_CF_CalcModel_PrimeChecker_CheckIfPrimecbaPrintNotPrime2_CalcModel_PrimeChecker_CheckIfPrimeActivityFinal1 = nullptr;
			std::shared_ptr<uml::LiteralInteger> cF_CalcModel_PrimeChecker_CheckIfPrimecbaPrintNotPrime2_CalcModel_PrimeChecker_CheckIfPrimeActivityFinal1_weight_LiteralInteger_CF_CalcModel_PrimeChecker_CheckIfPrimecbaPrintNotPrime2_CalcModel_PrimeChecker_CheckIfPrimeActivityFinal1 = nullptr;
			std::shared_ptr<uml::ControlFlow> cF_CalcModel_PrimeChecker_CheckIfPrimecbaPrintNotPrime_CalcModel_PrimeChecker_CheckIfPrimeActivityFinal2 = nullptr;
			std::shared_ptr<uml::LiteralBoolean> cF_CalcModel_PrimeChecker_CheckIfPrimecbaPrintNotPrime_CalcModel_PrimeChecker_CheckIfPrimeActivityFinal2_guard_LiteralBoolean_CF_CalcModel_PrimeChecker_CheckIfPrimecbaPrintNotPrime_CalcModel_PrimeChecker_CheckIfPrimeActivityFinal2 = nullptr;
			std::shared_ptr<uml::LiteralInteger> cF_CalcModel_PrimeChecker_CheckIfPrimecbaPrintNotPrime_CalcModel_PrimeChecker_CheckIfPrimeActivityFinal2_weight_LiteralInteger_CF_CalcModel_PrimeChecker_CheckIfPrimecbaPrintNotPrime_CalcModel_PrimeChecker_CheckIfPrimeActivityFinal2 = nullptr;
			std::shared_ptr<uml::ControlFlow> cF_CalcModel_PrimeChecker_CheckIfPrimecoaNext_CalcModel_PrimeChecker_CheckIfPrimecoaIsNotFinished = nullptr;
			std::shared_ptr<uml::LiteralBoolean> cF_CalcModel_PrimeChecker_CheckIfPrimecoaNext_CalcModel_PrimeChecker_CheckIfPrimecoaIsNotFinished_guard_LiteralBoolean_CF_CalcModel_PrimeChecker_CheckIfPrimecoaNext_CalcModel_PrimeChecker_CheckIfPrimecoaIsNotFinished = nullptr;
			std::shared_ptr<uml::LiteralInteger> cF_CalcModel_PrimeChecker_CheckIfPrimecoaNext_CalcModel_PrimeChecker_CheckIfPrimecoaIsNotFinished_weight_LiteralInteger_CF_CalcModel_PrimeChecker_CheckIfPrimecoaNext_CalcModel_PrimeChecker_CheckIfPrimecoaIsNotFinished = nullptr;
			std::shared_ptr<uml::ControlFlow> cF_CalcModel_PrimeChecker_CheckIfPrimedn_IsOdd_CalcModel_PrimeChecker_CheckIfPrimeMerge = nullptr;
			std::shared_ptr<uml::LiteralBoolean> cF_CalcModel_PrimeChecker_CheckIfPrimedn_IsOdd_CalcModel_PrimeChecker_CheckIfPrimeMerge_guard_LiteralBoolean_CF_CalcModel_PrimeChecker_CheckIfPrimedn_IsOdd_CalcModel_PrimeChecker_CheckIfPrimeMerge = nullptr;
			std::shared_ptr<uml::ControlFlow> cF_CalcModel_PrimeChecker_CheckIfPrimedn_IsOdd_CalcModel_PrimeChecker_CheckIfPrimecbaPrintNotPrime2 = nullptr;
			std::shared_ptr<uml::LiteralBoolean> cF_CalcModel_PrimeChecker_CheckIfPrimedn_IsOdd_CalcModel_PrimeChecker_CheckIfPrimecbaPrintNotPrime2_guard_LiteralBoolean_CF_CalcModel_PrimeChecker_CheckIfPrimedn_IsOdd_CalcModel_PrimeChecker_CheckIfPrimecbaPrintNotPrime2 = nullptr;
			std::shared_ptr<uml::ControlFlow> cF_CalcModel_PrimeChecker_CheckIfPrimedn_divides_CalcModel_PrimeChecker_CheckIfPrimecbaPrintNotPrime = nullptr;
			std::shared_ptr<uml::LiteralBoolean> cF_CalcModel_PrimeChecker_CheckIfPrimedn_divides_CalcModel_PrimeChecker_CheckIfPrimecbaPrintNotPrime_guard_LiteralBoolean_CF_CalcModel_PrimeChecker_CheckIfPrimedn_divides_CalcModel_PrimeChecker_CheckIfPrimecbaPrintNotPrime = nullptr;
			std::shared_ptr<uml::LiteralInteger> cF_CalcModel_PrimeChecker_CheckIfPrimedn_divides_CalcModel_PrimeChecker_CheckIfPrimecbaPrintNotPrime_weight_LiteralInteger_CF_CalcModel_PrimeChecker_CheckIfPrimedn_divides_CalcModel_PrimeChecker_CheckIfPrimecbaPrintNotPrime = nullptr;
			std::shared_ptr<uml::ControlFlow> cF_CalcModel_PrimeChecker_CheckIfPrimedn_divides_CalcModel_PrimeChecker_CheckIfPrimecoaNext = nullptr;
			std::shared_ptr<uml::LiteralBoolean> cF_CalcModel_PrimeChecker_CheckIfPrimedn_divides_CalcModel_PrimeChecker_CheckIfPrimecoaNext_guard_LiteralBoolean_CF_CalcModel_PrimeChecker_CheckIfPrimedn_divides_CalcModel_PrimeChecker_CheckIfPrimecoaNext = nullptr;
			std::shared_ptr<uml::LiteralInteger> cF_CalcModel_PrimeChecker_CheckIfPrimedn_divides_CalcModel_PrimeChecker_CheckIfPrimecoaNext_weight_LiteralInteger_CF_CalcModel_PrimeChecker_CheckIfPrimedn_divides_CalcModel_PrimeChecker_CheckIfPrimecoaNext = nullptr;
			std::shared_ptr<uml::ControlFlow> cF_CalcModel_PrimeChecker_CheckIfPrimedn_isNotFinished_CalcModel_PrimeChecker_CheckIfPrimeMerge = nullptr;
			std::shared_ptr<uml::LiteralBoolean> cF_CalcModel_PrimeChecker_CheckIfPrimedn_isNotFinished_CalcModel_PrimeChecker_CheckIfPrimeMerge_guard_LiteralBoolean_CF_CalcModel_PrimeChecker_CheckIfPrimedn_isNotFinished_CalcModel_PrimeChecker_CheckIfPrimeMerge = nullptr;
			std::shared_ptr<uml::ControlFlow> cF_CalcModel_PrimeChecker_CheckIfPrimedn_isNotFinished_CalcModel_PrimeChecker_CheckIfPrimecbaPrintIsPrime = nullptr;
			std::shared_ptr<uml::LiteralBoolean> cF_CalcModel_PrimeChecker_CheckIfPrimedn_isNotFinished_CalcModel_PrimeChecker_CheckIfPrimecbaPrintIsPrime_guard_LiteralBoolean_CF_CalcModel_PrimeChecker_CheckIfPrimedn_isNotFinished_CalcModel_PrimeChecker_CheckIfPrimecbaPrintIsPrime = nullptr;
			std::shared_ptr<uml::LiteralInteger> cF_CalcModel_PrimeChecker_CheckIfPrimedn_isNotFinished_CalcModel_PrimeChecker_CheckIfPrimecbaPrintIsPrime_weight_LiteralInteger_CF_CalcModel_PrimeChecker_CheckIfPrimedn_isNotFinished_CalcModel_PrimeChecker_CheckIfPrimecbaPrintIsPrime = nullptr;
			std::shared_ptr<uml::ChangeEvent> calcModel_ChangeEvent1 = nullptr;
			std::shared_ptr<uml::Class> calcModel_PrimeChecker = nullptr;
			std::shared_ptr<uml::Activity> calcModel_PrimeChecker_CheckIfPrime = nullptr;
			std::shared_ptr<uml::ActivityFinalNode> calcModel_PrimeChecker_CheckIfPrimeActivityFinal1 = nullptr;
			std::shared_ptr<uml::ActivityFinalNode> calcModel_PrimeChecker_CheckIfPrimeActivityFinal2 = nullptr;
			std::shared_ptr<uml::ActivityFinalNode> calcModel_PrimeChecker_CheckIfPrimeActivityFinal3 = nullptr;
			std::shared_ptr<uml::InitialNode> calcModel_PrimeChecker_CheckIfPrimeInitial1 = nullptr;
			std::shared_ptr<uml::MergeNode> calcModel_PrimeChecker_CheckIfPrimeMerge = nullptr;
			std::shared_ptr<uml::Parameter> calcModel_PrimeChecker_CheckIfPrime_CalcModel_PrimeChecker_CheckIfPrime_actInputNode = nullptr;
			std::shared_ptr<uml::CallBehaviorAction> calcModel_PrimeChecker_CheckIfPrimecbaPrintIsPrime = nullptr;
			std::shared_ptr<uml::CallBehaviorAction> calcModel_PrimeChecker_CheckIfPrimecbaPrintNotPrime = nullptr;
			std::shared_ptr<uml::CallBehaviorAction> calcModel_PrimeChecker_CheckIfPrimecbaPrintNotPrime2 = nullptr;
			std::shared_ptr<uml::CallOperationAction> calcModel_PrimeChecker_CheckIfPrimecoaDivides = nullptr;
			std::shared_ptr<uml::CallOperationAction> calcModel_PrimeChecker_CheckIfPrimecoaIsNotFinished = nullptr;
			std::shared_ptr<uml::CallOperationAction> calcModel_PrimeChecker_CheckIfPrimecoaIsOdd = nullptr;
			std::shared_ptr<uml::CallOperationAction> calcModel_PrimeChecker_CheckIfPrimecoaNext = nullptr;
			std::shared_ptr<uml::DecisionNode> calcModel_PrimeChecker_CheckIfPrimedn_IsOdd = nullptr;
			std::shared_ptr<uml::DecisionNode> calcModel_PrimeChecker_CheckIfPrimedn_divides = nullptr;
			std::shared_ptr<uml::DecisionNode> calcModel_PrimeChecker_CheckIfPrimedn_isNotFinished = nullptr;
			std::shared_ptr<uml::ObjectFlow> calcModel_PrimeChecker_CheckIfPrimeifDivides = nullptr;
			std::shared_ptr<uml::ObjectFlow> calcModel_PrimeChecker_CheckIfPrimeifIsNotFinished = nullptr;
			std::shared_ptr<uml::ObjectFlow> calcModel_PrimeChecker_CheckIfPrimeifIsOdd = nullptr;
			std::shared_ptr<uml::Property> calcModel_PrimeChecker_divider = nullptr;
			std::shared_ptr<uml::LiteralInteger> calcModel_PrimeChecker_divider_defaultValue_LiteralInteger_CalcModel_PrimeChecker_divider = nullptr;
			std::shared_ptr<uml::Operation> calcModel_PrimeChecker_divides_ = nullptr;
			std::shared_ptr<uml::Parameter> calcModel_PrimeChecker_divides_isDivisible = nullptr;
			std::shared_ptr<uml::LiteralString> calcModel_PrimeChecker_divides_isDivisible_defaultValue_LiteralString_CalcModel_PrimeChecker_divides_isDivisible = nullptr;
			std::shared_ptr<uml::FunctionBehavior> calcModel_PrimeChecker_fbDivides = nullptr;
			std::shared_ptr<uml::Parameter> calcModel_PrimeChecker_fbDivides_isDivisible = nullptr;
			std::shared_ptr<uml::LiteralString> calcModel_PrimeChecker_fbDivides_isDivisible_defaultValue_LiteralString_CalcModel_PrimeChecker_fbDivides_isDivisible = nullptr;
			std::shared_ptr<uml::FunctionBehavior> calcModel_PrimeChecker_fbIsNotFinished = nullptr;
			std::shared_ptr<uml::Parameter> calcModel_PrimeChecker_fbIsNotFinished_isNotFinished = nullptr;
			std::shared_ptr<uml::FunctionBehavior> calcModel_PrimeChecker_fbIsOdd = nullptr;
			std::shared_ptr<uml::Parameter> calcModel_PrimeChecker_fbIsOdd_isOdd = nullptr;
			std::shared_ptr<uml::LiteralString> calcModel_PrimeChecker_fbIsOdd_isOdd_defaultValue_LiteralString_CalcModel_PrimeChecker_fbIsOdd_isOdd = nullptr;
			std::shared_ptr<uml::FunctionBehavior> calcModel_PrimeChecker_fbNext = nullptr;
			std::shared_ptr<uml::FunctionBehavior> calcModel_PrimeChecker_fbPrintIsPrime = nullptr;
			std::shared_ptr<uml::FunctionBehavior> calcModel_PrimeChecker_fbPrintNotPrime = nullptr;
			std::shared_ptr<uml::Operation> calcModel_PrimeChecker_isNotFinished_ = nullptr;
			std::shared_ptr<uml::Parameter> calcModel_PrimeChecker_isNotFinished_isNotFinished = nullptr;
			std::shared_ptr<uml::Operation> calcModel_PrimeChecker_isOdd_ = nullptr;
			std::shared_ptr<uml::Parameter> calcModel_PrimeChecker_isOdd_isOdd = nullptr;
			std::shared_ptr<uml::LiteralString> calcModel_PrimeChecker_isOdd_isOdd_defaultValue_LiteralString_CalcModel_PrimeChecker_isOdd_isOdd = nullptr;
			std::shared_ptr<uml::Operation> calcModel_PrimeChecker_next_ = nullptr;
			std::shared_ptr<uml::Property> calcModel_PrimeChecker_number = nullptr;
			std::shared_ptr<uml::LiteralInteger> calcModel_PrimeChecker_number_defaultValue_LiteralInteger_CalcModel_PrimeChecker_number = nullptr;
			std::shared_ptr<uml::Operation> calcModel_PrimeChecker_printIsPrime_ = nullptr;
			std::shared_ptr<uml::Operation> calcModel_PrimeChecker_printNotPrime_ = nullptr;
			std::shared_ptr<uml::InputPin> inputPin_coaDividesself = nullptr;
			std::shared_ptr<uml::InputPin> inputPin_coaIsNotFinishedself = nullptr;
			std::shared_ptr<uml::InputPin> inputPin_coaIsOddself = nullptr;
			std::shared_ptr<uml::InputPin> inputPin_coaNextself = nullptr;
			std::shared_ptr<uml::OutputPin> outputPin_coaDividesisDivisible = nullptr;
			std::shared_ptr<uml::OutputPin> outputPin_coaIsNotFinishedisNotFinished = nullptr;
			std::shared_ptr<uml::OutputPin> outputPin_coaIsOddisOdd = nullptr;
			

			static CalcModelPackage* create();
			static bool isInited;
			bool isInitialized = false;
			bool isCreated = false;

			void initMetaModel();
			virtual void init(std::shared_ptr<uml::Package> package);

		public:
 			void initializePackageContents(std::shared_ptr<uml::Package> calcModel);
			void createPackageContents(std::shared_ptr<uml::Package> calcModel);

		private:
			void createPackageActivities(std::shared_ptr<uml::Package> calcModel, std::shared_ptr<uml::UmlFactory> factory);
			void createPackageClasses(std::shared_ptr<uml::Package> calcModel, std::shared_ptr<uml::UmlFactory> factory);
			void createPackageDependencies(std::shared_ptr<uml::Package> calcModel, std::shared_ptr<uml::UmlFactory> factory);
			void createPackageEnumerationLiterals(std::shared_ptr<uml::Package> calcModel, std::shared_ptr<uml::UmlFactory> factory);
			void createPackageInstanceSpecifications(std::shared_ptr<uml::Package> calcModel, std::shared_ptr<uml::UmlFactory> factory);
			void createPackageInterfaceRealizations(std::shared_ptr<uml::Package> calcModel, std::shared_ptr<uml::UmlFactory> factory);
			void createPackageInterfaces(std::shared_ptr<uml::Package> calcModel, std::shared_ptr<uml::UmlFactory> factory);
			void createPackagePrimitiveTypes(std::shared_ptr<uml::Package> calcModel, std::shared_ptr<uml::UmlFactory> factory);
			void createPackageStereotypes(std::shared_ptr<uml::Package> calcModel, std::shared_ptr<uml::UmlFactory> factory);
			void createPackageValueSpecifications(std::shared_ptr<uml::Package> calcModel, std::shared_ptr<uml::UmlFactory> factory);

			void initializePackageActivities();
			void initializePackageClasses();
			void initializePackageDependencies();
			void initializePackageInstanceSpecifications();
			void initializePackageInterfaceRealizations();
			void initializePackageInterfaces();
			void initializePackageStereotypes();
			void initializePackageValueSpecifications();
	};
}
#endif /* end of include guard: CALCMODEL_METAMODELPACKAGEIMPL_HPP */
