//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef SUBSETUNIONBENCHMARKPACKAGEIMPL_HPP
#define SUBSETUNIONBENCHMARKPACKAGEIMPL_HPP

#include "ecore/EcorePackage.hpp"
#include "ecore/impl/EPackageImpl.hpp"

#include "subsetUnionBenchmark/SubsetUnionBenchmarkPackage.hpp"

namespace subsetUnionBenchmark 
{	class Container;
	class Element;
	class Element_Level1;
	class Element_Level10;
	class Element_Level2;
	class Element_Level3;
	class Element_Level4;
	class Element_Level5;
	class Element_Level6;
	class Element_Level7;
	class Element_Level8;
	class Element_Level9;
}

namespace ecore
{
	class EcoreFactory;
}


namespace subsetUnionBenchmark
{
	class SubsetUnionBenchmarkPackageImpl : public ecore::EPackageImpl ,virtual public SubsetUnionBenchmarkPackage
	{
		private:    
			SubsetUnionBenchmarkPackageImpl(SubsetUnionBenchmarkPackageImpl const&) = delete;
			SubsetUnionBenchmarkPackageImpl& operator=(SubsetUnionBenchmarkPackageImpl const&) = delete;

		protected:
			SubsetUnionBenchmarkPackageImpl();

		public:
			virtual ~SubsetUnionBenchmarkPackageImpl();

			// Begin Class Container
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getContainer_EClass() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getContainer_EAttribute_name() const ;
			
			virtual std::shared_ptr<ecore::EReference> getContainer_EReference_subset1() const ;
			virtual std::shared_ptr<ecore::EReference> getContainer_EReference_subset10() const ;
			virtual std::shared_ptr<ecore::EReference> getContainer_EReference_subset2() const ;
			virtual std::shared_ptr<ecore::EReference> getContainer_EReference_subset3() const ;
			virtual std::shared_ptr<ecore::EReference> getContainer_EReference_subset4() const ;
			virtual std::shared_ptr<ecore::EReference> getContainer_EReference_subset5() const ;
			virtual std::shared_ptr<ecore::EReference> getContainer_EReference_subset6() const ;
			virtual std::shared_ptr<ecore::EReference> getContainer_EReference_subset7() const ;
			virtual std::shared_ptr<ecore::EReference> getContainer_EReference_subset8() const ;
			virtual std::shared_ptr<ecore::EReference> getContainer_EReference_subset9() const ;
			virtual std::shared_ptr<ecore::EReference> getContainer_EReference_unionBag() const ;
			
			
			// End Class Container

			// Begin Class Element
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_EClass() const ;
			
			virtual std::shared_ptr<ecore::EAttribute> getElement_EAttribute_name() const ;
			
			
			
			// End Class Element

			// Begin Class Element_Level1
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level1_EClass() const ;
			
			
			
			
			// End Class Element_Level1

			// Begin Class Element_Level10
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level10_EClass() const ;
			
			
			
			
			// End Class Element_Level10

			// Begin Class Element_Level2
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level2_EClass() const ;
			
			
			
			
			// End Class Element_Level2

			// Begin Class Element_Level3
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level3_EClass() const ;
			
			
			
			
			// End Class Element_Level3

			// Begin Class Element_Level4
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level4_EClass() const ;
			
			
			
			
			// End Class Element_Level4

			// Begin Class Element_Level5
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level5_EClass() const ;
			
			
			
			
			// End Class Element_Level5

			// Begin Class Element_Level6
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level6_EClass() const ;
			
			
			
			
			// End Class Element_Level6

			// Begin Class Element_Level7
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level7_EClass() const ;
			
			
			
			
			// End Class Element_Level7

			// Begin Class Element_Level8
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level8_EClass() const ;
			
			
			
			
			// End Class Element_Level8

			// Begin Class Element_Level9
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level9_EClass() const ;
			
			
			
			
			// End Class Element_Level9

			

		private:
			std::shared_ptr<ecore::EClass> m_container_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_element_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_element_Level1_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_element_Level10_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_element_Level2_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_element_Level3_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_element_Level4_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_element_Level5_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_element_Level6_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_element_Level7_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_element_Level8_EClass = nullptr;
			std::shared_ptr<ecore::EClass> m_element_Level9_EClass = nullptr;
			
			
			std::shared_ptr<ecore::EAttribute> m_container_EAttribute_name = nullptr;
			std::shared_ptr<ecore::EAttribute> m_element_EAttribute_name = nullptr;
			
			std::shared_ptr<ecore::EReference> m_container_EReference_subset1 = nullptr;
			std::shared_ptr<ecore::EReference> m_container_EReference_subset10 = nullptr;
			std::shared_ptr<ecore::EReference> m_container_EReference_subset2 = nullptr;
			std::shared_ptr<ecore::EReference> m_container_EReference_subset3 = nullptr;
			std::shared_ptr<ecore::EReference> m_container_EReference_subset4 = nullptr;
			std::shared_ptr<ecore::EReference> m_container_EReference_subset5 = nullptr;
			std::shared_ptr<ecore::EReference> m_container_EReference_subset6 = nullptr;
			std::shared_ptr<ecore::EReference> m_container_EReference_subset7 = nullptr;
			std::shared_ptr<ecore::EReference> m_container_EReference_subset8 = nullptr;
			std::shared_ptr<ecore::EReference> m_container_EReference_subset9 = nullptr;
			std::shared_ptr<ecore::EReference> m_container_EReference_unionBag = nullptr;
			
			

			friend class SubsetUnionBenchmarkPackage;

			static bool isInited;
			static SubsetUnionBenchmarkPackage* create();
			bool isInitialized = false;
 			bool isCreated = false;

			virtual void init(std::shared_ptr<ecore::EPackage> package);

		public:
			void createPackageContents(std::shared_ptr<ecore::EPackage> package);
			void initializePackageContents();

		private:
			void createContainerContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createElementContent(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createElement_Level1Content(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createElement_Level10Content(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createElement_Level2Content(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createElement_Level3Content(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createElement_Level4Content(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createElement_Level5Content(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createElement_Level6Content(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createElement_Level7Content(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createElement_Level8Content(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createElement_Level9Content(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);
			void createPackageEDataTypes(std::shared_ptr<ecore::EPackage> package, std::shared_ptr<ecore::EcoreFactory> factory);

			void initializeContainerContent();
			void initializeElementContent();
			void initializeElement_Level1Content();
			void initializeElement_Level10Content();
			void initializeElement_Level2Content();
			void initializeElement_Level3Content();
			void initializeElement_Level4Content();
			void initializeElement_Level5Content();
			void initializeElement_Level6Content();
			void initializeElement_Level7Content();
			void initializeElement_Level8Content();
			void initializeElement_Level9Content();
			void initializePackageEDataTypes();



	};
}
#endif /* end of include guard: SUBSETUNIONBENCHMARKPACKAGEIMPL_HPP */
