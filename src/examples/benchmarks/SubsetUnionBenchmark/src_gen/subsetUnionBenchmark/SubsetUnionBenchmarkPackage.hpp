//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef SUBSETUNIONBENCHMARKPACKAGE_HPP
#define SUBSETUNIONBENCHMARKPACKAGE_HPP

#include "ecore/EPackage.hpp"

namespace ecore 
{
	class EAttribute;
	class EClass;
	class EDataType;
	class EReference;
}

namespace subsetUnionBenchmark 
{
	/*!
	The Metamodel Package for the subsetUnionBenchmark metamodel. This package is used to enable the reflection of model elements. It contains all model elements
	which were described in an ecore file.
	*/
	/*!
	 */
	class SubsetUnionBenchmarkPackage : virtual public ecore::EPackage 
	{
		private:    
			SubsetUnionBenchmarkPackage(SubsetUnionBenchmarkPackage const&) = delete;
			SubsetUnionBenchmarkPackage& operator=(SubsetUnionBenchmarkPackage const&) = delete;

		protected:
			SubsetUnionBenchmarkPackage(){}

		public:
			//static variables
			static const std::string eNAME;
			static const std::string eNS_URI;
			static const std::string eNS_PREFIX;

			// Begin Class Container
			//Class and Feature IDs 
			static const unsigned int CONTAINER_ECLASS = 12;
			static const unsigned int CONTAINER_ECLASS_FEATURE_COUNT = 12;
			static const unsigned int CONTAINER_ECLASS_OPERATION_COUNT = 0;
			static const int CONTAINER_EATTRIBUTE_NAME = 1201;
			
			static const int CONTAINER_EREFERENCE_SUBSET1 = 1202;
			static const int CONTAINER_EREFERENCE_SUBSET10 = 1211;
			static const int CONTAINER_EREFERENCE_SUBSET2 = 1203;
			static const int CONTAINER_EREFERENCE_SUBSET3 = 1204;
			static const int CONTAINER_EREFERENCE_SUBSET4 = 1205;
			static const int CONTAINER_EREFERENCE_SUBSET5 = 1206;
			static const int CONTAINER_EREFERENCE_SUBSET6 = 1207;
			static const int CONTAINER_EREFERENCE_SUBSET7 = 1208;
			static const int CONTAINER_EREFERENCE_SUBSET8 = 1209;
			static const int CONTAINER_EREFERENCE_SUBSET9 = 1210;
			static const int CONTAINER_EREFERENCE_UNIONBAG = 1200;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getContainer_EClass() const = 0;
			
			virtual std::shared_ptr<ecore::EAttribute> getContainer_EAttribute_name() const = 0;
			
			virtual std::shared_ptr<ecore::EReference> getContainer_EReference_subset1() const = 0;
			virtual std::shared_ptr<ecore::EReference> getContainer_EReference_subset10() const = 0;
			virtual std::shared_ptr<ecore::EReference> getContainer_EReference_subset2() const = 0;
			virtual std::shared_ptr<ecore::EReference> getContainer_EReference_subset3() const = 0;
			virtual std::shared_ptr<ecore::EReference> getContainer_EReference_subset4() const = 0;
			virtual std::shared_ptr<ecore::EReference> getContainer_EReference_subset5() const = 0;
			virtual std::shared_ptr<ecore::EReference> getContainer_EReference_subset6() const = 0;
			virtual std::shared_ptr<ecore::EReference> getContainer_EReference_subset7() const = 0;
			virtual std::shared_ptr<ecore::EReference> getContainer_EReference_subset8() const = 0;
			virtual std::shared_ptr<ecore::EReference> getContainer_EReference_subset9() const = 0;
			virtual std::shared_ptr<ecore::EReference> getContainer_EReference_unionBag() const = 0;
			
			
			// End Class Container


			// Begin Class Element
			//Class and Feature IDs 
			static const unsigned int ELEMENT_ECLASS = 1;
			static const unsigned int ELEMENT_ECLASS_FEATURE_COUNT = 1;
			static const unsigned int ELEMENT_ECLASS_OPERATION_COUNT = 0;
			static const int ELEMENT_EATTRIBUTE_NAME = 100;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_EClass() const = 0;
			
			virtual std::shared_ptr<ecore::EAttribute> getElement_EAttribute_name() const = 0;
			
			
			
			// End Class Element


			// Begin Class Element_Level1
			//Class and Feature IDs 
			static const unsigned int ELEMENT_LEVEL1_ECLASS = 2;
			static const unsigned int ELEMENT_LEVEL1_ECLASS_FEATURE_COUNT = 1;
			static const unsigned int ELEMENT_LEVEL1_ECLASS_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level1_EClass() const = 0;
			
			
			
			
			// End Class Element_Level1


			// Begin Class Element_Level10
			//Class and Feature IDs 
			static const unsigned int ELEMENT_LEVEL10_ECLASS = 11;
			static const unsigned int ELEMENT_LEVEL10_ECLASS_FEATURE_COUNT = 1;
			static const unsigned int ELEMENT_LEVEL10_ECLASS_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level10_EClass() const = 0;
			
			
			
			
			// End Class Element_Level10


			// Begin Class Element_Level2
			//Class and Feature IDs 
			static const unsigned int ELEMENT_LEVEL2_ECLASS = 3;
			static const unsigned int ELEMENT_LEVEL2_ECLASS_FEATURE_COUNT = 1;
			static const unsigned int ELEMENT_LEVEL2_ECLASS_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level2_EClass() const = 0;
			
			
			
			
			// End Class Element_Level2


			// Begin Class Element_Level3
			//Class and Feature IDs 
			static const unsigned int ELEMENT_LEVEL3_ECLASS = 4;
			static const unsigned int ELEMENT_LEVEL3_ECLASS_FEATURE_COUNT = 1;
			static const unsigned int ELEMENT_LEVEL3_ECLASS_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level3_EClass() const = 0;
			
			
			
			
			// End Class Element_Level3


			// Begin Class Element_Level4
			//Class and Feature IDs 
			static const unsigned int ELEMENT_LEVEL4_ECLASS = 5;
			static const unsigned int ELEMENT_LEVEL4_ECLASS_FEATURE_COUNT = 1;
			static const unsigned int ELEMENT_LEVEL4_ECLASS_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level4_EClass() const = 0;
			
			
			
			
			// End Class Element_Level4


			// Begin Class Element_Level5
			//Class and Feature IDs 
			static const unsigned int ELEMENT_LEVEL5_ECLASS = 6;
			static const unsigned int ELEMENT_LEVEL5_ECLASS_FEATURE_COUNT = 1;
			static const unsigned int ELEMENT_LEVEL5_ECLASS_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level5_EClass() const = 0;
			
			
			
			
			// End Class Element_Level5


			// Begin Class Element_Level6
			//Class and Feature IDs 
			static const unsigned int ELEMENT_LEVEL6_ECLASS = 7;
			static const unsigned int ELEMENT_LEVEL6_ECLASS_FEATURE_COUNT = 1;
			static const unsigned int ELEMENT_LEVEL6_ECLASS_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level6_EClass() const = 0;
			
			
			
			
			// End Class Element_Level6


			// Begin Class Element_Level7
			//Class and Feature IDs 
			static const unsigned int ELEMENT_LEVEL7_ECLASS = 8;
			static const unsigned int ELEMENT_LEVEL7_ECLASS_FEATURE_COUNT = 1;
			static const unsigned int ELEMENT_LEVEL7_ECLASS_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level7_EClass() const = 0;
			
			
			
			
			// End Class Element_Level7


			// Begin Class Element_Level8
			//Class and Feature IDs 
			static const unsigned int ELEMENT_LEVEL8_ECLASS = 9;
			static const unsigned int ELEMENT_LEVEL8_ECLASS_FEATURE_COUNT = 1;
			static const unsigned int ELEMENT_LEVEL8_ECLASS_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level8_EClass() const = 0;
			
			
			
			
			// End Class Element_Level8


			// Begin Class Element_Level9
			//Class and Feature IDs 
			static const unsigned int ELEMENT_LEVEL9_ECLASS = 10;
			static const unsigned int ELEMENT_LEVEL9_ECLASS_FEATURE_COUNT = 1;
			static const unsigned int ELEMENT_LEVEL9_ECLASS_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getElement_Level9_EClass() const = 0;
			
			
			
			
			// End Class Element_Level9

			
			

			//Singleton Instance and Getter
			private:
				static std::shared_ptr<SubsetUnionBenchmarkPackage> instance;
			public:
				static std::shared_ptr<SubsetUnionBenchmarkPackage> eInstance();
	};
}
#endif /* end of include guard: SUBSETUNIONBENCHMARKPACKAGE_HPP */
