plugins {
	id "tui.sse.mde4cpp.mde4cpp-compile-plugin" version "0.3"
	id "tui.sse.mde4cpp.mde4cpp-generate-plugin" version "0.2"
}
apply plugin: 'base' 

description 'Build tasks for project: CalcModel'

task buildCalcModel(dependsOn: ['generateCalcModel', 'compileCalcModel']) {
	group 'CalcModel'
	description 'build CalcModel'
}

task compileCalcModel(type: tui.sse.mde4cpp.MDE4CPPCompile) {
	group 'CalcModel'
	description 'compile CalcModel'

	projectFolder = file("./src_gen/CalcModel")
}

task generateCalcModel(type: tui.sse.mde4cpp.MDE4CPPGenerate) {
	group 'CalcModel'
	description 'generate C++ code of CalcModel.uml model'

	modelFilePath = file("./model/CalcModel.uml")
	structureOnly = false
}

compileCalcModel.mustRunAfter generateCalcModel

clean.doFirst {
	def cmakeFolder = file('./src_gen/CalcModel/.cmake/')
	if(cmakeFolder.exists()) {
    	delete cmakeFolder.absolutePath
   		println "deleting folder " + cmakeFolder.absolutePath
	}

	def cmakeFolderExec = file('./src_gen/CalcModelExec/.cmake/')
	if(cmakeFolderExec.exists()) {
    	delete cmakeFolderExec.absolutePath
   		println "deleting folder " + cmakeFolderExec.absolutePath
	}
}
