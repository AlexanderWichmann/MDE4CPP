//********************************************************************
//*    	
//* Warning: This file was generated by MDE4CPP Generator
//*
//********************************************************************

#ifndef FORKNODETEST_FACTORYIMPL_HPP
#define FORKNODETEST_FACTORYIMPL_HPP

#include <functional>
#include <map>

#include "uml/impl/FactoryImpl.hpp"
#include "forkNodeTest/ForkNodeTestFactory.hpp"

namespace forkNodeTest 
{
	class ForkNodeTestFactoryImpl : virtual public uml::FactoryImpl , virtual public ForkNodeTestFactory 
	{
		protected:
			friend class ForkNodeTestFactory;
			// Constructor
			ForkNodeTestFactoryImpl();

		public:
			virtual ~ForkNodeTestFactoryImpl();
			virtual std::shared_ptr<uml::Element> create(std::shared_ptr<uml::Class> _class);
			virtual std::shared_ptr<uml::Element> create(std::string _className);

			//Creator functions
			virtual std::shared_ptr<forkNodeTest::ForkClass> createForkClass();
			
			

			//Package
			virtual std::shared_ptr<ForkNodeTestPackage> getForkNodeTestPackage();

		private:
			static ForkNodeTestFactory * create();
			std::map<std::string,std::function<std::shared_ptr<uml::Element>()>> m_creatorMap;

			virtual void init() {}
	};
}
#endif /* end of include guard: FORKNODETEST_FACTORYIMPL_HPP */
