//********************************************************************
//*    	
//* Warning: This file was generated by MDE4CPP Generator
//*
//********************************************************************

#ifndef FORKNODETEST_FORKCLASS_EXECUTION_HPP
#define FORKNODETEST_FORKCLASS_EXECUTION_HPP

#include "fUML/impl/ObjectImpl.hpp"

template <class T> 
class Bag;

namespace forkNodeTest
{
	class ForkClass;
}

namespace forkNodeTest 
{
	class ForkClassObject : virtual public fUML::ObjectImpl 
	{
		public:
		    //constructors
		    ForkClassObject(ForkClassObject &obj);
		    ForkClassObject(std::shared_ptr<ForkClass>);
		    ForkClassObject(std::shared_ptr<Bag<ForkClass>>);
		 	ForkClassObject();
		    //destructor
		    virtual ~ForkClassObject();
		
		    virtual std::shared_ptr<ecore::EObject> copy();
			
			std::shared_ptr<ForkClass> getUmlValue() const;
			std::shared_ptr<Bag<ForkClass>> getUmlValues() const;
			void setUmlValue(std::shared_ptr<ForkClass>);
			void setUmlValues(std::shared_ptr<Bag<ForkClass>>);;
			virtual void setThisForkClassObjectPtr(std::weak_ptr<ForkClassObject> thisObjectPtr);
		
		protected:
			std::shared_ptr<ForkClass> m_umlValue = nullptr;
			std::shared_ptr<Bag<ForkClass>> m_umlValues = nullptr;
	};
}
#endif /* end of include guard: FORKNODETEST_FORKCLASS_OBJECT_HPP */
