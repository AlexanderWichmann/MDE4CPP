plugins {
	id "tui.sse.mde4cpp.mde4cpp-compile-plugin" version "0.3"
}

description 'Compile tasks for project: forkNodeTest'

task compileForkNodeTest(type: tui.sse.mde4cpp.MDE4CPPCompile) {
	group 'forkNodeTest'
	description 'compile forkNodeTest'

	projectFolder = file("./forkNodeTest")

	dependsOn getRootProject().getTasksByName('deliverBasicInterfaces', true)
	dependsOn getRootProject().getTasksByName('compileEcore', true)
	dependsOn getRootProject().getTasksByName('compileUml', true)
	dependsOn getRootProject().getTasksByName('compileFUML', true)
	dependsOn getRootProject().getTasksByName('compileEcoreReflection', true)
	dependsOn getRootProject().getTasksByName('compilePrimitivetypesReflection', true)
	dependsOn getRootProject().getTasksByName('compileUmlReflection', true)
}

task clean {
	doFirst {
		def cmakeFolder = file('./forkNodeTest/.cmake/')
		if(cmakeFolder.exists()) {
    		delete cmakeFolder.absolutePath
   			println "deleting folder " + cmakeFolder.absolutePath
		}

		def cmakeFolderExec = file('./forkNodeTestExec/.cmake/')
		if(cmakeFolderExec.exists()) {
    		delete cmakeFolderExec.absolutePath
   			println "deleting folder " + cmakeFolderExec.absolutePath
		}
	}
}
