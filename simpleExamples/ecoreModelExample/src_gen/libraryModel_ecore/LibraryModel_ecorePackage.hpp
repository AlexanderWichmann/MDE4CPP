//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef LIBRARYMODEL_ECOREPACKAGE_HPP
#define LIBRARYMODEL_ECOREPACKAGE_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

#ifdef ACTIVITY_DEBUG_ON
    #define ACT_DEBUG(a) a
#else
    #define ACT_DEBUG(a) /**/
#endif

//#include "util/ProfileCallCount.hpp"

#include "ecore/EPackage.hpp"
#include "ecore/EcoreFactory.hpp"

namespace libraryModel_ecore 
{	class Author;
	class Book;
	class LibraryModel;
	class NamedElement;
	class Picture;
	class LibraryModel_ecorePackage;
}

namespace libraryModel_ecore 
{
	/*!
	The Metamodel Package for the libraryModel_ecore metamodel. This package is used to enable the reflection of model elements. It contains all model elements
	which were described in an ecore file.
	*/
	/*!
	 */
	class LibraryModel_ecorePackage : virtual public ecore::EPackage 
	{
		private:    
			LibraryModel_ecorePackage(LibraryModel_ecorePackage const&) = delete;
			LibraryModel_ecorePackage& operator=(LibraryModel_ecorePackage const&) = delete;

		protected:
			LibraryModel_ecorePackage(){}

		public:
			//static variables
			static const std::string eNAME;
			static const std::string eNS_URI;
			static const std::string eNS_PREFIX;

			// Begin Class Author
			//Class and Feature IDs 
			static const int AUTHOR_ECLASS = 1;
			static const int AUTHOR_ECLASS_FEATURE_COUNT = 1;
			static const int AUTHOR_ECLASS_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getAuthor_EClass() const = 0;
			
			
			
			
			// End Class Author


			// Begin Class Book
			//Class and Feature IDs 
			static const int BOOK_ECLASS = 0;
			static const int BOOK_ECLASS_FEATURE_COUNT = 4;
			static const int BOOK_ECLASS_OPERATION_COUNT = 0;
			
			static const int BOOK_EREFERENCE_AUTHORS = 01;
			static const int BOOK_EREFERENCE_LIBRARY = 02;
			static const int BOOK_EREFERENCE_PICTURES = 03;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getBook_EClass() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getBook_EReference_authors() const = 0;
			virtual std::shared_ptr<ecore::EReference> getBook_EReference_library() const = 0;
			virtual std::shared_ptr<ecore::EReference> getBook_EReference_pictures() const = 0;
			
			
			// End Class Book


			// Begin Class LibraryModel
			//Class and Feature IDs 
			static const int LIBRARYMODEL_ECLASS = 2;
			static const int LIBRARYMODEL_ECLASS_FEATURE_COUNT = 2;
			static const int LIBRARYMODEL_ECLASS_OPERATION_COUNT = 0;
			
			static const int LIBRARYMODEL_EREFERENCE_AUTHORS = 21;
			static const int LIBRARYMODEL_EREFERENCE_BOOK = 20;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLibraryModel_EClass() const = 0;
			
			
			virtual std::shared_ptr<ecore::EReference> getLibraryModel_EReference_authors() const = 0;
			virtual std::shared_ptr<ecore::EReference> getLibraryModel_EReference_book() const = 0;
			
			
			// End Class LibraryModel


			// Begin Class NamedElement
			//Class and Feature IDs 
			static const int NAMEDELEMENT_ECLASS = 3;
			static const int NAMEDELEMENT_ECLASS_FEATURE_COUNT = 1;
			static const int NAMEDELEMENT_ECLASS_OPERATION_COUNT = 0;
			static const int NAMEDELEMENT_EATTRIBUTE_NAME = 30;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getNamedElement_EClass() const = 0;
			
			virtual std::shared_ptr<ecore::EAttribute> getNamedElement_EAttribute_name() const = 0;
			
			
			
			// End Class NamedElement


			// Begin Class Picture
			//Class and Feature IDs 
			static const int PICTURE_ECLASS = 4;
			static const int PICTURE_ECLASS_FEATURE_COUNT = 3;
			static const int PICTURE_ECLASS_OPERATION_COUNT = 0;
			static const int PICTURE_EATTRIBUTE_PAGENUMBER = 42;
			
			static const int PICTURE_EREFERENCE_BOOK = 41;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getPicture_EClass() const = 0;
			
			virtual std::shared_ptr<ecore::EAttribute> getPicture_EAttribute_pageNumber() const = 0;
			
			virtual std::shared_ptr<ecore::EReference> getPicture_EReference_book() const = 0;
			
			
			// End Class Picture

			
			

			//Singleton Instance and Getter
			private:
				static std::shared_ptr<LibraryModel_ecorePackage> instance;
			public:
				static std::shared_ptr<LibraryModel_ecorePackage> eInstance();
	};
}
#endif /* end of include guard: LIBRARYMODEL_ECOREPACKAGE_HPP */

