//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef ECORESIMPLEEXAMPLEMODELFACTORYIMPL_HPP
#define ECORESIMPLEEXAMPLEMODELFACTORYIMPL_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

#ifdef ACTIVITY_DEBUG_ON
    #define ACT_DEBUG(a) a
#else
    #define ACT_DEBUG(a) /**/
#endif

#include "impl/EFactoryImpl.hpp"

#include "AuthorImpl.hpp"
#include "BookImpl.hpp"
#include "LibraryModelImpl.hpp"
#include "NamedElementImpl.hpp"

#include "EcoreSimpleExampleModelFactory.hpp"

namespace ecoreSimpleExampleModel 
{
	class EcoreSimpleExampleModelFactoryImpl : virtual public ecore::EFactoryImpl , virtual public EcoreSimpleExampleModelFactory 
	{
		private:    
			EcoreSimpleExampleModelFactoryImpl(EcoreSimpleExampleModelFactoryImpl const&) = delete;
			EcoreSimpleExampleModelFactoryImpl& operator=(EcoreSimpleExampleModelFactoryImpl const&) = delete;

		protected:
			friend class EcoreSimpleExampleModelFactory;
			// Constructor
			EcoreSimpleExampleModelFactoryImpl();

		public:
			virtual ~EcoreSimpleExampleModelFactoryImpl();
			virtual std::shared_ptr<ecore::EObject> create(std::string _className,  std::shared_ptr<ecore::EObject> container, const unsigned int referenceID = -1) const;
			virtual std::shared_ptr<ecore::EObject> create(const unsigned int classID,  std::shared_ptr<ecore::EObject> container = nullptr, const unsigned int referenceID = -1) const;
			virtual std::shared_ptr<ecore::EObject> create(ecore::EClass* _class, std::shared_ptr<EObject> _container = nullptr) const;
			virtual std::shared_ptr<ecore::EObject> create(std::string _className) const;
            //virtual std::shared_ptr<ecore::EObject> create(std::string _className, std::shared_ptr<EObject> _container = nullptr) const;

			//Creator functions
			virtual std::shared_ptr<Book> createBook() const ;
			//Add containing object
			virtual std::shared_ptr<Book> createBook_in_Library(std::weak_ptr<ecoreSimpleExampleModel::LibraryModel > par_library) const ;
			
			virtual std::shared_ptr<Author> createAuthor() const ;
			
			virtual std::shared_ptr<LibraryModel> createLibraryModel() const ;
			
			virtual std::shared_ptr<NamedElement> createNamedElement() const ;
			
			

			//Package
			virtual std::shared_ptr<EcoreSimpleExampleModelPackage> getEcoreSimpleExampleModelPackage() const;

		private:
			static EcoreSimpleExampleModelFactory * create();
            std::map<std::string,unsigned int> m_idMap;
			virtual void init() {}

	};
}
#endif /* end of include guard: ECORESIMPLEEXAMPLEMODELFACTORYIMPL_HPP */

