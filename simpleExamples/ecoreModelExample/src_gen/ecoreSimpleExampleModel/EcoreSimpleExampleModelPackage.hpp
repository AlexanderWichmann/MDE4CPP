//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef ECORESIMPLEEXAMPLEMODELPACKAGE_HPP
#define ECORESIMPLEEXAMPLEMODELPACKAGE_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

#ifdef ACTIVITY_DEBUG_ON
    #define ACT_DEBUG(a) a
#else
    #define ACT_DEBUG(a) /**/
#endif

#include "EPackage.hpp"
#include "EcoreFactory.hpp"

namespace ecoreSimpleExampleModel 
{	class Author;
	class Book;
	class LibraryModel;
	class NamedElement;
	class EcoreSimpleExampleModelPackage;
}

namespace ecoreSimpleExampleModel 
{
	/*!
	The Metamodel Package for the ecoreSimpleExampleModel metamodel. This package is used to enable the reflection of model elements. It contains all model elements
	which were described in an ecore file.
	*/
	/*!
	 */
	class EcoreSimpleExampleModelPackage : virtual public ecore::EPackage 
	{
		private:    
			EcoreSimpleExampleModelPackage(EcoreSimpleExampleModelPackage const&) = delete;
			EcoreSimpleExampleModelPackage& operator=(EcoreSimpleExampleModelPackage const&) = delete;

		protected:
			EcoreSimpleExampleModelPackage(){}

		public:
			//static variables
			static const std::string eNAME;
			static const std::string eNS_URI;
			static const std::string eNS_PREFIX;

			// Begin Class Author
			//Class and Feature IDs 
			static const int AUTHOR = 1;
			static const int AUTHOR_FEATURE_COUNT = 1;
			static const int AUTHOR_OPERATION_COUNT = 0;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getAuthor() const = 0;
			
			
			
			// End Class Author


			// Begin Class Book
			//Class and Feature IDs 
			static const int BOOK = 0;
			static const int BOOK_FEATURE_COUNT = 3;
			static const int BOOK_OPERATION_COUNT = 0;
			
			static const int  = 01;
			static const int  = 02;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getBook() const = 0;
			
			virtual std::shared_ptr<> get() const ;
			virtual std::shared_ptr<> get() const ;
			
			
			// End Class Book


			// Begin Class LibraryModel
			//Class and Feature IDs 
			static const int LIBRARYMODEL = 2;
			static const int LIBRARYMODEL_FEATURE_COUNT = 2;
			static const int LIBRARYMODEL_OPERATION_COUNT = 0;
			
			static const int  = 21;
			static const int  = 20;
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getLibraryModel() const = 0;
			
			virtual std::shared_ptr<> get() const ;
			virtual std::shared_ptr<> get() const ;
			
			
			// End Class LibraryModel


			// Begin Class NamedElement
			//Class and Feature IDs 
			static const int NAMEDELEMENT = 3;
			static const int NAMEDELEMENT_FEATURE_COUNT = 1;
			static const int NAMEDELEMENT_OPERATION_COUNT = 0;
			static const int  = 30;
			
			
			
			//Class and Feature Getter
			virtual std::shared_ptr<ecore::EClass> getNamedElement() const = 0;
			virtual std::shared_ptr<> get() const ;
			
			
			
			// End Class NamedElement

			
			

			//Singleton Instance and Getter
			private:
				static std::shared_ptr<EcoreSimpleExampleModelPackage> instance;
			public:
				static std::shared_ptr<EcoreSimpleExampleModelPackage> eInstance();
	};
}
#endif /* end of include guard: ECORESIMPLEEXAMPLEMODELPACKAGE_HPP */

