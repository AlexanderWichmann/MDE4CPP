description 'Example collection'

task buildSimpleExamples(dependsOn: ['compileEcoreExample', 'compileUMLExample', 'ecoreModelExample:buildLibraryModel_ecore', 'UMLModelExample:buildLibraryModel_uml']) {
	group 'Examples'
	description 'build all simple example applications in debug and release'	
}
task buildSimpleExamplesDebug(dependsOn: ['compileEcoreExampleDebug', 'compileUMLExampleDebug', 'ecoreModelExample:buildLibraryModel_ecoreDebug', 'UMLModelExample:buildLibraryModel_umlDebug']) {
	group 'Examples'
	description 'build all simple example applications in debug'	
}
task buildSimpleExamplesRelease(dependsOn: ['compileEcoreExampleRelease', 'compileUMLExampleRelease', 'ecoreModelExample:buildLibraryModel_ecoreRelease', 'UMLModelExample:buildLibraryModel_umlRelease']) {
	group 'Examples'
	description 'build all simple example applications in release'	
}

task compileEcoreExample(dependsOn: ['compileEcoreExampleDebug', 'compileEcoreExampleRelease']) {
	group 'Examples'
	description 'compile Ecore example in debug and release'
}
task compileEcoreExampleDebug {
	group 'Examples'
	description 'compile Ecore example in Debug'

	def folder = new File(file('./ecoreExample/.cmake/Debug').absolutePath)
	if( !folder.exists() ) {
		folder.mkdirs()
	}

	doLast {
		exec {
			workingDir 'ecoreExample/.cmake/Debug'
			commandLine 'cmd', '/c', 'cmake -G "MinGW Makefiles" -D CMAKE_BUILD_TYPE=Debug ' + file("./ecoreExample").absolutePath
		}
		exec {
			workingDir 'ecoreExample/.cmake/Debug'
			if (make_parallel_jobs)
			{			
				commandLine 'cmd', '/c', 'mingw32-make install -j' + make_parallel_jobs
			}
			else
			{
				commandLine 'cmd', '/c', 'mingw32-make install' 
			}
		}
	}
}
task compileEcoreExampleRelease {
	group 'Examples'
	description 'compile Ecore example in Release'

	def folder = new File(file('./ecoreExample/.cmake/Release').absolutePath)
	if( !folder.exists() ) {
		folder.mkdirs()
	}

	doLast {
		exec {
			workingDir 'ecoreExample/.cmake/Release'
			commandLine 'cmd', '/c', 'cmake -G "MinGW Makefiles" -D CMAKE_BUILD_TYPE=Release ' + file("./ecoreExample").absolutePath
		}
		exec {
			workingDir 'ecoreExample/.cmake/Release'
			if (make_parallel_jobs)
			{			
				commandLine 'cmd', '/c', 'mingw32-make install -j' + make_parallel_jobs
			}
			else
			{
				commandLine 'cmd', '/c', 'mingw32-make install' 
			}
		}
	}
}

task compileUMLExample(dependsOn: ['compileUMLExampleDebug', 'compileUMLExampleRelease']) {
	group 'Examples'
	description 'compile UML example in debug and release'
}
task compileUMLExampleDebug {
	group 'Examples'
	description 'compile UML example in Debug'

	def folder = new File(file('./UMLExample/.cmake/Debug').absolutePath)
	if( !folder.exists() ) {
		folder.mkdirs()
	}

	doLast {
		exec {
			workingDir 'UMLExample/.cmake/Debug'
			commandLine 'cmd', '/c', 'cmake -G "MinGW Makefiles" -D CMAKE_BUILD_TYPE=Debug ' + file("./UMLExample").absolutePath
		}
		exec {
			workingDir 'UMLExample/.cmake/Debug'
			if (make_parallel_jobs)
			{			
				commandLine 'cmd', '/c', 'mingw32-make install -j' + make_parallel_jobs
			}
			else
			{
				commandLine 'cmd', '/c', 'mingw32-make install' 
			}
		}
	}
}
task compileUMLExampleRelease {
	group 'Examples'
	description 'compile UML example in Release'

	def folder = new File(file('./UMLExample/.cmake/Release').absolutePath)
	if( !folder.exists() ) {
		folder.mkdirs()
	}

	doLast {
		exec {
			workingDir 'UMLExample/.cmake/Release'
			commandLine 'cmd', '/c', 'cmake -G "MinGW Makefiles" -D CMAKE_BUILD_TYPE=Release ' + file("./UMLExample").absolutePath
		}
		exec {
			workingDir 'UMLExample/.cmake/Release'
			if (make_parallel_jobs)
			{			
				commandLine 'cmd', '/c', 'mingw32-make install -j' + make_parallel_jobs
			}
			else
			{
				commandLine 'cmd', '/c', 'mingw32-make install' 
			}
		}
	}
}