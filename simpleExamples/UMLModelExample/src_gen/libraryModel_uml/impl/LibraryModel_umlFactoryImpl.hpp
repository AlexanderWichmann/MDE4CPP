//********************************************************************
//*    	
//* Warning: This file was generated by MDE4CPP Generator
//*
//********************************************************************

#ifndef LIBRARYMODEL_UML_FACTORYIMPL_HPP
#define LIBRARYMODEL_UML_FACTORYIMPL_HPP

#ifdef NDEBUG
  #define DEBUG_MESSAGE(a) /**/
#else
  #define DEBUG_MESSAGE(a) a
#endif
#include <iostream>
#include <memory>
#include "SubsetUnion.hpp"

#include "AuthorImpl.hpp"
#include "BookImpl.hpp"
#include "LibraryImpl.hpp"
#include "NamedModelElementImpl.hpp"
#include "PictureImpl.hpp"

#include "impl/FactoryImpl.hpp"
#include "LibraryModel_umlFactory.hpp"
#include <functional>

namespace LibraryModel_uml 
{
	class LibraryModel_umlFactoryImpl : virtual public uml::FactoryImpl , virtual public LibraryModel_umlFactory 
	{
		protected:
			friend class LibraryModel_umlFactory;
			// Constructor
			LibraryModel_umlFactoryImpl();

		public:
			virtual ~LibraryModel_umlFactoryImpl();
			virtual std::shared_ptr<uml::Element> create(std::shared_ptr<uml::Class> _class);
			virtual std::shared_ptr<uml::Element> create(std::string _className);

			//Creator functions
			virtual std::shared_ptr<LibraryModel_uml::Author> createAuthor();
			virtual std::shared_ptr<LibraryModel_uml::Author> createAuthor_in_Library(std::shared_ptr<LibraryModel_uml::Library> library); 
			
			virtual std::shared_ptr<LibraryModel_uml::Book> createBook();
			virtual std::shared_ptr<LibraryModel_uml::Book> createBook_in_Library(std::shared_ptr<LibraryModel_uml::Library> library); 
			
			virtual std::shared_ptr<LibraryModel_uml::Library> createLibrary();
			
			virtual std::shared_ptr<LibraryModel_uml::NamedModelElement> createNamedModelElement();
			
			virtual std::shared_ptr<LibraryModel_uml::Picture> createPicture();
			virtual std::shared_ptr<LibraryModel_uml::Picture> createPicture_in_Book(std::shared_ptr<LibraryModel_uml::Book> book); 
			
			

			//Package
			virtual std::shared_ptr<LibraryModel_umlPackage> getLibraryModel_umlPackage();

		private:
			static LibraryModel_umlFactory * create();
			std::map<std::string,std::function<std::shared_ptr<uml::Element>()>> m_creatorMap;

			virtual void init() {}
	};
}
#endif /* end of include guard: LIBRARYMODEL_UML_FACTORYIMPL_HPP */
