description 'Ecore meta models'

task generateEcore(type: JavaExec) {
	group 'ecore'
	description 'generate C++ code of ecore.ecore model'
	main = "-jar"
	args System.getenv('MDE4CPP_HOME') + "/application/generator/ecore4CPP.jar", "ecore.ecore", "../src_gen"
	inputs.files file(System.getenv('MDE4CPP_HOME') + "/application/generator/ecore4CPP.jar"), file("ecore.ecore")
	outputs.dir file("../src_gen")
	
	doFirst {
		if (System.getenv('MDE4CPP_HOME') == null) {
			throw new GradleException('System environment variable "MDE4CPP_HOME" is not defined')
		}
		if (!file(System.getenv('MDE4CPP_HOME') + "/application/generator/ecore4CPP.jar").exists()) {
			throw new GradleException('ecore4CPP.jar is missing in folder ' + file(System.getenv('MDE4CPP_HOME') + '/application/generator') + '. Please run task createEcore4CPP!')
		}
	}
}

task generateTypes(type: JavaExec) {
	group 'types'
	description 'generate C++ code of types.ecore model'
	main = "-jar"
	args System.getenv('MDE4CPP_HOME') + "/application/generator/ecore4CPP.jar", "types.ecore", "../src_gen"
	inputs.files file(System.getenv('MDE4CPP_HOME') + "/application/generator/ecore4CPP.jar"), file("types.ecore")
	outputs.dir file("../src_gen")
	
	doFirst {
		if (System.getenv('MDE4CPP_HOME') == null) {
			throw new GradleException('System environment variable "MDE4CPP_HOME" is not defined')
		}
		if (!file(System.getenv('MDE4CPP_HOME') + "/application/generator/ecore4CPP.jar").exists()) {
			throw new GradleException('ecore4CPP.jar is missing in folder ' + file(System.getenv('MDE4CPP_HOME') + '/application/generator') + '. Please run task createEcore4CPP!')
		}
	}
}