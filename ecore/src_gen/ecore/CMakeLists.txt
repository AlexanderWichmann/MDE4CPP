#############################################################################
#																	      #
#		 			CMakeList created by ecore4CPP Generator				  # 
#																	      #
#############################################################################

# C++ project of model ecore.ecore, generated by Ecore4CPP

CMAKE_MINIMUM_REQUIRED(VERSION 3.9)

PROJECT(ecore)

IF(NOT CMAKE_BUILD_TYPE) 
    SET(CMAKE_BUILD_TYPE Debug)
ENDIF(NOT CMAKE_BUILD_TYPE)
SET(CMAKE_DEBUG_POSTFIX d)

SET(CMAKE_CXX_STANDARD 14)

IF("${CMAKE_CXX_COMPILER_ID}" STREQUAL "AppleClang")
	SET(CMAKE_CXX_FLAGS "-Wall -Wno-overloaded-virtual -Wdeprecated-declarations -fmax-errors=5")
ELSE()
	SET(GCC_COVERAGE_LINK_FLAGS "-fopenmp")
	SET(CMAKE_CXX_FLAGS "-Wall -Wno-overloaded-virtual -Wdeprecated-declarations -fopenmp -fmax-errors=5")
ENDIF()

SET(CMAKE_CXX_FLAGS_DEBUG " -Og -ggdb -DACTIVITY_DEBUG_ON")
SET(CMAKE_CXX_FLAGS_RELEASE " -O3 -DNDEBUG")

string(REPLACE "\\" "/" MDE4CPP_HOME $ENV{MDE4CPP_HOME})

SET(SOURCE_FILES
	impl/EcoreFactoryImpl.cpp
	EcoreFactory.cpp
	impl/EcorePackageImpl.cpp
	impl/EcorePackageImpl_Creation.cpp
	impl/EcorePackageImpl_Initialization.cpp
	EcorePackage.cpp
	impl/EcorePluginImpl.cpp
	EcorePlugin.cpp
	impl/EAnnotationImpl.cpp
	impl/EAttributeImpl.cpp
	impl/EClassImpl.cpp
	impl/EClassifierImpl.cpp
	impl/EDataTypeImpl.cpp
	impl/EEnumImpl.cpp
	impl/EEnumLiteralImpl.cpp
	impl/EFactoryImpl.cpp
	impl/EGenericTypeImpl.cpp
	impl/EModelElementImpl.cpp
	impl/ENamedElementImpl.cpp
	impl/EObjectImpl.cpp
	impl/EOperationImpl.cpp
	impl/EPackageImpl.cpp
	impl/EParameterImpl.cpp
	impl/EReferenceImpl.cpp
	impl/EStringToStringMapEntryImpl.cpp
	impl/EStructuralFeatureImpl.cpp
	impl/ETypeParameterImpl.cpp
	impl/ETypedElementImpl.cpp
	#${MDE4CPP_HOME}/application/include/util/ProfileCallCount.cpp
)

INCLUDE_DIRECTORIES(
	../
	${MDE4CPP_HOME}/application/include
)

IF(NOT UNIX)
	IF (CMAKE_BUILD_TYPE STREQUAL "Debug")
		FIND_LIBRARY(PLUGINFRAMEWORK_DEBUG PluginFrameworkd ${MDE4CPP_HOME}/application/lib)
	ELSE()
		FIND_LIBRARY(PLUGINFRAMEWORK_RELEASE PluginFramework ${MDE4CPP_HOME}/application/lib)
	ENDIF()
ENDIF()

# Apple specific stuff
if(APPLE)
  set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -undefined dynamic_lookup")
  set(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} -undefined dynamic_lookup")
endif(APPLE)

IF(UNIX AND NOT APPLE)
    # for Linux, BSD, Solaris, Minix
	IF (CMAKE_BUILD_TYPE STREQUAL "Debug")
	ELSE()
	ENDIF()
ELSEIF(APPLE)
	IF (CMAKE_BUILD_TYPE STREQUAL "Debug")
	ELSE()
	ENDIF()
ELSE()
	IF (CMAKE_BUILD_TYPE STREQUAL "Debug")
	ELSE()
	ENDIF()
ENDIF()

ADD_LIBRARY(${PROJECT_NAME} SHARED ${SOURCE_FILES})

IF(CMAKE_BUILD_TYPE STREQUAL "Debug")
	IF(NOT UNIX)
		TARGET_LINK_LIBRARIES(${PROJECT_NAME} 
			debug ${PLUGINFRAMEWORK_DEBUG}
	)
	ELSE()
		TARGET_LINK_LIBRARIES(${PROJECT_NAME} 
			#debug ${PLUGINFRAMEWORK_DEBUG}
		)
	ENDIF()
ELSE()
	IF(NOT UNIX) 
		TARGET_LINK_LIBRARIES(${PROJECT_NAME}
			optimized ${PLUGINFRAMEWORK_RELEASE}
	)
	ELSE()
		TARGET_LINK_LIBRARIES(${PROJECT_NAME}
			#optimized ${PLUGINFRAMEWORK_RELEASE}
		)
	ENDIF()
ENDIF()

SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES PREFIX "")

#-----------------------------------------------------
# DELIVERING binaries and header to ${MDE4CPP_HOME}
#-----------------------------------------------------

INSTALL(TARGETS ${PROJECT_NAME}
	RUNTIME DESTINATION ${MDE4CPP_HOME}/application/bin
    LIBRARY DESTINATION ${MDE4CPP_HOME}/application/bin
    ARCHIVE DESTINATION ${MDE4CPP_HOME}/application/lib
)

INSTALL(DIRECTORY . DESTINATION ${MDE4CPP_HOME}/application/include/${PROJECT_NAME}
	FILES_MATCHING PATTERN "*.hpp"
	PATTERN ".cmake" EXCLUDE
)
