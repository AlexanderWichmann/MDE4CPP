//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef ECOREFACTORYIMPL_HPP
#define ECOREFACTORYIMPL_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

#define ACTIVITY_DEBUG_ON

#ifdef ACTIVITY_DEBUG_ON
    #define ACT_DEBUG(a) a
#else
    #define ACT_DEBUG(a) /**/
#endif

#include "impl/EFactoryImpl.hpp"

#include "EAnnotationImpl.hpp"
#include "EAttributeImpl.hpp"
#include "EClassImpl.hpp"
#include "EClassifierImpl.hpp"
#include "EDataTypeImpl.hpp"
#include "EEnumImpl.hpp"
#include "EEnumLiteralImpl.hpp"
#include "EFactoryImpl.hpp"
#include "EGenericTypeImpl.hpp"
#include "EModelElementImpl.hpp"
#include "ENamedElementImpl.hpp"
#include "EObjectImpl.hpp"
#include "EOperationImpl.hpp"
#include "EPackageImpl.hpp"
#include "EParameterImpl.hpp"
#include "EReferenceImpl.hpp"
#include "EStringToStringMapEntryImpl.hpp"
#include "EStructuralFeatureImpl.hpp"
#include "ETypeParameterImpl.hpp"
#include "ETypedElementImpl.hpp"

#include "EcoreFactory.hpp"

namespace ecore 
{
	class EcoreFactoryImpl : virtual public EFactoryImpl , virtual public EcoreFactory 
	{
		private:    
			EcoreFactoryImpl(EcoreFactoryImpl const&) = delete;
			EcoreFactoryImpl& operator=(EcoreFactoryImpl const&) = delete;

		protected:
			friend class EcoreFactory;
			// Constructor
			EcoreFactoryImpl();

		public:
			virtual ~EcoreFactoryImpl();
			virtual std::shared_ptr<EObject> create(EClass* _class) const;
			virtual std::shared_ptr<EObject> create(std::string _className) const;

			//Creator functions
			virtual EAttribute* createEAttribute() const ;
			virtual EAnnotation* createEAnnotation() const ;
			virtual EClass* createEClass() const ;
			virtual EDataType* createEDataType() const ;
			virtual EEnum* createEEnum() const ;
			virtual EEnumLiteral* createEEnumLiteral() const ;
			virtual EFactory* createEFactory() const ;
			virtual EObject* createEObject() const ;
			virtual EOperation* createEOperation() const ;
			virtual EPackage* createEPackage() const ;
			virtual EParameter* createEParameter() const ;
			virtual EReference* createEReference() const ;
			virtual EStringToStringMapEntry* createEStringToStringMapEntry() const ;
			virtual EGenericType* createEGenericType() const ;
			virtual ETypeParameter* createETypeParameter() const ;
			

			//Package
			virtual std::shared_ptr<EcorePackage> getEcorePackage() const;

		private:
			static EcoreFactory * create();
			std::map<std::string,std::function<ecore::EObject*()>> m_creatorMap;

			virtual void init() {}

	};
}
#endif /* end of include guard: ECOREFACTORYIMPL_HPP */

