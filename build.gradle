plugins {
	id "tui.sse.mde4cpp.mde4cpp-compile-plugin" version "0.3"
	id "tui.sse.mde4cpp.mde4cpp-generate-plugin" version "0.2"
}
apply plugin: 'base' 

description 'Build tasks for project: fUML'

task buildFUML(dependsOn: ['generateFUML', 'compileFUML']) {
	group 'fUML'
	description 'build fUML'
}

task compileFUML(type: tui.sse.mde4cpp.MDE4CPPCompile) {
	group 'fUML'
	description 'compile fUML'

	projectFolder = file("./src_gen/fUML")
}

task generateFUML(type: tui.sse.mde4cpp.MDE4CPPGenerate) {
	group 'fUML'
	description 'generate C++ code of fUML.ecore model'
	
	modelFilePath = file("./model/fUML.ecore")
}

compileFUML.mustRunAfter generateFUML

clean.doFirst {
	def cmakeFolder = file('./src_gen/fUML/.cmake/')
	if(cmakeFolder.exists()) {
    	delete cmakeFolder.absolutePath
   		println "deleting folder " + cmakeFolder.absolutePath
	}
}
