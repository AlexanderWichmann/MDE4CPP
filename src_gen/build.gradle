description 'Generated source code of UML meta model'

task compileUML(dependsOn: ['checkUtil', 'uml:build']) {
	group 'UML'
	description 'compile uml in debug and release'
}
task compileUMLDebug(dependsOn: ['checkUtil', 'uml:umlDebugSharedLibrary', 'uml:deliverUmlHeaders', 'uml:deliverUmlDebugSharedLibrary']) {
	group 'UML'
	description 'compile uml in debug'
}
task compileUMLRelease(dependsOn: ['checkUtil', 'uml:umlReleaseSharedLibrary', 'uml:deliverUmlHeaders', 'uml:deliverUmlReleaseSharedLibrary']) {
	group 'UML'
	description 'compile uml in release'
}

task checkUtil {
	doFirst() {
		if (!file(System.getenv('MDE4CPP_HOME') + "/application/include/util").exists()) {
			throw new GradleException('Folder ' + file(System.getenv('MDE4CPP_HOME') + '/application/include/util') + ' is missing. Please run task util:deliverUtil!')
		}
	}
}

tasks.getByPath('uml:build').mustRunAfter checkUtil
tasks.getByPath('uml:umlDebugSharedLibrary').mustRunAfter checkUtil
tasks.getByPath('uml:umlReleaseSharedLibrary').mustRunAfter checkUtil
tasks.getByPath('uml:deliverUmlHeaders').mustRunAfter tasks.getByPath('uml:umlDebugSharedLibrary')
tasks.getByPath('uml:deliverUmlDebugSharedLibrary').mustRunAfter tasks.getByPath('uml:umlDebugSharedLibrary')
tasks.getByPath('uml:deliverUmlHeaders').mustRunAfter tasks.getByPath('uml:umlReleaseSharedLibrary')
tasks.getByPath('uml:deliverUmlReleaseSharedLibrary').mustRunAfter tasks.getByPath('uml:umlReleaseSharedLibrary')