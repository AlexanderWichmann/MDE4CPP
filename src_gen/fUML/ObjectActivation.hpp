//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_OBJECTACTIVATION_HPP
#define FUML_OBJECTACTIVATION_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

#include <string>
#include <map>
#include <vector>
#include "boost/any.hpp"

//*********************************
// generated Includes

//Forward Declaration for used types
namespace uml 
{
	class Class;
}

namespace fUML 
{
	class ClassifierBehaviorExecution;
}

namespace fUML 
{
	class EventAccepter;
}

namespace fUML 
{
	class Object;
}

namespace fUML 
{
	class ParameterValue;
}

namespace fUML 
{
	class SignalInstance;
}

// base class includes

// enum includes

#include "EObject.hpp"

//*********************************
namespace fUML 
{
	/*!
	 */
	class ObjectActivation : virtual public ecore::EObject 
	{
		public:
 			ObjectActivation(const ObjectActivation &) {}
			ObjectActivation& operator=(ObjectActivation const&) = delete;
	
		protected:
			ObjectActivation(){}

		public:
			virtual ecore::EObject* copy() const = 0;

			//destructor
			virtual ~ObjectActivation() {}

			//*********************************
			// Operations
			//*********************************
			/*!
			 */ 
			virtual void startBehavior(uml::Class *  classifier,std::vector<fUML::ParameterValue * > *  inputs)  = 0;
			
			/*!
			 */ 
			virtual void stop()  = 0;
			
			/*!
			 */ 
			virtual void _register(fUML::EventAccepter *  accepter)  = 0;
			
			/*!
			 */ 
			virtual void unregister(fUML::EventAccepter *  accepter)  = 0;
			
			/*!
			 */ 
			virtual void send(fUML::SignalInstance *  signalInstance)  = 0;
			
			/*!
			 */ 
			virtual void dispatchNextEvent()  = 0;
			
			/*!
			 */ 
			virtual fUML::SignalInstance *  retrieveNextEvent()  = 0;
			
			/*!
			 */ 
			virtual void _startObjectBehavior()  = 0;
			
			/*!
			 */ 
			virtual void _send(boost::any signal)  = 0;
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			//*********************************
			// Reference
			//*********************************
			/*!
			 */
			virtual std::vector<fUML::EventAccepter * > *  getWaitingEventAccepters() const = 0;
			
			/*!
			 */
			virtual std::vector<fUML::SignalInstance * > *  getEventPool() const = 0;
			
			/*!
			 */
			virtual fUML::Object *  getObject() const = 0;
			
			/*!
			 */
			virtual void setObject(fUML::Object *  _object) = 0;
			
			/*!
			 */
			virtual std::vector<fUML::ClassifierBehaviorExecution * > *  getClassifierBehaviorExecutions() const = 0;
			
			

		protected:
			//*********************************
			// Attribute Members
			//*********************************
			
			
			//*********************************
			// Reference Members
			//*********************************
			/*!
			 */
			std::vector<fUML::EventAccepter * > *  m_waitingEventAccepters =  nullptr ;
			/*!
			 */
			std::vector<fUML::SignalInstance * > *  m_eventPool =  nullptr ;
			/*!
			 */
			fUML::Object *  m_object =  nullptr ;
			/*!
			 */
			std::vector<fUML::ClassifierBehaviorExecution * > *  m_classifierBehaviorExecutions =  nullptr ;
			

		public:
			//*********************************
			// Union Getter
			//*********************************
			 
	};

}
#endif /* end of include guard: FUML_OBJECTACTIVATION_HPP */

