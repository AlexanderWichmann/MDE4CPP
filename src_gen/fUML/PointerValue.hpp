#ifndef FUML_PointerVALUE_HPP
#define FUML_PointerVALUE_HPP


//********************************************************************
//*    
//* Warning: This file was generated by Mesapp Generator
//*
//********************************************************************



#include <QtCore/QList>
#include <QtCore/QMap>
#include <QString>
#include <QObject>



#include "Element.hpp"
#include "boost/any.hpp"

//*********************************
// generated Includes
 

//Forward Declaration for used types
namespace uml {
class PrimitiveType;
}

namespace uml {
class ValueSpecification;
}

namespace fUML {
class Value;
}

namespace fUML {
class PrimitiveValue;
}

// base class includes
#include "PrimitiveValue.hpp"
// enum includes



//*********************************

namespace fUML {

/*!
 */
class PointerValue:virtual public PrimitiveValue{

public:
 PointerValue(PointerValue &) {}

 PointerValue& operator=(PointerValue const&) = delete;

protected:
	PointerValue(){}


public:
virtual ecore::EObject *  copy() = 0;


//destructor
virtual ~PointerValue() {}

//*********************************
// Operations
//*********************************
/*!
 */ 
virtual uml::ValueSpecification *  specify() = 0;
/*!
 */ 
virtual bool equals(fUML::Value *  otherValue) = 0;
/*!
 */ 
virtual QString toString() = 0;

//*********************************
// Attributes Getter Setter
//*********************************
/*!
 */ 
virtual uml::Element* getValue() const = 0;
/*!
 */ 
virtual void setValue (uml::Element* _value)= 0;

//*********************************
// Reference
//*********************************


protected:

//*********************************
// Attribute Members
//*********************************
/*!
 */ 
uml::Element* m_value ;


//*********************************
// Reference Members
//*********************************



public:
//*********************************
// Union Getter
//*********************************
 


private:

};

}

#endif /* end of include guard: FUML_PointerVALUE_HPP */


