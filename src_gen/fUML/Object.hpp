//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_OBJECT_HPP
#define FUML_OBJECT_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

#include <string>
#include <map>
#include <vector>
#include "boost/any.hpp"

//*********************************
// generated Includes

//Forward Declaration for used types
namespace uml 
{
	class Class;
}

namespace uml 
{
	class Classifier;
}

namespace fUML 
{
	class EventAccepter;
}

namespace fUML 
{
	class Execution;
}

namespace fUML 
{
	class ExtensionalValue;
}

namespace fUML 
{
	class FeatureValue;
}

namespace fUML 
{
	class Locus;
}

namespace fUML 
{
	class ObjectActivation;
}

namespace uml 
{
	class Operation;
}

namespace fUML 
{
	class ParameterValue;
}

namespace fUML 
{
	class SignalInstance;
}

namespace fUML 
{
	class Value;
}

// base class includes
#include "ExtensionalValue.hpp"

// enum includes


//*********************************
namespace fUML 
{
	/*!
	 */
	class Object:virtual public ExtensionalValue	{
		public:
 			Object(const Object &) {}
			Object& operator=(Object const&) = delete;
	
		protected:
			Object(){}

		public:
			virtual ecore::EObject* copy() const = 0;

			//destructor
			virtual ~Object() {}

			//*********************************
			// Operations
			//*********************************
			/*!
			 */ 
			virtual void startBehavior(uml::Class *  classifier,std::vector<fUML::ParameterValue * > *  inputs)  = 0;
			
			/*!
			 */ 
			virtual fUML::Execution *  dispatch(uml::Operation *  operation)  = 0;
			
			/*!
			 */ 
			virtual void send(fUML::SignalInstance *  signalInstance)  = 0;
			
			/*!
			 */ 
			virtual void _register(fUML::EventAccepter *  accepter)  = 0;
			
			/*!
			 */ 
			virtual void unregister(fUML::EventAccepter *  accepter)  = 0;
			
			/*!
			 */ 
			virtual fUML::Value *  new_()  = 0;
			
			/*!
			 */ 
			virtual void destroy()  = 0;
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			//*********************************
			// Reference
			//*********************************
			/*!
			 */
			virtual std::vector<uml::Classifier * > *  getTypes() const = 0;
			
			/*!
			 */
			virtual fUML::ObjectActivation *  getObjectActivation() const = 0;
			
			/*!
			 */
			virtual void setObjectActivation(fUML::ObjectActivation *  _objectActivation) = 0;
			
			

		protected:
			//*********************************
			// Attribute Members
			//*********************************
			
			
			//*********************************
			// Reference Members
			//*********************************
			/*!
			 */
			std::vector<uml::Classifier * > *  m_types =  nullptr ;
			/*!
			 */
			fUML::ObjectActivation *  m_objectActivation =  nullptr ;
			

		public:
			//*********************************
			// Union Getter
			//*********************************
			 
	};

}
#endif /* end of include guard: FUML_OBJECT_HPP */

