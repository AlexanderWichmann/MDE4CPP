//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_LOCUSLOCUSIMPL_HPP
#define FUML_LOCUSLOCUSIMPL_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

//*********************************
// generated Includes

//Model includes
#include "../Locus.hpp"


#include "impl/EObjectImpl.hpp"

#include "Classifier.hpp"
#include "Behavior.hpp"
#include "Class.hpp"
#include "FUMLFactory.hpp"
#include "ExecutionFactory.hpp"
#include "ExtensionalValue.hpp"
#include "Executor.hpp"
#include "Object.hpp"
#include "Execution.hpp"


//*********************************
namespace fUML 
{
	class LocusImpl :virtual public ecore::EObjectImpl,
virtual public Locus
	{
		public: 
			LocusImpl(const LocusImpl & obj);
			virtual ecore::EObject *  copy() const;

		private:    
			LocusImpl& operator=(LocusImpl const&) = delete;

		protected:
			friend class FUMLFactoryImpl;
			LocusImpl();

		public:
			//destructor
			virtual ~LocusImpl();
			
			//*********************************
			// Operations
			//*********************************
			/*!
			 */ 
			virtual bool conforms(uml::Classifier *  type,uml::Classifier *  classifier)  ;
			
			/*!
			 */ 
			virtual void assignExecutor(fUML::Executor *  executor)  ;
			
			/*!
			 */ 
			virtual void assignFactory(fUML::ExecutionFactory *  factory)  ;
			
			/*!
			 */ 
			virtual std::vector<fUML::ExtensionalValue * > *  retrieveExtent(uml::Classifier *  classifier)  ;
			
			/*!
			 */ 
			virtual void add(fUML::ExtensionalValue *  value)  ;
			
			/*!
			 */ 
			virtual void remove(fUML::ExtensionalValue *  value)  ;
			
			/*!
			 */ 
			virtual fUML::Object *  instantiate(uml::Class *  type)  ;
			
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			
			//*********************************
			// Reference
			//*********************************
			/*!
			 */
			virtual fUML::Executor *  getExecutor() const ;
			
			/*!
			 */
			virtual void setExecutor(fUML::Executor *  _executor) ;
			
			/*!
			 */
			virtual fUML::ExecutionFactory *  getFactory() const ;
			
			/*!
			 */
			virtual void setFactory(fUML::ExecutionFactory *  _factory) ;
			
			/*!
			 */
			virtual std::vector<fUML::ExtensionalValue * > *  getExtensionalValues() const ;
			
							
			
			//*********************************
			// Union Getter
			//*********************************
			 
			 
			//*********************************
			// Structural Feature Getter/Setter
			//*********************************
			
			virtual boost::any eGet(int featureID, bool resolve, bool coreType) const ;
			
		protected:
			virtual ecore::EClass* eStaticClass() const;
	};
}
#endif /* end of include guard: FUML_LOCUSLOCUSIMPL_HPP */

