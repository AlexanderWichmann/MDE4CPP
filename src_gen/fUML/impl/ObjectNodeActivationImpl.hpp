//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_OBJECTNODEACTIVATIONOBJECTNODEACTIVATIONIMPL_HPP
#define FUML_OBJECTNODEACTIVATIONOBJECTNODEACTIVATIONIMPL_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

//*********************************
// generated Includes

//Model includes
#include "../ObjectNodeActivation.hpp"

#include "impl/ActivityNodeActivationImpl.hpp"

#include "Token.hpp"
#include "FUMLFactory.hpp"

//*********************************
namespace fUML 
{
	class ObjectNodeActivationImpl :virtual public ActivityNodeActivationImpl, virtual public ObjectNodeActivation
	{
		public: 
			ObjectNodeActivationImpl(const ObjectNodeActivationImpl & obj);
			virtual ecore::EObject *  copy() const;

		private:    
			ObjectNodeActivationImpl& operator=(ObjectNodeActivationImpl const&) = delete;

		protected:
			friend class FUMLFactoryImpl;
			ObjectNodeActivationImpl();

		public:
			//destructor
			virtual ~ObjectNodeActivationImpl();
			
			//*********************************
			// Operations
			//*********************************
			/*!
			 */ 
			virtual int countOfferedValues()  ;
			
			/*!
			 */ 
			virtual void sendUnofferedTokens()  ;
			
			/*!
			 */ 
			virtual int countUnofferedTokens()  ;
			
			/*!
			 */ 
			virtual std::vector<fUML::Token * > *  getUnofferedTokens()  ;
			
			/*!
			 */ 
			virtual std::vector<fUML::Token * > *  takeUnofferedTokens()  ;
			
			/*!
			 */ 
			virtual void run()  ;
			
			/*!
			 */ 
			virtual void sendOffers(std::vector<fUML::Token * > *  tokens)  ;
			
			/*!
			 */ 
			virtual void terminate()  ;
			
			/*!
			 */ 
			virtual void addToken(fUML::Token *  token)  ;
			
			/*!
			 */ 
			virtual int removeToken(fUML::Token *  token)  ;
			
			/*!
			 */ 
			virtual void clearTokens()  ;
			
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			/*!
			 */ 
			virtual int getOfferedTokenCount() const ;
			
			/*!
			 */ 
			virtual void setOfferedTokenCount (int _offeredTokenCount); 
			
			
			
			//*********************************
			// Reference
			//*********************************
							
			
			//*********************************
			// Union Getter
			//*********************************
			 
			 
			//*********************************
			// Structural Feature Getter/Setter
			//*********************************
			
			virtual boost::any eGet(int featureID, bool resolve, bool coreType) const ;
			
		protected:
			virtual ecore::EClass* eStaticClass() const;
	};
}
#endif /* end of include guard: FUML_OBJECTNODEACTIVATIONOBJECTNODEACTIVATIONIMPL_HPP */

