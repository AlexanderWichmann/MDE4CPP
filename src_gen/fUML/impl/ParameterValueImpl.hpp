//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_PARAMETERVALUEPARAMETERVALUEIMPL_HPP
#define FUML_PARAMETERVALUEPARAMETERVALUEIMPL_HPP

//*********************************
// generated Includes

//Model includes
#include "../ParameterValue.hpp"


#include "ecore/impl/EObjectImpl.hpp"

//*********************************
namespace fUML 
{
	class ParameterValueImpl :virtual public ecore::EObjectImpl,
virtual public ParameterValue 
	{
		public: 
			ParameterValueImpl(const ParameterValueImpl & obj);
			virtual std::shared_ptr<ecore::EObject> copy() const;

		private:    
			ParameterValueImpl& operator=(ParameterValueImpl const&) = delete;
			virtual std::shared_ptr<ParameterValue> getThisParameterValuePtr();

		protected:
			friend class FUMLFactoryImpl;
			ParameterValueImpl();



		public:
			//destructor
			virtual ~ParameterValueImpl();
			
			//*********************************
			// Operations
			//*********************************
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			
			//*********************************
			// Reference
			//*********************************
			/*!
			 */
			virtual std::shared_ptr<uml::Parameter > getParameter() const ;
			
			/*!
			 */
			virtual void setParameter(std::shared_ptr<uml::Parameter> _parameter_parameter) ;
			/*!
			 */
			virtual std::shared_ptr<Bag<fUML::Value>> getValues() const ;
			
							
			
			//*********************************
			// Union Getter
			//*********************************
			 
			 
			//*********************************
			// Structural Feature Getter/Setter
			//*********************************
			
			virtual boost::any eGet(int featureID, bool resolve, bool coreType) const ;
			virtual void eSet(int featureID, boost::any newValue) ;

			virtual std::shared_ptr<ecore::EObject> eContainer() const ; 
			
		protected:
			virtual std::shared_ptr<ecore::EClass> eStaticClass() const;
	};
}
#endif /* end of include guard: FUML_PARAMETERVALUEPARAMETERVALUEIMPL_HPP */
