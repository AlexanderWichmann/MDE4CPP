//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_EXPANSIONREGIONACTIVATIONEXPANSIONREGIONACTIVATIONIMPL_HPP
#define FUML_EXPANSIONREGIONACTIVATIONEXPANSIONREGIONACTIVATIONIMPL_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

//*********************************
// generated Includes

//Model includes
#include "../ExpansionRegionActivation.hpp"

#include "impl/ActionActivationImpl.hpp"



//*********************************
namespace fUML 
{
	class ExpansionRegionActivationImpl :virtual public ActionActivationImpl, virtual public ExpansionRegionActivation 
	{
		public: 
			ExpansionRegionActivationImpl(const ExpansionRegionActivationImpl & obj);
			virtual ecore::EObject *  copy() const;

		private:    
			ExpansionRegionActivationImpl& operator=(ExpansionRegionActivationImpl const&) = delete;

		protected:
			friend class FUMLFactoryImpl;
			ExpansionRegionActivationImpl();

		public:
			//destructor
			virtual ~ExpansionRegionActivationImpl();
			
			//*********************************
			// Operations
			//*********************************
			/*!
			 */ 
			virtual void doStructuredActivity()  ;
			
			/*!
			 */ 
			virtual void runGroup(std::shared_ptr<fUML::ExpansionActivationGroup>  activationGroup)  ;
			
			/*!
			 */ 
			virtual std::shared_ptr<fUML::ExpansionNodeActivation>  getExpansionNodeActivation(std::shared_ptr<uml::ExpansionNode>  node)  ;
			
			/*!
			 */ 
			virtual int numberOfValues()  ;
			
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			
			//*********************************
			// Reference
			//*********************************
			/*!
			 */
			virtual std::shared_ptr<std::vector<std::shared_ptr<fUML::TokenSet>>> getInputTokens() const ;
			
			/*!
			 */
			virtual std::shared_ptr<std::vector<std::shared_ptr<fUML::TokenSet>>> getInputExpansionTokens() const ;
			
			/*!
			 */
			virtual std::shared_ptr<std::vector<std::shared_ptr<fUML::ExpansionActivationGroup>>> getActivationGroups() const ;
			
							
			
			//*********************************
			// Union Getter
			//*********************************
			 
			 
			//*********************************
			// Structural Feature Getter/Setter
			//*********************************
			
			virtual boost::any eGet(int featureID, bool resolve, bool coreType) const ;
			
		protected:
			virtual std::shared_ptr<ecore::EClass> eStaticClass() const;
	};
}
#endif /* end of include guard: FUML_EXPANSIONREGIONACTIVATIONEXPANSIONREGIONACTIVATIONIMPL_HPP */

