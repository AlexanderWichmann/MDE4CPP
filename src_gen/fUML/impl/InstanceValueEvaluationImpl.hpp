//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_INSTANCEVALUEEVALUATIONINSTANCEVALUEEVALUATIONIMPL_HPP
#define FUML_INSTANCEVALUEEVALUATIONINSTANCEVALUEEVALUATIONIMPL_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

//*********************************
// generated Includes

//Model includes
#include "../InstanceValueEvaluation.hpp"

#include "impl/EvaluationImpl.hpp"

#include "InstanceSpecification.hpp"
#include "InstanceValue.hpp"
#include "Classifier.hpp"
#include "EnumerationLiteral.hpp"
#include "FUMLFactory.hpp"
#include "EnumerationLiteral.hpp"
#include "DataType.hpp"
#include "Object.hpp"
#include "Slot.hpp"
#include "Value.hpp"
#include "StructuralFeature.hpp"
#include "Enumeration.hpp"
#include "Behavior.hpp"
#include "Class.hpp"

//*********************************
namespace fUML 
{
	class InstanceValueEvaluationImpl :virtual public EvaluationImpl, virtual public InstanceValueEvaluation
	{
		public: 
			InstanceValueEvaluationImpl(const InstanceValueEvaluationImpl & obj);
			virtual ecore::EObject *  copy() const;

		private:    
			InstanceValueEvaluationImpl& operator=(InstanceValueEvaluationImpl const&) = delete;

		protected:
			friend class FUMLFactoryImpl;
			InstanceValueEvaluationImpl();

		public:
			//destructor
			virtual ~InstanceValueEvaluationImpl();
			
			//*********************************
			// Operations
			//*********************************
			/*!
			 */ 
			virtual fUML::Value *  evaluate()  ;
			
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			
			//*********************************
			// Reference
			//*********************************
							
			
			//*********************************
			// Union Getter
			//*********************************
			 
			 
			//*********************************
			// Structural Feature Getter/Setter
			//*********************************
			
			virtual boost::any eGet(int featureID, bool resolve, bool coreType) const ;
			
		protected:
			virtual ecore::EClass* eStaticClass() const;
	};
}
#endif /* end of include guard: FUML_INSTANCEVALUEEVALUATIONINSTANCEVALUEEVALUATIONIMPL_HPP */

