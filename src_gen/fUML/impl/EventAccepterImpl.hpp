//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_EVENTACCEPTEREVENTACCEPTERIMPL_HPP
#define FUML_EVENTACCEPTEREVENTACCEPTERIMPL_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

//*********************************
// generated Includes

//Model includes
#include "../EventAccepter.hpp"


#include "impl/EObjectImpl.hpp"


//*********************************
namespace fUML 
{
	class EventAccepterImpl :virtual public ecore::EObjectImpl,
virtual public EventAccepter
	{
		public: 
			EventAccepterImpl(const EventAccepterImpl & obj);
			virtual ecore::EObject *  copy() const;

		private:    
			EventAccepterImpl& operator=(EventAccepterImpl const&) = delete;

		protected:
			friend class FUMLFactoryImpl;
			EventAccepterImpl();

		public:
			//destructor
			virtual ~EventAccepterImpl();
			
			//*********************************
			// Operations
			//*********************************
			/*!
			 */ 
			virtual void accept(fUML::SignalInstance *  signalInstance)  ;
			
			/*!
			 */ 
			virtual bool match(fUML::SignalInstance *  signalInstance)  ;
			
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			
			//*********************************
			// Reference
			//*********************************
							
			
			//*********************************
			// Union Getter
			//*********************************
			 
			 
			//*********************************
			// Structural Feature Getter/Setter
			//*********************************
			
			virtual boost::any eGet(int featureID, bool resolve, bool coreType) const ;
			
		protected:
			virtual ecore::EClass* eStaticClass() const;
	};
}
#endif /* end of include guard: FUML_EVENTACCEPTEREVENTACCEPTERIMPL_HPP */

