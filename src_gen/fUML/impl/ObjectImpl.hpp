//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_OBJECTOBJECTIMPL_HPP
#define FUML_OBJECTOBJECTIMPL_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

//*********************************
// generated Includes

//Model includes
#include "../Object.hpp"

#include "impl/ExtensionalValueImpl.hpp"

#include "FUMLFactory.hpp"
#include "UmlFactory.hpp"
#include "Class.hpp"
#include "Classifier.hpp"

//*********************************
namespace fUML 
{
	class ObjectImpl :virtual public ExtensionalValueImpl, virtual public Object
	{
		public: 
			ObjectImpl(const ObjectImpl & obj);
			virtual ecore::EObject *  copy() const;

		private:    
			ObjectImpl& operator=(ObjectImpl const&) = delete;

		protected:
			friend class FUMLFactoryImpl;
			ObjectImpl();

		public:
			//destructor
			virtual ~ObjectImpl();
			
			//*********************************
			// Operations
			//*********************************
			/*!
			 */ 
			virtual void startBehavior(uml::Class *  classifier,std::vector<fUML::ParameterValue * > *  inputs)  ;
			
			/*!
			 */ 
			virtual fUML::Execution *  dispatch(uml::Operation *  operation)  ;
			
			/*!
			 */ 
			virtual void send(fUML::SignalInstance *  signalInstance)  ;
			
			/*!
			 */ 
			virtual void _register(fUML::EventAccepter *  accepter)  ;
			
			/*!
			 */ 
			virtual void unregister(fUML::EventAccepter *  accepter)  ;
			
			/*!
			 */ 
			virtual fUML::Value *  new_()  ;
			
			/*!
			 */ 
			virtual void destroy()  ;
			
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			
			//*********************************
			// Reference
			//*********************************
			/*!
			 */
			virtual std::vector<uml::Classifier * > *  getTypes() const ;
			
			/*!
			 */
			virtual fUML::ObjectActivation *  getObjectActivation() const ;
			
			/*!
			 */
			virtual void setObjectActivation(fUML::ObjectActivation *  _objectActivation) ;
			
							
			
			//*********************************
			// Union Getter
			//*********************************
			 
			 
			//*********************************
			// Structural Feature Getter/Setter
			//*********************************
			
			virtual boost::any eGet(int featureID, bool resolve, bool coreType) const ;
			
		protected:
			virtual ecore::EClass* eStaticClass() const;
	};
}
#endif /* end of include guard: FUML_OBJECTOBJECTIMPL_HPP */

