//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_STRUCTURALFEATUREACTIONACTIVATIONSTRUCTURALFEATUREACTIONACTIVATIONIMPL_HPP
#define FUML_STRUCTURALFEATUREACTIONACTIVATIONSTRUCTURALFEATUREACTIONACTIVATIONIMPL_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

//*********************************
// generated Includes

//Model includes
#include "../StructuralFeatureActionActivation.hpp"

#include "impl/ActionActivationImpl.hpp"


//*********************************
namespace fUML 
{
	class StructuralFeatureActionActivationImpl :virtual public ActionActivationImpl, virtual public StructuralFeatureActionActivation
	{
		public: 
			StructuralFeatureActionActivationImpl(const StructuralFeatureActionActivationImpl & obj);
			virtual ecore::EObject *  copy() const;

		private:    
			StructuralFeatureActionActivationImpl& operator=(StructuralFeatureActionActivationImpl const&) = delete;

		protected:
			friend class FUMLFactoryImpl;
			StructuralFeatureActionActivationImpl();

		public:
			//destructor
			virtual ~StructuralFeatureActionActivationImpl();
			
			//*********************************
			// Operations
			//*********************************
			/*!
			 */ 
			virtual uml::Association *  getAssociation(uml::StructuralFeature *  feature)  ;
			
			/*!
			 */ 
			virtual std::vector<fUML::Link * > *  getMatchingLinks(uml::Association *  association,uml::StructuralFeature *  end,fUML::Value *  oppositeValue)  ;
			
			/*!
			 */ 
			virtual uml::Property *  getOppositeEnd(uml::Association *  association,uml::StructuralFeature *  end)  ;
			
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			
			//*********************************
			// Reference
			//*********************************
							
			
			//*********************************
			// Union Getter
			//*********************************
			 
			 
			//*********************************
			// Structural Feature Getter/Setter
			//*********************************
			
			virtual boost::any eGet(int featureID, bool resolve, bool coreType) const ;
			
		protected:
			virtual ecore::EClass* eStaticClass() const;
	};
}
#endif /* end of include guard: FUML_STRUCTURALFEATUREACTIONACTIVATIONSTRUCTURALFEATUREACTIONACTIVATIONIMPL_HPP */

