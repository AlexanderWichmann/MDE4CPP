//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_DATAVALUEDATAVALUEIMPL_HPP
#define FUML_DATAVALUEDATAVALUEIMPL_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

#define ACTIVITY_DEBUG_ON

#ifdef ACTIVITY_DEBUG_ON
    #define ACT_DEBUG(a) a
#else
    #define ACT_DEBUG(a) /**/
#endif

//*********************************
// generated Includes

//Model includes
#include "../DataValue.hpp"

#include "impl/CompoundValueImpl.hpp"

#include "SubsetUnion.hpp"

#include "DataValue.hpp"
#include "UmlFactory.hpp"
#include "FUMLFactory.hpp"
#include "CompoundValue.hpp"
#include "DataType.hpp"
#include "Classifier.hpp"


//*********************************
namespace fUML 
{
	class DataValueImpl :virtual public CompoundValueImpl, virtual public DataValue 
	{
		public: 
			DataValueImpl(const DataValueImpl & obj);
			virtual ecore::EObject *  copy() const;

		private:    
			DataValueImpl& operator=(DataValueImpl const&) = delete;

		protected:
			friend class FUMLFactoryImpl;
			DataValueImpl();

		public:
			//destructor
			virtual ~DataValueImpl();
			
			//*********************************
			// Operations
			//*********************************
			/*!
			 */ 
			virtual std::shared_ptr<fUML::Value> new_()  ;
			
			/*!
			 */ 
			virtual std::shared_ptr<Bag<uml::Classifier> > getTypes()  ;
			
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			
			//*********************************
			// Reference
			//*********************************
			/*!
			 */
			virtual std::shared_ptr<uml::DataType > getType() const ;
			
			/*!
			 */
			virtual void setType(std::shared_ptr<uml::DataType> _type_type) ;
							
			
			//*********************************
			// Union Getter
			//*********************************
			 
			 
			//*********************************
			// Structural Feature Getter/Setter
			//*********************************
			
			virtual boost::any eGet(int featureID, bool resolve, bool coreType) const ;
			
		protected:
			virtual std::shared_ptr<ecore::EClass> eStaticClass() const;
	};
}
#endif /* end of include guard: FUML_DATAVALUEDATAVALUEIMPL_HPP */

