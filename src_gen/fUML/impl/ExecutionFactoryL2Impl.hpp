//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_EXECUTIONFACTORYL2EXECUTIONFACTORYL2IMPL_HPP
#define FUML_EXECUTIONFACTORYL2EXECUTIONFACTORYL2IMPL_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

//*********************************
// generated Includes

//Model includes
#include "../ExecutionFactoryL2.hpp"

#include "impl/ExecutionFactoryL1Impl.hpp"

#include <Activity.hpp>
#include <FUMLFactory.hpp>
#include <ActivityParameterNode.hpp>
#include <InitialNode.hpp>
#include <ActivityFinalNode.hpp>
#include <FlowFinalNode.hpp>
#include <JoinNode.hpp>
#include <MergeNode.hpp>
#include <ForkNode.hpp>
#include <DecisionNode.hpp>
#include <InputPin.hpp>
#include <OutputPin.hpp>
#include <CallBehaviorAction.hpp>
#include <CallOperationAction.hpp>
#include <SendSignalAction.hpp>
#include <ReadSelfAction.hpp>
#include <TestIdentityAction.hpp>
#include <ValueSpecificationAction.hpp>
#include <CreateObjectAction.hpp>
#include <DestroyObjectAction.hpp>
#include <ReadStructuralFeatureAction.hpp>
#include <ClearStructuralFeatureAction.hpp>
#include <AddStructuralFeatureValueAction.hpp>
#include <RemoveStructuralFeatureValueAction.hpp>
#include <ReadLinkAction.hpp>
#include <ClearAssociationAction.hpp>
#include <CreateLinkAction.hpp>
#include <DestroyLinkAction.hpp>
#include "FlowFinalNode.hpp"

//*********************************
namespace fUML 
{
	class ExecutionFactoryL2Impl :virtual public ExecutionFactoryL1Impl, virtual public ExecutionFactoryL2
	{
		public: 
			ExecutionFactoryL2Impl(const ExecutionFactoryL2Impl & obj);
			virtual ecore::EObject *  copy() const;

		private:    
			ExecutionFactoryL2Impl& operator=(ExecutionFactoryL2Impl const&) = delete;

		protected:
			friend class FUMLFactoryImpl;
			ExecutionFactoryL2Impl();

		public:
			//destructor
			virtual ~ExecutionFactoryL2Impl();
			
			//*********************************
			// Operations
			//*********************************
			/*!
			 */ 
			virtual fUML::SemanticVisitor *  instantiateVisitor(uml::Element *  element)  ;
			
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			
			//*********************************
			// Reference
			//*********************************
							
			
			//*********************************
			// Union Getter
			//*********************************
			 
			 
			//*********************************
			// Structural Feature Getter/Setter
			//*********************************
			
			virtual boost::any eGet(int featureID, bool resolve, bool coreType) const ;
			
		protected:
			virtual ecore::EClass* eStaticClass() const;
	};
}
#endif /* end of include guard: FUML_EXECUTIONFACTORYL2EXECUTIONFACTORYL2IMPL_HPP */

