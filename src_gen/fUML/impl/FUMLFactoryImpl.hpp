//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUMLFACTORYIMPL_HPP
#define FUMLFACTORYIMPL_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

#ifdef ACTIVITY_DEBUG_ON
    #define ACT_DEBUG(a) a
#else
    #define ACT_DEBUG(a) /**/
#endif

//#include "util/ProfileCallCount.hpp"

#include "ecore/impl/EFactoryImpl.hpp"

#include "fUML/impl/AcceptEventActionActivationImpl.hpp"
#include "fUML/impl/AcceptEventActionEventAccepterImpl.hpp"
#include "fUML/impl/ActionActivationImpl.hpp"
#include "fUML/impl/ActivityEdgeInstanceImpl.hpp"
#include "fUML/impl/ActivityExecutionImpl.hpp"
#include "fUML/impl/ActivityFinalNodeActivationImpl.hpp"
#include "fUML/impl/ActivityNodeActivationImpl.hpp"
#include "fUML/impl/ActivityNodeActivationGroupImpl.hpp"
#include "fUML/impl/ActivityParameterNodeActivationImpl.hpp"
#include "fUML/impl/AddStructuralFeatureValueActionActivationImpl.hpp"
#include "fUML/impl/BooleanValueImpl.hpp"
#include "fUML/impl/CallActionActivationImpl.hpp"
#include "fUML/impl/CallBehaviorActionActivationImpl.hpp"
#include "fUML/impl/CallOperationActionActivationImpl.hpp"
#include "fUML/impl/CentralBufferNodeActivationImpl.hpp"
#include "fUML/impl/ChoiceStrategyImpl.hpp"
#include "fUML/impl/ClassifierBehaviorExecutionImpl.hpp"
#include "fUML/impl/ClassifierBehaviorExecutionActivityImpl.hpp"
#include "fUML/impl/ClassifierBehaviorExecutionActivity_OwnedBehaviorActivity1Impl.hpp"
#include "fUML/impl/ClauseActivationImpl.hpp"
#include "fUML/impl/ClearAssociationActionActivationImpl.hpp"
#include "fUML/impl/ClearStructuralFeatureActionActivationImpl.hpp"
#include "fUML/impl/CompoundValueImpl.hpp"
#include "fUML/impl/ConditionalNodeActivationImpl.hpp"
#include "fUML/impl/ControlNodeActivationImpl.hpp"
#include "fUML/impl/ControlTokenImpl.hpp"
#include "fUML/impl/CreateLinkActionActivationImpl.hpp"
#include "fUML/impl/CreateObjectActionActivationImpl.hpp"
#include "fUML/impl/DataStoreNodeActivationImpl.hpp"
#include "fUML/impl/DataValueImpl.hpp"
#include "fUML/impl/DecisionNodeActivationImpl.hpp"
#include "fUML/impl/DestroyLinkActionActivationImpl.hpp"
#include "fUML/impl/DestroyObjectActionActivationImpl.hpp"
#include "fUML/impl/DispatchStrategyImpl.hpp"
#include "fUML/impl/EnumerationValueImpl.hpp"
#include "fUML/impl/EvaluationImpl.hpp"
#include "fUML/impl/EventAccepterImpl.hpp"
#include "fUML/impl/EventDispatchLoopImpl.hpp"
#include "fUML/impl/ExecutionImpl.hpp"
#include "fUML/impl/ExecutionFactoryImpl.hpp"
#include "fUML/impl/ExecutionFactoryL1Impl.hpp"
#include "fUML/impl/ExecutionFactoryL2Impl.hpp"
#include "fUML/impl/ExecutionFactoryL3Impl.hpp"
#include "fUML/impl/ExecutorImpl.hpp"
#include "fUML/impl/ExpansionActivationGroupImpl.hpp"
#include "fUML/impl/ExpansionNodeActivationImpl.hpp"
#include "fUML/impl/ExpansionRegionActivationImpl.hpp"
#include "fUML/impl/ExtensionalValueImpl.hpp"
#include "fUML/impl/ExtensionalValueListImpl.hpp"
#include "fUML/impl/FIFOGetNextEventStrategyImpl.hpp"
#include "fUML/impl/FeatureValueImpl.hpp"
#include "fUML/impl/FirstChoiceStrategyImpl.hpp"
#include "fUML/impl/FlowFinalNodeActivationImpl.hpp"
#include "fUML/impl/ForkNodeActivationImpl.hpp"
#include "fUML/impl/ForkedTokenImpl.hpp"
#include "fUML/impl/GetNextEventStrategyImpl.hpp"
#include "fUML/impl/InitialNodeActivationImpl.hpp"
#include "fUML/impl/InputPinActivationImpl.hpp"
#include "fUML/impl/InstanceValueEvaluationImpl.hpp"
#include "fUML/impl/IntegerValueImpl.hpp"
#include "fUML/impl/InvocationActionActivationImpl.hpp"
#include "fUML/impl/JoinNodeActivationImpl.hpp"
#include "fUML/impl/LinkImpl.hpp"
#include "fUML/impl/LinkActionActivationImpl.hpp"
#include "fUML/impl/LiteralBooleanEvaluationImpl.hpp"
#include "fUML/impl/LiteralEvaluationImpl.hpp"
#include "fUML/impl/LiteralIntegerEvaluationImpl.hpp"
#include "fUML/impl/LiteralNullEvaluationImpl.hpp"
#include "fUML/impl/LiteralRealEvaluationImpl.hpp"
#include "fUML/impl/LiteralStringEvaluationImpl.hpp"
#include "fUML/impl/LiteralUnlimitedNaturalEvaluationImpl.hpp"
#include "fUML/impl/LocusImpl.hpp"
#include "fUML/impl/LoopNodeActivationImpl.hpp"
#include "fUML/impl/MergeNodeActivationImpl.hpp"
#include "fUML/impl/ObjectImpl.hpp"
#include "fUML/impl/ObjectActivationImpl.hpp"
#include "fUML/impl/ObjectNodeActivationImpl.hpp"
#include "fUML/impl/ObjectTokenImpl.hpp"
#include "fUML/impl/OfferImpl.hpp"
#include "fUML/impl/OpaqueBehaviorExecutionImpl.hpp"
#include "fUML/impl/OutputPinActivationImpl.hpp"
#include "fUML/impl/ParameterValueImpl.hpp"
#include "fUML/impl/PinActivationImpl.hpp"
#include "fUML/impl/PrimitiveValueImpl.hpp"
#include "fUML/impl/ReadExtentActionActivationImpl.hpp"
#include "fUML/impl/ReadIsClassifiedObjectActionActivationImpl.hpp"
#include "fUML/impl/ReadLinkActionActivationImpl.hpp"
#include "fUML/impl/ReadSelfActionActivationImpl.hpp"
#include "fUML/impl/ReadStructuralFeatureActionActivationImpl.hpp"
#include "fUML/impl/RealValueImpl.hpp"
#include "fUML/impl/ReclassifyObjectActionActivationImpl.hpp"
#include "fUML/impl/RedefinitionBasedDispatchStrategyImpl.hpp"
#include "fUML/impl/ReduceActionActivationImpl.hpp"
#include "fUML/impl/ReferenceImpl.hpp"
#include "fUML/impl/RemoveStructuralFeatureValueActivationImpl.hpp"
#include "fUML/impl/SemanticStrategyImpl.hpp"
#include "fUML/impl/SemanticVisitorImpl.hpp"
#include "fUML/impl/SendSignalActionActivationImpl.hpp"
#include "fUML/impl/SignalInstanceImpl.hpp"
#include "fUML/impl/StartClassifierBehaviorActionActivationImpl.hpp"
#include "fUML/impl/StartObjectBehaviorActionActivationImpl.hpp"
#include "fUML/impl/StringValueImpl.hpp"
#include "fUML/impl/StructuralFeatureActionActivationImpl.hpp"
#include "fUML/impl/StructuredActivityNodeActivationImpl.hpp"
#include "fUML/impl/StructuredValueImpl.hpp"
#include "fUML/impl/TestIdentityActionActivationImpl.hpp"
#include "fUML/impl/TokenImpl.hpp"
#include "fUML/impl/TokenSetImpl.hpp"
#include "fUML/impl/UnlimitedNaturalValueImpl.hpp"
#include "fUML/impl/ValueImpl.hpp"
#include "fUML/impl/ValueSpecificActionActivationImpl.hpp"
#include "fUML/impl/ValuesImpl.hpp"
#include "fUML/impl/WriteLinkActionActivationImpl.hpp"
#include "fUML/impl/WriteStructuralFeatureActionActivationImpl.hpp"

#include "fUML/FUMLFactory.hpp"

namespace fUML 
{
	class FUMLFactoryImpl : virtual public ecore::EFactoryImpl , virtual public FUMLFactory 
	{
		private:    
			FUMLFactoryImpl(FUMLFactoryImpl const&) = delete;
			FUMLFactoryImpl& operator=(FUMLFactoryImpl const&) = delete;

		protected:
			friend class FUMLFactory;
			// Constructor
			FUMLFactoryImpl();

		public:
			virtual ~FUMLFactoryImpl();
			virtual std::shared_ptr<ecore::EObject> create(std::string _className,  std::shared_ptr<ecore::EObject> container, const unsigned int referenceID = -1) const;
			virtual std::shared_ptr<ecore::EObject> create(const unsigned int classID,  std::shared_ptr<ecore::EObject> container = nullptr, const unsigned int referenceID = -1) const;
			virtual std::shared_ptr<ecore::EObject> create(std::shared_ptr<ecore::EClass> _class) const;
			virtual std::shared_ptr<ecore::EObject> create(std::shared_ptr<ecore::EClass> _class, std::shared_ptr<EObject> _container) const;
			virtual std::shared_ptr<ecore::EObject> create(std::string _className) const;

			//Creator functions
			virtual std::shared_ptr<AcceptEventActionActivation> createAcceptEventActionActivation() const ;
			
			virtual std::shared_ptr<AcceptEventActionEventAccepter> createAcceptEventActionEventAccepter() const ;
			
			virtual std::shared_ptr<ActivityEdgeInstance> createActivityEdgeInstance() const ;
			
			virtual std::shared_ptr<ActivityExecution> createActivityExecution() const ;
			
			virtual std::shared_ptr<ActivityFinalNodeActivation> createActivityFinalNodeActivation() const ;
			
			virtual std::shared_ptr<ActivityNodeActivationGroup> createActivityNodeActivationGroup() const ;
			
			virtual std::shared_ptr<ActivityParameterNodeActivation> createActivityParameterNodeActivation() const ;
			
			virtual std::shared_ptr<AddStructuralFeatureValueActionActivation> createAddStructuralFeatureValueActionActivation() const ;
			
			virtual std::shared_ptr<BooleanValue> createBooleanValue() const ;
			
			virtual std::shared_ptr<CallBehaviorActionActivation> createCallBehaviorActionActivation() const ;
			
			virtual std::shared_ptr<CallOperationActionActivation> createCallOperationActionActivation() const ;
			
			virtual std::shared_ptr<CentralBufferNodeActivation> createCentralBufferNodeActivation() const ;
			
			virtual std::shared_ptr<ClassifierBehaviorExecution> createClassifierBehaviorExecution() const ;
			
			virtual std::shared_ptr<ClassifierBehaviorExecutionActivity> createClassifierBehaviorExecutionActivity() const ;
			
			virtual std::shared_ptr<ClassifierBehaviorExecutionActivity_OwnedBehaviorActivity1> createClassifierBehaviorExecutionActivity_OwnedBehaviorActivity1() const ;
			
			virtual std::shared_ptr<ClauseActivation> createClauseActivation() const ;
			
			virtual std::shared_ptr<ClearAssociationActionActivation> createClearAssociationActionActivation() const ;
			
			virtual std::shared_ptr<ClearStructuralFeatureActionActivation> createClearStructuralFeatureActionActivation() const ;
			
			virtual std::shared_ptr<ConditionalNodeActivation> createConditionalNodeActivation() const ;
			
			virtual std::shared_ptr<ControlToken> createControlToken() const ;
			
			virtual std::shared_ptr<CreateLinkActionActivation> createCreateLinkActionActivation() const ;
			
			virtual std::shared_ptr<CreateObjectActionActivation> createCreateObjectActionActivation() const ;
			
			virtual std::shared_ptr<DataStoreNodeActivation> createDataStoreNodeActivation() const ;
			
			virtual std::shared_ptr<DataValue> createDataValue() const ;
			
			virtual std::shared_ptr<DecisionNodeActivation> createDecisionNodeActivation() const ;
			
			virtual std::shared_ptr<DestroyLinkActionActivation> createDestroyLinkActionActivation() const ;
			
			virtual std::shared_ptr<DestroyObjectActionActivation> createDestroyObjectActionActivation() const ;
			
			virtual std::shared_ptr<DispatchStrategy> createDispatchStrategy() const ;
			
			virtual std::shared_ptr<EnumerationValue> createEnumerationValue() const ;
			
			virtual std::shared_ptr<EventDispatchLoop> createEventDispatchLoop() const ;
			
			virtual std::shared_ptr<ExecutionFactoryL1> createExecutionFactoryL1() const ;
			//Add containing object
			virtual std::shared_ptr<ExecutionFactoryL1> createExecutionFactoryL1_in_Locus(std::weak_ptr<fUML::Locus > par_locus) const ;
			
			
			virtual std::shared_ptr<ExecutionFactoryL2> createExecutionFactoryL2() const ;
			//Add containing object
			virtual std::shared_ptr<ExecutionFactoryL2> createExecutionFactoryL2_in_Locus(std::weak_ptr<fUML::Locus > par_locus) const ;
			
			
			virtual std::shared_ptr<ExecutionFactoryL3> createExecutionFactoryL3() const ;
			//Add containing object
			virtual std::shared_ptr<ExecutionFactoryL3> createExecutionFactoryL3_in_Locus(std::weak_ptr<fUML::Locus > par_locus) const ;
			
			
			virtual std::shared_ptr<Executor> createExecutor() const ;
			
			virtual std::shared_ptr<ExpansionActivationGroup> createExpansionActivationGroup() const ;
			
			virtual std::shared_ptr<ExpansionNodeActivation> createExpansionNodeActivation() const ;
			
			virtual std::shared_ptr<ExpansionRegionActivation> createExpansionRegionActivation() const ;
			
			virtual std::shared_ptr<ExtensionalValueList> createExtensionalValueList() const ;
			
			virtual std::shared_ptr<FIFOGetNextEventStrategy> createFIFOGetNextEventStrategy() const ;
			
			virtual std::shared_ptr<FeatureValue> createFeatureValue() const ;
			
			virtual std::shared_ptr<FirstChoiceStrategy> createFirstChoiceStrategy() const ;
			
			virtual std::shared_ptr<FlowFinalNodeActivation> createFlowFinalNodeActivation() const ;
			
			virtual std::shared_ptr<ForkNodeActivation> createForkNodeActivation() const ;
			
			virtual std::shared_ptr<ForkedToken> createForkedToken() const ;
			
			virtual std::shared_ptr<InitialNodeActivation> createInitialNodeActivation() const ;
			
			virtual std::shared_ptr<InputPinActivation> createInputPinActivation() const ;
			
			virtual std::shared_ptr<InstanceValueEvaluation> createInstanceValueEvaluation() const ;
			
			virtual std::shared_ptr<IntegerValue> createIntegerValue() const ;
			
			virtual std::shared_ptr<JoinNodeActivation> createJoinNodeActivation() const ;
			
			virtual std::shared_ptr<Link> createLink() const ;
			
			virtual std::shared_ptr<LiteralBooleanEvaluation> createLiteralBooleanEvaluation() const ;
			
			virtual std::shared_ptr<LiteralIntegerEvaluation> createLiteralIntegerEvaluation() const ;
			
			virtual std::shared_ptr<LiteralNullEvaluation> createLiteralNullEvaluation() const ;
			
			virtual std::shared_ptr<LiteralRealEvaluation> createLiteralRealEvaluation() const ;
			
			virtual std::shared_ptr<LiteralStringEvaluation> createLiteralStringEvaluation() const ;
			
			virtual std::shared_ptr<LiteralUnlimitedNaturalEvaluation> createLiteralUnlimitedNaturalEvaluation() const ;
			
			virtual std::shared_ptr<Locus> createLocus() const ;
			
			virtual std::shared_ptr<LoopNodeActivation> createLoopNodeActivation() const ;
			
			virtual std::shared_ptr<MergeNodeActivation> createMergeNodeActivation() const ;
			
			virtual std::shared_ptr<Object> createObject() const ;
			
			virtual std::shared_ptr<ObjectActivation> createObjectActivation() const ;
			
			virtual std::shared_ptr<ObjectToken> createObjectToken() const ;
			
			virtual std::shared_ptr<Offer> createOffer() const ;
			
			virtual std::shared_ptr<OutputPinActivation> createOutputPinActivation() const ;
			
			virtual std::shared_ptr<ParameterValue> createParameterValue() const ;
			
			virtual std::shared_ptr<ReadExtentActionActivation> createReadExtentActionActivation() const ;
			
			virtual std::shared_ptr<ReadIsClassifiedObjectActionActivation> createReadIsClassifiedObjectActionActivation() const ;
			
			virtual std::shared_ptr<ReadLinkActionActivation> createReadLinkActionActivation() const ;
			
			virtual std::shared_ptr<ReadSelfActionActivation> createReadSelfActionActivation() const ;
			
			virtual std::shared_ptr<ReadStructuralFeatureActionActivation> createReadStructuralFeatureActionActivation() const ;
			
			virtual std::shared_ptr<RealValue> createRealValue() const ;
			
			virtual std::shared_ptr<ReclassifyObjectActionActivation> createReclassifyObjectActionActivation() const ;
			
			virtual std::shared_ptr<RedefinitionBasedDispatchStrategy> createRedefinitionBasedDispatchStrategy() const ;
			
			virtual std::shared_ptr<ReduceActionActivation> createReduceActionActivation() const ;
			
			virtual std::shared_ptr<Reference> createReference() const ;
			
			virtual std::shared_ptr<RemoveStructuralFeatureValueActivation> createRemoveStructuralFeatureValueActivation() const ;
			
			virtual std::shared_ptr<SendSignalActionActivation> createSendSignalActionActivation() const ;
			
			virtual std::shared_ptr<SignalInstance> createSignalInstance() const ;
			
			virtual std::shared_ptr<StartClassifierBehaviorActionActivation> createStartClassifierBehaviorActionActivation() const ;
			
			virtual std::shared_ptr<StartObjectBehaviorActionActivation> createStartObjectBehaviorActionActivation() const ;
			
			virtual std::shared_ptr<StringValue> createStringValue() const ;
			
			virtual std::shared_ptr<StructuredActivityNodeActivation> createStructuredActivityNodeActivation() const ;
			
			virtual std::shared_ptr<TestIdentityActionActivation> createTestIdentityActionActivation() const ;
			
			virtual std::shared_ptr<TokenSet> createTokenSet() const ;
			
			virtual std::shared_ptr<UnlimitedNaturalValue> createUnlimitedNaturalValue() const ;
			
			virtual std::shared_ptr<ValueSpecificActionActivation> createValueSpecificActionActivation() const ;
			
			virtual std::shared_ptr<Values> createValues() const ;
			
			

			//Package
			virtual std::shared_ptr<FUMLPackage> getFUMLPackage() const;

		private:
			static FUMLFactory* create();
            std::map<std::string,unsigned int> m_idMap;
			virtual void init() {}

	};
}
#endif /* end of include guard: FUMLFACTORYIMPL_HPP */

