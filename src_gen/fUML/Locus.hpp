//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_LOCUS_HPP
#define FUML_LOCUS_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

#include <string>
#include <map>
#include <vector>
#include "boost/any.hpp"

//*********************************
// generated Includes

//Forward Declaration for used types
namespace uml 
{
	class Class;
}

namespace uml 
{
	class Classifier;
}

namespace fUML 
{
	class ExecutionFactory;
}

namespace fUML 
{
	class Executor;
}

namespace fUML 
{
	class ExtensionalValue;
}

namespace fUML 
{
	class Object;
}

// base class includes

// enum includes

#include "EObject.hpp"

//*********************************
namespace fUML 
{
	/*!
	 */
	class Locus : virtual public ecore::EObject 
	{
		public:
 			Locus(const Locus &) {}
			Locus& operator=(Locus const&) = delete;
	
		protected:
			Locus(){}

		public:
			virtual ecore::EObject* copy() const = 0;

			//destructor
			virtual ~Locus() {}

			//*********************************
			// Operations
			//*********************************
			/*!
			 */ 
			virtual bool conforms(uml::Classifier *  type,uml::Classifier *  classifier)  = 0;
			
			/*!
			 */ 
			virtual void assignExecutor(fUML::Executor *  executor)  = 0;
			
			/*!
			 */ 
			virtual void assignFactory(fUML::ExecutionFactory *  factory)  = 0;
			
			/*!
			 */ 
			virtual std::vector<fUML::ExtensionalValue * > *  retrieveExtent(uml::Classifier *  classifier)  = 0;
			
			/*!
			 */ 
			virtual void add(fUML::ExtensionalValue *  value)  = 0;
			
			/*!
			 */ 
			virtual void remove(fUML::ExtensionalValue *  value)  = 0;
			
			/*!
			 */ 
			virtual fUML::Object *  instantiate(uml::Class *  type)  = 0;
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			//*********************************
			// Reference
			//*********************************
			/*!
			 */
			virtual fUML::Executor *  getExecutor() const = 0;
			
			/*!
			 */
			virtual void setExecutor(fUML::Executor *  _executor) = 0;
			
			/*!
			 */
			virtual fUML::ExecutionFactory *  getFactory() const = 0;
			
			/*!
			 */
			virtual void setFactory(fUML::ExecutionFactory *  _factory) = 0;
			
			/*!
			 */
			virtual std::vector<fUML::ExtensionalValue * > *  getExtensionalValues() const = 0;
			
			

		protected:
			//*********************************
			// Attribute Members
			//*********************************
			
			
			//*********************************
			// Reference Members
			//*********************************
			/*!
			 */
			fUML::Executor *  m_executor =  nullptr ;
			/*!
			 */
			fUML::ExecutionFactory *  m_factory =  nullptr ;
			/*!
			 */
			std::vector<fUML::ExtensionalValue * > *  m_extensionalValues =  nullptr ;
			

		public:
			//*********************************
			// Union Getter
			//*********************************
			 
	};

}
#endif /* end of include guard: FUML_LOCUS_HPP */

