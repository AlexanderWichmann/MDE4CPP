//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_ACTIONACTIVATION_HPP
#define FUML_ACTIONACTIVATION_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

#include <string>
#include <map>
#include <vector>
#include "boost/any.hpp"

//*********************************
// generated Includes

//Forward Declaration for used types
namespace fUML 
{
	class ActivityEdgeInstance;
}

namespace uml 
{
	class ActivityNode;
}

namespace fUML 
{
	class ActivityNodeActivation;
}

namespace fUML 
{
	class ActivityNodeActivationGroup;
}

namespace fUML 
{
	class BooleanValue;
}

namespace uml 
{
	class InputPin;
}

namespace fUML 
{
	class Link;
}

namespace uml 
{
	class OutputPin;
}

namespace uml 
{
	class Pin;
}

namespace fUML 
{
	class PinActivation;
}

namespace fUML 
{
	class Token;
}

namespace fUML 
{
	class Value;
}

// base class includes
#include "ActivityNodeActivation.hpp"

// enum includes


//*********************************
namespace fUML 
{
	/*!
	 */
	class ActionActivation:virtual public ActivityNodeActivation	{
		public:
 			ActionActivation(const ActionActivation &) {}
			ActionActivation& operator=(ActionActivation const&) = delete;
	
		protected:
			ActionActivation(){}

		public:
			virtual ecore::EObject* copy() const = 0;

			//destructor
			virtual ~ActionActivation() {}

			//*********************************
			// Operations
			//*********************************
			/*!
			 */ 
			virtual bool isFirng()  = 0;
			
			/*!
			 */ 
			virtual void doAction()  = 0;
			
			/*!
			 */ 
			virtual void sendOffers()  = 0;
			
			/*!
			 */ 
			virtual void addPinActivation(fUML::PinActivation *  pinActivation)  = 0;
			
			/*!
			 */ 
			virtual fUML::PinActivation *  retrievePinActivation(uml::Pin *  pin)  = 0;
			
			/*!
			 */ 
			virtual void putToken(uml::OutputPin *  pin,fUML::Value *  value)  = 0;
			
			/*!
			 */ 
			virtual void putTokens(uml::OutputPin *  pin,std::vector<fUML::Value * > *  values)  = 0;
			
			/*!
			 */ 
			virtual std::vector<fUML::Value * > *  getTokens(uml::InputPin *  pin)  = 0;
			
			/*!
			 */ 
			virtual std::vector<fUML::Value * > *  takeTokens(uml::InputPin *  pin)  = 0;
			
			/*!
			 */ 
			virtual bool valueParticipatesInLink(fUML::Value *  value,fUML::Link *  link)  = 0;
			
			/*!
			 */ 
			virtual fUML::BooleanValue *  makeBooleanValue(bool value)  = 0;
			
			/*!
			 */ 
			virtual void run()  = 0;
			
			/*!
			 */ 
			virtual std::vector<fUML::Token * > *  takeOfferedTokens()  = 0;
			
			/*!
			 */ 
			virtual void fire(std::vector<fUML::Token * > *  incomingTokens)  = 0;
			
			/*!
			 */ 
			virtual void terminate()  = 0;
			
			/*!
			 */ 
			virtual bool isReady()  = 0;
			
			/*!
			 */ 
			virtual std::vector<fUML::Token * > *  completeAction()  = 0;
			
			/*!
			 */ 
			virtual void createNodeActivations()  = 0;
			
			/*!
			 */ 
			virtual void addOutgoingEdge(fUML::ActivityEdgeInstance *  edge)  = 0;
			
			/*!
			 */ 
			virtual bool isSourceFor(fUML::ActivityEdgeInstance *  edgeInstance)  = 0;
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			/*!
			 */ 
			virtual bool isFiring() const = 0;
			
			/*!
			 */ 
			virtual void setFiring (bool _firing)= 0; 
			
			
			//*********************************
			// Reference
			//*********************************
			/*!
			 */
			virtual std::vector<fUML::PinActivation * > *  getPinActivation() const = 0;
			
			

		protected:
			//*********************************
			// Attribute Members
			//*********************************
			/*!
			 */ 
			bool m_firing =  false;
			
			
			//*********************************
			// Reference Members
			//*********************************
			/*!
			 */
			std::vector<fUML::PinActivation * > *  m_pinActivation =  nullptr ;
			

		public:
			//*********************************
			// Union Getter
			//*********************************
			 
	};

}
#endif /* end of include guard: FUML_ACTIONACTIVATION_HPP */

