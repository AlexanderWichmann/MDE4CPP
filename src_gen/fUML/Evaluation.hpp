//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_EVALUATION_HPP
#define FUML_EVALUATION_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

#include <string>
#include <map>
#include <vector>
#include "boost/any.hpp"

//*********************************
// generated Includes

//Forward Declaration for used types
namespace fUML 
{
	class Locus;
}

namespace fUML 
{
	class SemanticVisitor;
}

namespace fUML 
{
	class Value;
}

namespace uml 
{
	class ValueSpecification;
}

// base class includes
#include "SemanticVisitor.hpp"

// enum includes


//*********************************
namespace fUML 
{
	/*!
	 */
	class Evaluation:virtual public SemanticVisitor	{
		public:
 			Evaluation(const Evaluation &) {}
			Evaluation& operator=(Evaluation const&) = delete;
	
		protected:
			Evaluation(){}

		public:
			virtual ecore::EObject* copy() const = 0;

			//destructor
			virtual ~Evaluation() {}

			//*********************************
			// Operations
			//*********************************
			/*!
			 */ 
			virtual fUML::Value *  evaluate()  = 0;
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			//*********************************
			// Reference
			//*********************************
			/*!
			 */
			virtual uml::ValueSpecification *  getSpecification() const = 0;
			
			/*!
			 */
			virtual void setSpecification(uml::ValueSpecification *  _specification) = 0;
			
			/*!
			 */
			virtual fUML::Locus *  getLocus() const = 0;
			
			/*!
			 */
			virtual void setLocus(fUML::Locus *  _locus) = 0;
			
			

		protected:
			//*********************************
			// Attribute Members
			//*********************************
			
			
			//*********************************
			// Reference Members
			//*********************************
			/*!
			 */
			uml::ValueSpecification *  m_specification =  nullptr ;
			/*!
			 */
			fUML::Locus *  m_locus =  nullptr ;
			

		public:
			//*********************************
			// Union Getter
			//*********************************
			 
	};

}
#endif /* end of include guard: FUML_EVALUATION_HPP */

