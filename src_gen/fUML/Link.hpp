//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_LINK_HPP
#define FUML_LINK_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

#include <string>
#include <map>
#include <vector>
#include "boost/any.hpp"

//*********************************
// generated Includes

//Forward Declaration for used types
namespace uml 
{
	class Association;
}

namespace uml 
{
	class Classifier;
}

namespace fUML 
{
	class ExtensionalValue;
}

namespace fUML 
{
	class FeatureValue;
}

namespace fUML 
{
	class Locus;
}

namespace uml 
{
	class Property;
}

// base class includes
#include "ExtensionalValue.hpp"

// enum includes


//*********************************
namespace fUML 
{
	/*!
	 */
	class Link:virtual public ExtensionalValue	{
		public:
 			Link(const Link &) {}
			Link& operator=(Link const&) = delete;
	
		protected:
			Link(){}

		public:
			virtual ecore::EObject* copy() const = 0;

			//destructor
			virtual ~Link() {}

			//*********************************
			// Operations
			//*********************************
			/*!
			 */ 
			virtual std::vector<uml::Classifier * > *  getTypes()  = 0;
			
			/*!
			 */ 
			virtual bool isMatchingLink(fUML::ExtensionalValue *  link,uml::Property *  end)  = 0;
			
			/*!
			 */ 
			virtual void addTo(fUML::Locus *  locus)  = 0;
			
			/*!
			 */ 
			virtual std::vector<fUML::FeatureValue * > *  getOtherFeatureValues(std::vector<fUML::ExtensionalValue * > *  extent,uml::Property *  end)  = 0;
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			//*********************************
			// Reference
			//*********************************
			/*!
			 */
			virtual uml::Association *  getType() const = 0;
			
			/*!
			 */
			virtual void setType(uml::Association *  _type) = 0;
			
			

		protected:
			//*********************************
			// Attribute Members
			//*********************************
			
			
			//*********************************
			// Reference Members
			//*********************************
			/*!
			 */
			uml::Association *  m_type =  nullptr ;
			

		public:
			//*********************************
			// Union Getter
			//*********************************
			 
	};

}
#endif /* end of include guard: FUML_LINK_HPP */

