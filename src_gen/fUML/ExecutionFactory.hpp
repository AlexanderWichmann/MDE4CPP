//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_EXECUTIONFACTORY_HPP
#define FUML_EXECUTIONFACTORY_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

#include <string>
#include <map>
#include <vector>
#include "boost/any.hpp"

//*********************************
// generated Includes

//Forward Declaration for used types
namespace uml 
{
	class Behavior;
}

namespace uml 
{
	class Element;
}

namespace fUML 
{
	class Evaluation;
}

namespace fUML 
{
	class Execution;
}

namespace fUML 
{
	class Locus;
}

namespace fUML 
{
	class Object;
}

namespace uml 
{
	class OpaqueBehavior;
}

namespace fUML 
{
	class OpaqueBehaviorExecution;
}

namespace uml 
{
	class PrimitiveType;
}

namespace fUML 
{
	class SemanticStrategy;
}

namespace fUML 
{
	class SemanticVisitor;
}

namespace uml 
{
	class ValueSpecification;
}

// base class includes

// enum includes

#include "EObject.hpp"

//*********************************
namespace fUML 
{
	/*!
	 */
	class ExecutionFactory : virtual public ecore::EObject 
	{
		public:
 			ExecutionFactory(const ExecutionFactory &) {}
			ExecutionFactory& operator=(ExecutionFactory const&) = delete;
	
		protected:
			ExecutionFactory(){}

		public:
			virtual ecore::EObject* copy() const = 0;

			//destructor
			virtual ~ExecutionFactory() {}

			//*********************************
			// Operations
			//*********************************
			/*!
			 */ 
			virtual fUML::Execution *  createExecution(uml::Behavior *  behavior,fUML::Object *  context)  = 0;
			
			/*!
			 */ 
			virtual fUML::Evaluation *  createEvaluation(uml::ValueSpecification *  specification)  = 0;
			
			/*!
			 */ 
			virtual fUML::SemanticVisitor *  instantiateVisitor(uml::Element *  element)  = 0;
			
			/*!
			 */ 
			virtual fUML::OpaqueBehaviorExecution *  instantiateOpaqueBehaviorExecution(uml::OpaqueBehavior *  behavior)  = 0;
			
			/*!
			 */ 
			virtual void addPrimitiveBehaviorPrototype(fUML::OpaqueBehaviorExecution *  execution)  = 0;
			
			/*!
			 */ 
			virtual void addBuiltInType(uml::PrimitiveType *  type)  = 0;
			
			/*!
			 */ 
			virtual uml::PrimitiveType *  getBuiltInType(std::string name)  = 0;
			
			/*!
			 */ 
			virtual void assignStrategy(fUML::SemanticStrategy *  strategy)  = 0;
			
			/*!
			 */ 
			virtual fUML::SemanticStrategy *  getStrategy(std::string name)  = 0;
			
			/*!
			 */ 
			virtual int getStrategyIndex(std::string name)  = 0;
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			//*********************************
			// Reference
			//*********************************
			/*!
			 */
			virtual fUML::Locus *  getLocus() const = 0;
			
			/*!
			 */
			virtual void setLocus(fUML::Locus *  _locus) = 0;
			
			/*!
			 */
			virtual std::vector<fUML::SemanticStrategy * > *  getStrategies() const = 0;
			
			/*!
			 */
			virtual std::vector<fUML::OpaqueBehaviorExecution * > *  getPrimitiveBehaviorPrototypes() const = 0;
			
			/*!
			 */
			virtual std::vector<uml::PrimitiveType * > *  getBuiltInTypes() const = 0;
			
			

		protected:
			//*********************************
			// Attribute Members
			//*********************************
			
			
			//*********************************
			// Reference Members
			//*********************************
			/*!
			 */
			fUML::Locus *  m_locus =  nullptr ;
			/*!
			 */
			std::vector<fUML::SemanticStrategy * > *  m_strategies =  nullptr ;
			/*!
			 */
			std::vector<fUML::OpaqueBehaviorExecution * > *  m_primitiveBehaviorPrototypes =  nullptr ;
			/*!
			 */
			std::vector<uml::PrimitiveType * > *  m_builtInTypes =  nullptr ;
			

		public:
			//*********************************
			// Union Getter
			//*********************************
			 
	};

}
#endif /* end of include guard: FUML_EXECUTIONFACTORY_HPP */

