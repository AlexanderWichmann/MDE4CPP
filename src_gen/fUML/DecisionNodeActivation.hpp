//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef FUML_DECISIONNODEACTIVATION_HPP
#define FUML_DECISIONNODEACTIVATION_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

#include <string>
#include <map>
#include <vector>
#include "boost/any.hpp"

//*********************************
// generated Includes

//Forward Declaration for used types
namespace fUML 
{
	class ActivityEdgeInstance;
}

namespace uml 
{
	class ActivityNode;
}

namespace fUML 
{
	class ActivityNodeActivationGroup;
}

namespace fUML 
{
	class ControlNodeActivation;
}

namespace fUML 
{
	class Execution;
}

namespace fUML 
{
	class Token;
}

namespace fUML 
{
	class Value;
}

namespace uml 
{
	class ValueSpecification;
}

// base class includes
#include "ControlNodeActivation.hpp"

// enum includes


//*********************************
namespace fUML 
{
	/*!
	 */
	class DecisionNodeActivation:virtual public ControlNodeActivation	{
		public:
 			DecisionNodeActivation(const DecisionNodeActivation &) {}
			DecisionNodeActivation& operator=(DecisionNodeActivation const&) = delete;
	
		protected:
			DecisionNodeActivation(){}

		public:
			virtual ecore::EObject* copy() const = 0;

			//destructor
			virtual ~DecisionNodeActivation() {}

			//*********************************
			// Operations
			//*********************************
			/*!
			 */ 
			virtual std::vector<fUML::Value * > *  getDecisionValues(std::vector<fUML::Token * > *  incomingTokens)  = 0;
			
			/*!
			 */ 
			virtual fUML::Value *  executeDecisionInputBehavior(fUML::Value *  inputValue,fUML::Value *  decisionInputValue)  = 0;
			
			/*!
			 */ 
			virtual fUML::Value *  getDecisionInputFlowValue()  = 0;
			
			/*!
			 */ 
			virtual fUML::ActivityEdgeInstance *  getDecisionInputFlowInstance()  = 0;
			
			/*!
			 */ 
			virtual bool test(uml::ValueSpecification *  gaurd,fUML::Value *  value)  = 0;
			
			/*!
			 */ 
			virtual std::vector<fUML::Token * > *  removeJoinedControlTokens(std::vector<fUML::Token * > *  incomingTokens)  = 0;
			
			/*!
			 */ 
			virtual bool hasObjectFlowInput()  = 0;
			
			/*!
			 */ 
			virtual std::vector<fUML::Token * > *  takeOfferedTokens()  = 0;
			
			/*!
			 */ 
			virtual void fire(std::vector<fUML::Token * > *  incomingTokens)  = 0;
			
			/*!
			 */ 
			virtual void terminate()  = 0;
			
			/*!
			 */ 
			virtual bool isReady()  = 0;
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			//*********************************
			// Reference
			//*********************************
			/*!
			 */
			virtual fUML::Execution *  getDecisionInputExecution() const = 0;
			
			/*!
			 */
			virtual void setDecisionInputExecution(fUML::Execution *  _decisionInputExecution) = 0;
			
			

		protected:
			//*********************************
			// Attribute Members
			//*********************************
			
			
			//*********************************
			// Reference Members
			//*********************************
			/*!
			 */
			fUML::Execution *  m_decisionInputExecution =  nullptr ;
			

		public:
			//*********************************
			// Union Getter
			//*********************************
			 
	};

}
#endif /* end of include guard: FUML_DECISIONNODEACTIVATION_HPP */

