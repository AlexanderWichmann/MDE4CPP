//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef ECORE_EFACTORYEFACTORYIMPL_HPP
#define ECORE_EFACTORYEFACTORYIMPL_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

//*********************************
// generated Includes

//Model includes
#include "../EFactory.hpp"

#include "impl/EModelElementImpl.hpp"


//*********************************
namespace ecore 
{
	class EFactoryImpl :virtual public EModelElementImpl, virtual public EFactory
	{
		public: 
			EFactoryImpl(const EFactoryImpl & obj);
			virtual ecore::EObject *  copy() const;

		private:    
			EFactoryImpl& operator=(EFactoryImpl const&) = delete;

		protected:
			friend class EcoreFactoryImpl;
			EFactoryImpl();

		public:
			//destructor
			virtual ~EFactoryImpl();
			
			//*********************************
			// Operations
			//*********************************
			/*!
			 */ 
			virtual ecore::EObject *  create(ecore::EClass *  eClass)  const  ;
			
			/*!
			 */ 
			virtual boost::any createFromString(ecore::EDataType *  eDataType,std::string literalValue)  const  ;
			
			/*!
			 */ 
			virtual std::string convertToString(ecore::EDataType *  eDataType,boost::any instanceValue)  const  ;
			
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			
			//*********************************
			// Reference
			//*********************************
			/*!
			 */
			virtual ecore::EPackage *  getEPackage() const ;
			
			/*!
			 */
			virtual void setEPackage(ecore::EPackage *  _ePackage) ;
			
							
			
			//*********************************
			// Union Getter
			//*********************************
			 
			 
			//*********************************
			// Structural Feature Getter/Setter
			//*********************************
			
			virtual boost::any eGet(int featureID, bool resolve, bool coreType) const ;
			
		protected:
			virtual EClass* eStaticClass() const;
	};
}
#endif /* end of include guard: ECORE_EFACTORYEFACTORYIMPL_HPP */

