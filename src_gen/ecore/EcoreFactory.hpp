//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef ECOREFACTORY_HPP
#define ECOREFACTORY_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

#include "EFactory.hpp"

namespace ecore 
{	class EAnnotation;
	class EAttribute;
	class EClass;
	class EClassifier;
	class EDataType;
	class EEnum;
	class EEnumLiteral;
	class EFactory;
	class EGenericType;
	class EModelElement;
	class ENamedElement;
	class EObject;
	class EOperation;
	class EPackage;
	class EParameter;
	class EReference;
	class EStringToStringMapEntry;
	class EStructuralFeature;
	class ETypeParameter;
	class ETypedElement;
	class EcorePackage;
	class EcoreFactory;
}

namespace ecore 
{
	class EcoreFactory : virtual public EFactory 
	{
		private:    
			EcoreFactory(EcoreFactory const&) = delete;
			EcoreFactory& operator=(EcoreFactory const&) = delete;
		protected:
			EcoreFactory(){}
		
			//Singleton Instance and Getter
		private:
			static std::shared_ptr<EcoreFactory> instance;
		public:
			static std::shared_ptr<EcoreFactory> eInstance();
		
			//Creator functions
			virtual EAttribute* createEAttribute() const = 0;
			virtual EAnnotation* createEAnnotation() const = 0;
			virtual EClass* createEClass() const = 0;
			virtual EDataType* createEDataType() const = 0;
			virtual EEnum* createEEnum() const = 0;
			virtual EEnumLiteral* createEEnumLiteral() const = 0;
			virtual EFactory* createEFactory() const = 0;
			virtual EObject* createEObject() const = 0;
			virtual EOperation* createEOperation() const = 0;
			virtual EPackage* createEPackage() const = 0;
			virtual EParameter* createEParameter() const = 0;
			virtual EReference* createEReference() const = 0;
			virtual EStringToStringMapEntry* createEStringToStringMapEntry() const = 0;
			virtual EGenericType* createEGenericType() const = 0;
			virtual ETypeParameter* createETypeParameter() const = 0;
			
			//Package
			virtual std::shared_ptr<EcorePackage> getEcorePackage() const = 0;
	};
}
#endif /* end of include guard: ECOREFACTORY_HPP */

