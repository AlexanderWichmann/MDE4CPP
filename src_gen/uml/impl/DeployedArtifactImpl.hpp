//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef UML_DEPLOYEDARTIFACTDEPLOYEDARTIFACTIMPL_HPP
#define UML_DEPLOYEDARTIFACTDEPLOYEDARTIFACTIMPL_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

#ifdef ACTIVITY_DEBUG_ON
    #define ACT_DEBUG(a) a
#else
    #define ACT_DEBUG(a) /**/
#endif

//*********************************
// generated Includes

//Model includes
#include "../DeployedArtifact.hpp"

#include "impl/NamedElementImpl.hpp"

#include "SubsetUnion.hpp"



//*********************************
namespace uml 
{
	class DeployedArtifactImpl :virtual public NamedElementImpl, virtual public DeployedArtifact 
	{
		public: 
			DeployedArtifactImpl(const DeployedArtifactImpl & obj);
			virtual std::shared_ptr<ecore::EObject> copy() const;

		private:    
			DeployedArtifactImpl& operator=(DeployedArtifactImpl const&) = delete;

		protected:
			friend class UmlFactoryImpl;
			DeployedArtifactImpl();

			//Additional constructors for the containments back reference
			DeployedArtifactImpl(std::weak_ptr<uml::Namespace > par_namespace);


			//Additional constructors for the containments back reference
			DeployedArtifactImpl(std::weak_ptr<uml::Element > par_owner);




		public:
			//destructor
			virtual ~DeployedArtifactImpl();
			
			//*********************************
			// Operations
			//*********************************
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			
			//*********************************
			// Reference
			//*********************************
							
			
			//*********************************
			// Union Getter
			//*********************************
			/*!
			 The Elements owned by this Element.
			<p>From package UML::CommonStructure.</p> */
			virtual std::shared_ptr<Union<uml::Element> > getOwnedElement() const ;/*!
			 The Element that owns this Element.
			<p>From package UML::CommonStructure.</p> */
			virtual std::weak_ptr<uml::Element > getOwner() const ; 
			 
			//*********************************
			// Structural Feature Getter/Setter
			//*********************************
			
			virtual boost::any eGet(int featureID, bool resolve, bool coreType) const ;
			
		protected:
			virtual std::shared_ptr<ecore::EClass> eStaticClass() const;
	};
}
#endif /* end of include guard: UML_DEPLOYEDARTIFACTDEPLOYEDARTIFACTIMPL_HPP */

