//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef UML_FACTORYFACTORYIMPL_HPP
#define UML_FACTORYFACTORYIMPL_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

#define ACTIVITY_DEBUG_ON

#ifdef ACTIVITY_DEBUG_ON
    #define ACT_DEBUG(a) a
#else
    #define ACT_DEBUG(a) /**/
#endif

//*********************************
// generated Includes

//Model includes
#include "../Factory.hpp"

#include "impl/ElementImpl.hpp"

#include "SubsetUnion.hpp"



//*********************************
namespace uml 
{
	class FactoryImpl :virtual public ElementImpl, virtual public Factory 
	{
		public: 
			FactoryImpl(const FactoryImpl & obj);
			virtual ecore::EObject *  copy() const;

		private:    
			FactoryImpl& operator=(FactoryImpl const&) = delete;

		protected:
			friend class UmlFactoryImpl;
			FactoryImpl();



		public:
			//destructor
			virtual ~FactoryImpl();
			
			//*********************************
			// Operations
			//*********************************
			/*!
			 Creates an element that is an instance of the metaClass. Object::metaClass == metaClass and metaClass.isInstance(object)
			== true.
			All properties of the element are considered unset. The values are the same as if object.unset(property) was invoked for
			every property. */ 
			virtual std::shared_ptr<uml::Element> create(std::shared_ptr<uml::Class>  metaClass)  ;
			
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			
			//*********************************
			// Reference
			//*********************************
							
			
			//*********************************
			// Union Getter
			//*********************************
			/*!
			 */
			virtual std::shared_ptr<Union<uml::Element> > getOwnedElement() const ; 
			 
			//*********************************
			// Structural Feature Getter/Setter
			//*********************************
			
			virtual boost::any eGet(int featureID, bool resolve, bool coreType) const ;
			
		protected:
			virtual std::shared_ptr<ecore::EClass> eStaticClass() const;
	};
}
#endif /* end of include guard: UML_FACTORYFACTORYIMPL_HPP */

