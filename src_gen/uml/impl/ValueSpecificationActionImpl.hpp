//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef UML_VALUESPECIFICATIONACTIONVALUESPECIFICATIONACTIONIMPL_HPP
#define UML_VALUESPECIFICATIONACTIONVALUESPECIFICATIONACTIONIMPL_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

//*********************************
// generated Includes

//Model includes
#include "../ValueSpecificationAction.hpp"

#include "impl/ActionImpl.hpp"


//*********************************
namespace uml 
{
	class ValueSpecificationActionImpl :virtual public ActionImpl, virtual public ValueSpecificationAction
	{
		public: 
			ValueSpecificationActionImpl(const ValueSpecificationActionImpl & obj);
			virtual ecore::EObject *  copy() const;

		private:    
			ValueSpecificationActionImpl& operator=(ValueSpecificationActionImpl const&) = delete;

		protected:
			friend class UmlFactoryImpl;
			ValueSpecificationActionImpl();

		public:
			//destructor
			virtual ~ValueSpecificationActionImpl();
			
			//*********************************
			// Operations
			//*********************************
			/*!
			 The multiplicity of the result OutputPin is 1..1
			result.is(1,1) */ 
			virtual bool multiplicity(boost::any diagnostics,std::map <   boost::any, boost::any > * context)  ;
			
			/*!
			 The type of the value ValueSpecification must conform to the type of the result OutputPin.
			value.type.conformsTo(result.type) */ 
			virtual bool compatible_type(boost::any diagnostics,std::map <   boost::any, boost::any > * context)  ;
			
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			
			//*********************************
			// Reference
			//*********************************
			/*!
			 The OutputPin on which the result value is placed.
			<p>From package UML::Actions.</p> */
			virtual uml::OutputPin *  getResult() const ;
			
			/*!
			 The OutputPin on which the result value is placed.
			<p>From package UML::Actions.</p> */
			virtual void setResult(uml::OutputPin *  _result) ;
			
			/*!
			 The ValueSpecification to be evaluated.
			<p>From package UML::Actions.</p> */
			virtual uml::ValueSpecification *  getValue() const ;
			
			/*!
			 The ValueSpecification to be evaluated.
			<p>From package UML::Actions.</p> */
			virtual void setValue(uml::ValueSpecification *  _value) ;
			
							
			
			//*********************************
			// Union Getter
			//*********************************
			/*!
			 ActivityGroups containing the ActivityNode.
			<p>From package UML::Activities.</p> */
			virtual std::vector<uml::ActivityGroup * > *  getInGroup() const ;/*!
			 The Elements owned by this Element.
			<p>From package UML::CommonStructure.</p> */
			virtual std::vector<uml::Element * > *  getOwnedElement() const ;/*!
			 The Element that owns this Element.
			<p>From package UML::CommonStructure.</p> */
			virtual uml::Element *  getOwner() const ;/*!
			 The RedefinableElement that is being redefined by this element.
			<p>From package UML::Classification.</p> */
			virtual std::vector<uml::RedefinableElement * > *  getRedefinedElement() const ;/*!
			 The ordered set of OutputPins representing outputs from the Action.
			<p>From package UML::Actions.</p> */
			virtual std::vector<uml::OutputPin * > *  getOutput() const ; 
			 
			//*********************************
			// Structural Feature Getter/Setter
			//*********************************
			
			virtual boost::any eGet(int featureID, bool resolve, bool coreType) const ;
			
		protected:
			virtual ecore::EClass* eStaticClass() const;
	};
}
#endif /* end of include guard: UML_VALUESPECIFICATIONACTIONVALUESPECIFICATIONACTIONIMPL_HPP */

