//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef UML_SLOTSLOTIMPL_HPP
#define UML_SLOTSLOTIMPL_HPP

#ifdef NDEBUG
    #define DEBUG_MESSAGE(a) /**/
#else
    #define DEBUG_MESSAGE(a) a
#endif

//*********************************
// generated Includes

//Model includes
#include "../Slot.hpp"

#include "impl/ElementImpl.hpp"


//*********************************
namespace uml 
{
	class SlotImpl :virtual public ElementImpl, virtual public Slot
	{
		public: 
			SlotImpl(const SlotImpl & obj);
			virtual ecore::EObject *  copy() const;

		private:    
			SlotImpl& operator=(SlotImpl const&) = delete;

		protected:
			friend class UmlFactoryImpl;
			SlotImpl();

		public:
			//destructor
			virtual ~SlotImpl();
			
			//*********************************
			// Operations
			//*********************************
			
			
			//*********************************
			// Attributes Getter Setter
			//*********************************
			
			
			//*********************************
			// Reference
			//*********************************
			/*!
			 The StructuralFeature that specifies the values that may be held by the Slot.
			<p>From package UML::Classification.</p> */
			virtual uml::StructuralFeature *  getDefiningFeature() const ;
			
			/*!
			 The StructuralFeature that specifies the values that may be held by the Slot.
			<p>From package UML::Classification.</p> */
			virtual void setDefiningFeature(uml::StructuralFeature *  _definingFeature) ;
			
			/*!
			 The value or values held by the Slot.
			<p>From package UML::Classification.</p> */
			virtual std::vector<uml::ValueSpecification * > *  getValue() const ;
			
			/*!
			 The InstanceSpecification that owns this Slot.
			<p>From package UML::Classification.</p> */
			virtual uml::InstanceSpecification *  getOwningInstance() const ;
			
			/*!
			 The InstanceSpecification that owns this Slot.
			<p>From package UML::Classification.</p> */
			virtual void setOwningInstance(uml::InstanceSpecification *  _owningInstance) ;
			
							
			
			//*********************************
			// Union Getter
			//*********************************
			/*!
			 The Elements owned by this Element.
			<p>From package UML::CommonStructure.</p> */
			virtual std::vector<uml::Element * > *  getOwnedElement() const ;/*!
			 The Element that owns this Element.
			<p>From package UML::CommonStructure.</p> */
			virtual uml::Element *  getOwner() const ; 
			 
			//*********************************
			// Structural Feature Getter/Setter
			//*********************************
			
			virtual boost::any eGet(int featureID, bool resolve, bool coreType) const ;
			
		protected:
			virtual ecore::EClass* eStaticClass() const;
	};
}
#endif /* end of include guard: UML_SLOTSLOTIMPL_HPP */

