/*-------------------------------------------------
*
* Tasks created by ecore4CPP Generator 
*
*-------------------------------------------------
*/

apply plugin: 'cpp'

description 'C++ project of model uml.ecore, generated by Ecore4CPP'

File appendDebugSuffix(File binaryFile) {
	int extensionSeparatorIndex = binaryFile.path.lastIndexOf('.')
	return new File(binaryFile.path.substring(0, extensionSeparatorIndex) + "d" + binaryFile.path.substring(extensionSeparatorIndex))
}

task deliverUml(dependsOn: ['deliverUmlHeaders','deliverUmlDebugSharedLibrary', 'deliverUmlReleaseSharedLibrary']) {
	description 'deliver uml header, debug and release libraries to application folder (%MDE4CPP_HOME%/application)'
}

task deliverUmlHeaders(type: Copy) {
	description 'deliver uml header to %MDE4CPP_HOME%/application/include/uml'
	from "."
	into System.getenv('MDE4CPP_HOME')+"/application/include/uml"
	include "**/*.hpp"
	exclude "build", ".gradle"
}

task deliverUmlDebugSharedLibrary(type: Copy) {
	description 'deliver uml debug libary to %MDE4CPP_HOME%/application/bin'
	from "build/libs/uml/shared/debug"
	into System.getenv('MDE4CPP_HOME')+"/application/bin"
	include "umld.dll"
}

task deliverUmlReleaseSharedLibrary(type: Copy) {
	description 'deliver uml release libary to %MDE4CPP_HOME%/application/bin'
	from "build/libs/uml/shared/release"
	into System.getenv('MDE4CPP_HOME')+"/application/bin"
	include "uml.dll"
}

model {
    toolChains {
    	 gcc(Gcc) {
    	 	"g++"
    	 }
    }
	
    buildTypes {
        debug 
        release
    }
	repositories {
        libs(PrebuiltLibraries) {
			[ "ecore","types", "PluginFramework" ].each {
				delegate."$it" {
					def libraryName = "${name}"
					headers.srcDir System.getenv('MDE4CPP_HOME')+"/application/include/${libraryName}"
					binaries.withType(SharedLibraryBinary) {
						if(buildType == buildTypes.debug) {
							sharedLibraryFile = file(System.getenv('MDE4CPP_HOME')+"/application/bin/${libraryName}d.dll")
						} else {
							sharedLibraryFile = file(System.getenv('MDE4CPP_HOME')+"/application/bin/${libraryName}.dll")						
						}
					}
				}	
			}         
		}
	}

    components {
        uml(NativeLibrarySpec)
        {
        	sources {
                cpp {
                    source {
                        srcDirs "."  , System.getenv('MDE4CPP_HOME')+"/application/include/util"
						include "impl/AbstractionImpl.cpp"
						include "impl/AcceptCallActionImpl.cpp"
						include "impl/AcceptEventActionImpl.cpp"
						include "impl/ActionImpl.cpp"
						include "impl/ActionExecutionSpecificationImpl.cpp"
						include "impl/ActionInputPinImpl.cpp"
						include "impl/ActivityImpl.cpp"
						include "impl/ActivityContentImpl.cpp"
						include "impl/ActivityEdgeImpl.cpp"
						include "impl/ActivityFinalNodeImpl.cpp"
						include "impl/ActivityGroupImpl.cpp"
						include "impl/ActivityNodeImpl.cpp"
						include "impl/ActivityParameterNodeImpl.cpp"
						include "impl/ActivityPartitionImpl.cpp"
						include "impl/ActorImpl.cpp"
						include "impl/AddStructuralFeatureValueActionImpl.cpp"
						include "impl/AddVariableValueActionImpl.cpp"
						include "impl/AnyReceiveEventImpl.cpp"
						include "impl/ArtifactImpl.cpp"
						include "impl/AssociationImpl.cpp"
						include "impl/AssociationClassImpl.cpp"
						include "impl/BehaviorImpl.cpp"
						include "impl/BehaviorExecutionSpecificationImpl.cpp"
						include "impl/BehavioralFeatureImpl.cpp"
						include "impl/BehavioredClassifierImpl.cpp"
						include "impl/BroadcastSignalActionImpl.cpp"
						include "impl/CallActionImpl.cpp"
						include "impl/CallBehaviorActionImpl.cpp"
						include "impl/CallEventImpl.cpp"
						include "impl/CallOperationActionImpl.cpp"
						include "impl/CentralBufferNodeImpl.cpp"
						include "impl/ChangeEventImpl.cpp"
						include "impl/ClassImpl.cpp"
						include "impl/ClassifierImpl.cpp"
						include "impl/ClassifierTemplateParameterImpl.cpp"
						include "impl/ClauseImpl.cpp"
						include "impl/ClearAssociationActionImpl.cpp"
						include "impl/ClearStructuralFeatureActionImpl.cpp"
						include "impl/ClearVariableActionImpl.cpp"
						include "impl/CollaborationImpl.cpp"
						include "impl/CollaborationUseImpl.cpp"
						include "impl/CombinedFragmentImpl.cpp"
						include "impl/CommentImpl.cpp"
						include "impl/CommunicationPathImpl.cpp"
						include "impl/ComponentImpl.cpp"
						include "impl/ComponentRealizationImpl.cpp"
						include "impl/ConditionalNodeImpl.cpp"
						include "impl/ConnectableElementImpl.cpp"
						include "impl/ConnectableElementTemplateParameterImpl.cpp"
						include "impl/ConnectionPointReferenceImpl.cpp"
						include "impl/ConnectorImpl.cpp"
						include "impl/ConnectorEndImpl.cpp"
						include "impl/ConsiderIgnoreFragmentImpl.cpp"
						include "impl/ConstraintImpl.cpp"
						include "impl/ContinuationImpl.cpp"
						include "impl/ControlFlowImpl.cpp"
						include "impl/ControlNodeImpl.cpp"
						include "impl/CreateLinkActionImpl.cpp"
						include "impl/CreateLinkObjectActionImpl.cpp"
						include "impl/CreateObjectActionImpl.cpp"
						include "impl/DataStoreNodeImpl.cpp"
						include "impl/DataTypeImpl.cpp"
						include "impl/DecisionNodeImpl.cpp"
						include "impl/DependencyImpl.cpp"
						include "impl/DeployedArtifactImpl.cpp"
						include "impl/DeploymentImpl.cpp"
						include "impl/DeploymentSpecificationImpl.cpp"
						include "impl/DeploymentTargetImpl.cpp"
						include "impl/DestroyLinkActionImpl.cpp"
						include "impl/DestroyObjectActionImpl.cpp"
						include "impl/DestructionOccurrenceSpecificationImpl.cpp"
						include "impl/DeviceImpl.cpp"
						include "impl/DirectedRelationshipImpl.cpp"
						include "impl/DurationImpl.cpp"
						include "impl/DurationConstraintImpl.cpp"
						include "impl/DurationIntervalImpl.cpp"
						include "impl/DurationObservationImpl.cpp"
						include "impl/ElementImpl.cpp"
						include "impl/ElementImportImpl.cpp"
						include "impl/EncapsulatedClassifierImpl.cpp"
						include "impl/EnumerationImpl.cpp"
						include "impl/EnumerationLiteralImpl.cpp"
						include "impl/EventImpl.cpp"
						include "impl/ExceptionHandlerImpl.cpp"
						include "impl/ExecutableNodeImpl.cpp"
						include "impl/ExecutionEnvironmentImpl.cpp"
						include "impl/ExecutionOccurrenceSpecificationImpl.cpp"
						include "impl/ExecutionSpecificationImpl.cpp"
						include "impl/ExpansionNodeImpl.cpp"
						include "impl/ExpansionRegionImpl.cpp"
						include "impl/ExpressionImpl.cpp"
						include "impl/ExtendImpl.cpp"
						include "impl/ExtensionImpl.cpp"
						include "impl/ExtensionEndImpl.cpp"
						include "impl/ExtensionPointImpl.cpp"
						include "impl/FactoryImpl.cpp"
						include "impl/FeatureImpl.cpp"
						include "impl/FinalNodeImpl.cpp"
						include "impl/FinalStateImpl.cpp"
						include "impl/FlowFinalNodeImpl.cpp"
						include "impl/ForkNodeImpl.cpp"
						include "impl/FunctionBehaviorImpl.cpp"
						include "impl/GateImpl.cpp"
						include "impl/GeneralOrderingImpl.cpp"
						include "impl/GeneralizationImpl.cpp"
						include "impl/GeneralizationSetImpl.cpp"
						include "impl/ImageImpl.cpp"
						include "impl/IncludeImpl.cpp"
						include "impl/InformationFlowImpl.cpp"
						include "impl/InformationItemImpl.cpp"
						include "impl/InitialNodeImpl.cpp"
						include "impl/InputPinImpl.cpp"
						include "impl/InstanceSpecificationImpl.cpp"
						include "impl/InstanceValueImpl.cpp"
						include "impl/InteractionImpl.cpp"
						include "impl/InteractionConstraintImpl.cpp"
						include "impl/InteractionFragmentImpl.cpp"
						include "impl/InteractionOperandImpl.cpp"
						include "impl/InteractionUseImpl.cpp"
						include "impl/InterfaceImpl.cpp"
						include "impl/InterfaceRealizationImpl.cpp"
						include "impl/InterruptibleActivityRegionImpl.cpp"
						include "impl/IntervalImpl.cpp"
						include "impl/IntervalConstraintImpl.cpp"
						include "impl/InvocationActionImpl.cpp"
						include "impl/JoinNodeImpl.cpp"
						include "impl/LifelineImpl.cpp"
						include "impl/LinkActionImpl.cpp"
						include "impl/LinkEndCreationDataImpl.cpp"
						include "impl/LinkEndDataImpl.cpp"
						include "impl/LinkEndDestructionDataImpl.cpp"
						include "impl/LiteralBooleanImpl.cpp"
						include "impl/LiteralIntegerImpl.cpp"
						include "impl/LiteralNullImpl.cpp"
						include "impl/LiteralRealImpl.cpp"
						include "impl/LiteralSpecificationImpl.cpp"
						include "impl/LiteralStringImpl.cpp"
						include "impl/LiteralUnlimitedNaturalImpl.cpp"
						include "impl/LoopNodeImpl.cpp"
						include "impl/ManifestationImpl.cpp"
						include "impl/MergeNodeImpl.cpp"
						include "impl/MessageImpl.cpp"
						include "impl/MessageEndImpl.cpp"
						include "impl/MessageEventImpl.cpp"
						include "impl/MessageOccurrenceSpecificationImpl.cpp"
						include "impl/ModelImpl.cpp"
						include "impl/MultiplicityElementImpl.cpp"
						include "impl/NamedElementImpl.cpp"
						include "impl/NamespaceImpl.cpp"
						include "impl/NodeImpl.cpp"
						include "impl/ObjectImpl.cpp"
						include "impl/ObjectFlowImpl.cpp"
						include "impl/ObjectNodeImpl.cpp"
						include "impl/ObservationImpl.cpp"
						include "impl/OccurrenceSpecificationImpl.cpp"
						include "impl/OpaqueActionImpl.cpp"
						include "impl/OpaqueBehaviorImpl.cpp"
						include "impl/OpaqueExpressionImpl.cpp"
						include "impl/OperationImpl.cpp"
						include "impl/OperationTemplateParameterImpl.cpp"
						include "impl/OutputPinImpl.cpp"
						include "impl/PackageImpl.cpp"
						include "impl/PackageImportImpl.cpp"
						include "impl/PackageMergeImpl.cpp"
						include "impl/PackageableElementImpl.cpp"
						include "impl/ParameterImpl.cpp"
						include "impl/ParameterSetImpl.cpp"
						include "impl/ParameterableElementImpl.cpp"
						include "impl/PartDecompositionImpl.cpp"
						include "impl/PinImpl.cpp"
						include "impl/PortImpl.cpp"
						include "impl/PrimitiveTypeImpl.cpp"
						include "impl/ProfileImpl.cpp"
						include "impl/ProfileApplicationImpl.cpp"
						include "impl/PropertyImpl.cpp"
						include "impl/ProtocolConformanceImpl.cpp"
						include "impl/ProtocolStateMachineImpl.cpp"
						include "impl/ProtocolTransitionImpl.cpp"
						include "impl/PseudostateImpl.cpp"
						include "impl/QualifierValueImpl.cpp"
						include "impl/RaiseExceptionActionImpl.cpp"
						include "impl/ReadExtentActionImpl.cpp"
						include "impl/ReadIsClassifiedObjectActionImpl.cpp"
						include "impl/ReadLinkActionImpl.cpp"
						include "impl/ReadLinkObjectEndActionImpl.cpp"
						include "impl/ReadLinkObjectEndQualifierActionImpl.cpp"
						include "impl/ReadSelfActionImpl.cpp"
						include "impl/ReadStructuralFeatureActionImpl.cpp"
						include "impl/ReadVariableActionImpl.cpp"
						include "impl/RealizationImpl.cpp"
						include "impl/ReceptionImpl.cpp"
						include "impl/ReclassifyObjectActionImpl.cpp"
						include "impl/RedefinableElementImpl.cpp"
						include "impl/RedefinableTemplateSignatureImpl.cpp"
						include "impl/ReduceActionImpl.cpp"
						include "impl/RegionImpl.cpp"
						include "impl/RelationshipImpl.cpp"
						include "impl/RemoveStructuralFeatureValueActionImpl.cpp"
						include "impl/RemoveVariableValueActionImpl.cpp"
						include "impl/ReplyActionImpl.cpp"
						include "impl/SendObjectActionImpl.cpp"
						include "impl/SendSignalActionImpl.cpp"
						include "impl/SequenceNodeImpl.cpp"
						include "impl/SignalImpl.cpp"
						include "impl/SignalEventImpl.cpp"
						include "impl/SlotImpl.cpp"
						include "impl/StartClassifierBehaviorActionImpl.cpp"
						include "impl/StartObjectBehaviorActionImpl.cpp"
						include "impl/StateImpl.cpp"
						include "impl/StateInvariantImpl.cpp"
						include "impl/StateMachineImpl.cpp"
						include "impl/StereotypeImpl.cpp"
						include "impl/StringExpressionImpl.cpp"
						include "impl/StructuralFeatureImpl.cpp"
						include "impl/StructuralFeatureActionImpl.cpp"
						include "impl/StructuredActivityNodeImpl.cpp"
						include "impl/StructuredClassifierImpl.cpp"
						include "impl/SubstitutionImpl.cpp"
						include "impl/TemplateBindingImpl.cpp"
						include "impl/TemplateParameterImpl.cpp"
						include "impl/TemplateParameterSubstitutionImpl.cpp"
						include "impl/TemplateSignatureImpl.cpp"
						include "impl/TemplateableElementImpl.cpp"
						include "impl/TestIdentityActionImpl.cpp"
						include "impl/TimeConstraintImpl.cpp"
						include "impl/TimeEventImpl.cpp"
						include "impl/TimeExpressionImpl.cpp"
						include "impl/TimeIntervalImpl.cpp"
						include "impl/TimeObservationImpl.cpp"
						include "impl/TransitionImpl.cpp"
						include "impl/TriggerImpl.cpp"
						include "impl/TypeImpl.cpp"
						include "impl/TypedElementImpl.cpp"
						include "impl/UnmarshallActionImpl.cpp"
						include "impl/UsageImpl.cpp"
						include "impl/UseCaseImpl.cpp"
						include "impl/ValuePinImpl.cpp"
						include "impl/ValueSpecificationImpl.cpp"
						include "impl/ValueSpecificationActionImpl.cpp"
						include "impl/VariableImpl.cpp"
						include "impl/VariableActionImpl.cpp"
						include "impl/VertexImpl.cpp"
						include "impl/WriteLinkActionImpl.cpp"
						include "impl/WriteStructuralFeatureActionImpl.cpp"
						include "impl/WriteVariableActionImpl.cpp"
						include	"impl/UmlFactoryImpl.cpp"
						include	"UmlFactory.cpp"
						include	"impl/UmlPackageImpl.cpp"
						include	"UmlPackage.cpp"
						include	"impl/UmlPluginImpl.cpp"
						include	"UmlPlugin.cpp"
						include "util.cpp"
						include "registry.cpp"
						include "stereotypestorage.cpp"
                    }
					exportedHeaders {
                        srcDirs ".", "../", System.getenv('MDE4CPP_HOME')+"/application/include", System.getenv('MDE4CPP_HOME')+"/application/include/abstractDataTypes"
						srcDirs System.getenv('MDE4CPP_HOME')+"/application/include/util"
                        include "**/*.hpp"
                    }
					lib library: "ecore"
					lib library: "types"
					lib library: "PluginFramework"
                }
            }

			binaries.withType(StaticLibraryBinarySpec) {
				buildable = false
			}
        }
		
		withType(NativeComponentSpec) {
			binaries.withType(NativeBinarySpec) {
				if(buildType == buildTypes.debug) {
					if (it instanceof SharedLibraryBinarySpec) {
						sharedLibraryFile = appendDebugSuffix(sharedLibraryFile)
						sharedLibraryLinkFile = appendDebugSuffix(sharedLibraryLinkFile)
					} else if (it instanceof StaticLibraryBinarySpec) {
						staticLibraryFile = appendDebugSuffix(staticLibraryFile)
					} else {
						throw new GradleException("Unknown native library binary")
					}
				}
			}
        }
    }
    
    binaries {
        all {
			linker.args '-fopenmp'
        	cppCompiler.args '-std=c++1y','-Wall', '-Wno-overloaded-virtual', '-Wdeprecated-declarations', '-pipe', '-fmax-errors=5', '-fopenmp'
			if (buildType == buildTypes.debug) {
				cppCompiler.args '-g'
			}
			else {
				cppCompiler.args '-O1', '-DNDEBUG'
			}
        }
    }
}

build.finalizedBy(deliverUml)
